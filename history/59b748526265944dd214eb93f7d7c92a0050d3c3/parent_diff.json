{"from": {"secList": ["sec-string.prototype.lastindexof"], "secData": {"sec-string.prototype.lastindexof": {"num": "22.1.3.10", "title": "#sec-string.prototype.lastindexof String.prototype.lastIndexOf ( searchString [ , position ] )", "html": "<emu-clause id=\"sec-string.prototype.lastindexof\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.lastindexof\">#sec-string.prototype.lastindexof</span> String.prototype.lastIndexOf ( <var>searchString</var> [ , <var>position</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>If <var>searchString</var> appears as a <emu-not-ref>substring</emu-not-ref> of the result of converting this object to a String at one or more indices that are smaller than or equal to <var>position</var>, then the greatest such index is returned; otherwise, <emu-val>-1</emu-val><sub>&#120125;</sub> is returned. If <var>position</var> is <emu-val>undefined</emu-val>, the length of the String value is assumed, so as to search all of the String.</p>\n        </div></emu-note>\n        <p>The <code>lastIndexOf</code> method takes two arguments, <var>searchString</var> and <var>position</var>, and performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>searchStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>searchString</var>).</li><li>Let <var>numPos</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>position</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>position</var> is <emu-val>undefined</emu-val>, then <var>numPos</var> is <emu-val>NaN</emu-val>.</li><li>If <var>numPos</var> is <emu-val>NaN</emu-val>, let <var>pos</var> be +&#8734;; otherwise, let <var>pos</var> be !&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>numPos</var>).</li><li>Let <var>len</var> be the length of <var>S</var>.</li><li>Let <var>start</var> be the result of <emu-xref href=\"#clamping\"><a href=\"#clamping\">clamping</a></emu-xref> <var>pos</var> between 0 and <var>len</var>.</li><li>Let <var>searchLen</var> be the length of <var>searchStr</var>.</li><li>Let <var>k</var> be the largest possible non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> not larger than <var>start</var> such that <var>k</var> + <var>searchLen</var> &#8804; <var>len</var>, and for all non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integers</a></emu-xref> <var>j</var> such that <var>j</var> &lt; <var>searchLen</var>, the code unit at index <var>k</var> + <var>j</var> within <var>S</var> is the same as the code unit at index <var>j</var> within <var>searchStr</var>; but if there is no such <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, let <var>k</var> be -1.</li><li>Return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>lastIndexOf</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-string.prototype.lastindexof"], "secData": {"sec-string.prototype.lastindexof": {"num": "22.1.3.10", "title": "#sec-string.prototype.lastindexof String.prototype.lastIndexOf ( searchString [ , position ] )", "html": "<emu-clause id=\"sec-string.prototype.lastindexof\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.lastindexof\">#sec-string.prototype.lastindexof</span> String.prototype.lastIndexOf ( <var>searchString</var> [ , <var>position</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>If <var>searchString</var> appears as a <emu-not-ref>substring</emu-not-ref> of the result of converting this object to a String at one or more indices that are smaller than or equal to <var>position</var>, then the greatest such index is returned; otherwise, <emu-val>-1</emu-val><sub>&#120125;</sub> is returned. If <var>position</var> is <emu-val>undefined</emu-val>, the length of the String value is assumed, so as to search all of the String.</p>\n        </div></emu-note>\n        <p>The <code>lastIndexOf</code> method takes two arguments, <var>searchString</var> and <var>position</var>, and performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>searchStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>searchString</var>).</li><li>Let <var>numPos</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>position</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>position</var> is <emu-val>undefined</emu-val>, then <var>numPos</var> is <emu-val>NaN</emu-val>.</li><li>If <var>numPos</var> is <emu-val>NaN</emu-val>, let <var>pos</var> be +&#8734;; otherwise, let <var>pos</var> be !&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>numPos</var>).</li><li>Let <var>len</var> be the length of <var>S</var>.</li><li>Let <var>start</var> be the result of <emu-xref href=\"#clamping\"><a href=\"#clamping\">clamping</a></emu-xref> <var>pos</var> between 0 and <var>len</var>.</li><li>If <var>searchStr</var> is the empty String, return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>start</var>).</li><li>Let <var>searchLen</var> be the length of <var>searchStr</var>.</li><li>For each non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> starting with <var>start</var> such that <var>i</var> &#8804; <var>len</var> - <var>searchLen</var>, in descending order, do<ol><li>Let <var>candidate</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>i</var> to <var>i</var> + <var>searchLen</var>.</li><li>If <var>candidate</var> is the same sequence of code units as <var>searchStr</var>, return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>i</var>).</li></ol></li><li>Return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>lastIndexOf</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}}, "figData": {}}}