{"from": {"secList": ["sec-function-definitions", "sec-syntax-directed-operations-function-name-inference"], "secData": {"sec-function-definitions": {"num": "15.2", "title": "#sec-function-definitions Function Definitions", "html": "<emu-clause id=\"sec-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions\">#sec-function-definitions</span> Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"FunctionDeclaration\" params=\"Yield, Await, Default\" id=\"prod-FunctionDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7c02f6b3\">\n        <emu-t>function</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"ff05b860\" constraints=\"+Default\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionExpression\" id=\"prod-FunctionExpression\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1faafdcc\">\n        <emu-t>function</emu-t>\n        <emu-nt params=\"~Yield, ~Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionBody\" params=\"Yield, Await\" id=\"prod-FunctionBody\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"82527203\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionStatementList\" params=\"Yield, Await\" id=\"prod-FunctionStatementList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"2267baf8\"><emu-nt params=\"?Yield, ?Await, +Return\" optional=\"\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[?Yield, ?Await, +Return]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">15.2.1</span>#sec-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-functionbodycontainsusestrict\"><h1><span class=\"secnum\">15.2.2</span>#sec-static-semantics-functionbodycontainsusestrict Static Semantics: FunctionBodyContainsUseStrict</h1>...</div><div id=\"excluded-sec-static-semantics-hasname\"><h1><span class=\"secnum\">15.2.3</span>#sec-static-semantics-hasname Static Semantics: HasName</h1>...</div><div id=\"excluded-sec-static-semantics-isfunctiondefinition\"><h1><span class=\"secnum\">15.2.4</span>#sec-static-semantics-isfunctiondefinition Static Semantics: IsFunctionDefinition</h1>...</div><div id=\"excluded-sec-isanonymousfunctiondefinition\"><h1><span class=\"secnum\">15.2.5</span>#sec-isanonymousfunctiondefinition Static Semantics: IsAnonymousFunctionDefinition ( expr )</h1>...</div><div id=\"excluded-sec-runtime-semantics-evaluatefunctionbody\"><h1><span class=\"secnum\">15.2.6</span>#sec-runtime-semantics-evaluatefunctionbody Runtime Semantics: EvaluateFunctionBody</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateordinaryfunctionobject\"><h1><span class=\"secnum\">15.2.7</span>#sec-runtime-semantics-instantiateordinaryfunctionobject Runtime Semantics: InstantiateOrdinaryFunctionObject</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateordinaryfunctionexpression\"><h1><span class=\"secnum\">15.2.8</span>#sec-runtime-semantics-instantiateordinaryfunctionexpression Runtime Semantics: InstantiateOrdinaryFunctionExpression</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.2.9</span>#sec-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-syntax-directed-operations-function-name-inference": {"num": "8.3", "title": "#sec-syntax-directed-operations-function-name-inference Function Name Inference", "html": "<emu-clause id=\"sec-syntax-directed-operations-function-name-inference\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-syntax-directed-operations-function-name-inference\">#sec-syntax-directed-operations-function-name-inference</span> Function Name Inference</h1>\n\n    <div id=\"excluded-sec-static-semantics-isidentifierref\"><h1><span class=\"secnum\">8.3.1</span>#sec-static-semantics-isidentifierref Static Semantics: IsIdentifierRef</h1>...</div><div id=\"excluded-sec-runtime-semantics-namedevaluation\"><h1><span class=\"secnum\">8.3.2</span>#sec-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation</h1>...</div></emu-clause>\n\n  "}}, "figData": {}}, "to": {"secList": ["sec-function-definitions", "sec-syntax-directed-operations-function-name-inference"], "secData": {"sec-function-definitions": {"num": "15.2", "title": "#sec-function-definitions Function Definitions", "html": "<emu-clause id=\"sec-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions\">#sec-function-definitions</span> Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"FunctionDeclaration\" params=\"Yield, Await, Default\" id=\"prod-FunctionDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7c02f6b3\">\n        <emu-t>function</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"ff05b860\" constraints=\"+Default\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionExpression\" id=\"prod-FunctionExpression\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1faafdcc\">\n        <emu-t>function</emu-t>\n        <emu-nt params=\"~Yield, ~Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionBody\" params=\"Yield, Await\" id=\"prod-FunctionBody\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"82527203\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionStatementList\" params=\"Yield, Await\" id=\"prod-FunctionStatementList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"2267baf8\"><emu-nt params=\"?Yield, ?Await, +Return\" optional=\"\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[?Yield, ?Await, +Return]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">15.2.1</span>#sec-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-functionbodycontainsusestrict\"><h1><span class=\"secnum\">15.2.2</span>#sec-static-semantics-functionbodycontainsusestrict Static Semantics: FunctionBodyContainsUseStrict</h1>...</div><div id=\"excluded-sec-runtime-semantics-evaluatefunctionbody\"><h1><span class=\"secnum\">15.2.3</span>#sec-runtime-semantics-evaluatefunctionbody Runtime Semantics: EvaluateFunctionBody</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateordinaryfunctionobject\"><h1><span class=\"secnum\">15.2.4</span>#sec-runtime-semantics-instantiateordinaryfunctionobject Runtime Semantics: InstantiateOrdinaryFunctionObject</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateordinaryfunctionexpression\"><h1><span class=\"secnum\">15.2.5</span>#sec-runtime-semantics-instantiateordinaryfunctionexpression Runtime Semantics: InstantiateOrdinaryFunctionExpression</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.2.6</span>#sec-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-syntax-directed-operations-function-name-inference": {"num": "8.3", "title": "#sec-syntax-directed-operations-function-name-inference Function Name Inference", "html": "<emu-clause id=\"sec-syntax-directed-operations-function-name-inference\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-syntax-directed-operations-function-name-inference\">#sec-syntax-directed-operations-function-name-inference</span> Function Name Inference</h1>\n    <div id=\"excluded-sec-static-semantics-hasname\"><h1><span class=\"secnum\">8.3.1</span>#sec-static-semantics-hasname Static Semantics: HasName</h1>...</div><div id=\"excluded-sec-static-semantics-isfunctiondefinition\"><h1><span class=\"secnum\">8.3.2</span>#sec-static-semantics-isfunctiondefinition Static Semantics: IsFunctionDefinition</h1>...</div><div id=\"excluded-sec-isanonymousfunctiondefinition\"><h1><span class=\"secnum\">8.3.3</span>#sec-isanonymousfunctiondefinition Static Semantics: IsAnonymousFunctionDefinition ( expr )</h1>...</div><div id=\"excluded-sec-static-semantics-isidentifierref\"><h1><span class=\"secnum\">8.3.4</span>#sec-static-semantics-isidentifierref Static Semantics: IsIdentifierRef</h1>...</div><div id=\"excluded-sec-runtime-semantics-namedevaluation\"><h1><span class=\"secnum\">8.3.5</span>#sec-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation</h1>...</div></emu-clause>\n\n  "}}, "figData": {}}}