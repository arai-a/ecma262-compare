{"from": {"secList": ["sec-object.getownpropertynames", "sec-getownpropertykeys", "sec-object.getownpropertysymbols"], "secData": {"sec-object.getownpropertynames": {"num": "19.1.2.10", "title": "#sec-object.getownpropertynames Object.getOwnPropertyNames ( O )", "html": "<emu-clause id=\"sec-object.getownpropertynames\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.getownpropertynames\">#sec-object.getownpropertynames</span> Object.getOwnPropertyNames ( <var>O</var> )</h1>\n        <p>When the <code>getOwnPropertyNames</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"GetOwnPropertyKeys\"><a href=\"#sec-getownpropertykeys\">GetOwnPropertyKeys</a></emu-xref>(<var>O</var>, String).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-getownpropertykeys": {"num": "19.1.2.11.1", "title": "#sec-getownpropertykeys Runtime Semantics: GetOwnPropertyKeys ( O, type )", "html": "<emu-clause id=\"sec-getownpropertykeys\" aoid=\"GetOwnPropertyKeys\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getownpropertykeys\">#sec-getownpropertykeys</span> Runtime Semantics: GetOwnPropertyKeys ( <var>O</var>, <var>type</var> )</h1>\n          <p>The abstract operation GetOwnPropertyKeys is called with arguments <var>O</var> and <var>type</var> where <var>O</var> is an Object and <var>type</var> is one of the ECMAScript specification types String or Symbol. The following steps are taken:</p>\n          <emu-alg><ol><li>Let <var>obj</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>O</var>).</li><li>Let <var>keys</var> be ? <var>obj</var>.[[OwnPropertyKeys]]().</li><li>Let <var>nameList</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>nextKey</var> of <var>keys</var> in <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order, do<ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>nextKey</var>) is <var>type</var>, then<ol><li>Append <var>nextKey</var> as the last element of <var>nameList</var>.</li></ol></li></ol></li><li>Return <emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>nameList</var>).\n          </li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-object.getownpropertysymbols": {"num": "19.1.2.11", "title": "#sec-object.getownpropertysymbols Object.getOwnPropertySymbols ( O )", "html": "<emu-clause id=\"sec-object.getownpropertysymbols\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.getownpropertysymbols\">#sec-object.getownpropertysymbols</span> Object.getOwnPropertySymbols ( <var>O</var> )</h1>\n        <p>When the <code>getOwnPropertySymbols</code> function is called with argument <var>O</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"GetOwnPropertyKeys\"><a href=\"#sec-getownpropertykeys\">GetOwnPropertyKeys</a></emu-xref>(<var>O</var>, Symbol).\n        </li></ol></emu-alg>\n\n        <div id=\"excluded-sec-getownpropertykeys\"><h1><span class=\"secnum\">19.1.2.11.1</span>#sec-getownpropertykeys Runtime Semantics: GetOwnPropertyKeys ( O, type )</h1>...</div></emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-object.getownpropertynames", "sec-getownpropertykeys", "sec-object.getownpropertysymbols"], "secData": {"sec-object.getownpropertynames": {"num": "19.1.2.10", "title": "#sec-object.getownpropertynames Object.getOwnPropertyNames ( O )", "html": "<emu-clause id=\"sec-object.getownpropertynames\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.getownpropertynames\">#sec-object.getownpropertynames</span> Object.getOwnPropertyNames ( <var>O</var> )</h1>\n        <p>When the <code>getOwnPropertyNames</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"GetOwnPropertyKeys\"><a href=\"#sec-getownpropertykeys\">GetOwnPropertyKeys</a></emu-xref>(<var>O</var>, <emu-const>string</emu-const>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-getownpropertykeys": {"num": "19.1.2.11.1", "title": "#sec-getownpropertykeys Runtime Semantics: GetOwnPropertyKeys ( O, type )", "html": "<emu-clause id=\"sec-getownpropertykeys\" aoid=\"GetOwnPropertyKeys\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getownpropertykeys\">#sec-getownpropertykeys</span> Runtime Semantics: GetOwnPropertyKeys ( <var>O</var>, <var>type</var> )</h1>\n          <p>The abstract operation GetOwnPropertyKeys is called with arguments <var>O</var> and <var>type</var> where <var>O</var> is an Object and <var>type</var> is one of <emu-const>string</emu-const> or <emu-const>symbol</emu-const>. The following steps are taken:</p>\n          <emu-alg><ol><li>Let <var>obj</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>O</var>).</li><li>Let <var>keys</var> be ? <var>obj</var>.[[OwnPropertyKeys]]().</li><li>Let <var>nameList</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>nextKey</var> of <var>keys</var> in <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order, do<ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>nextKey</var>) is Symbol and <var>type</var> is <emu-const>symbol</emu-const> or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>nextKey</var>) is String and <var>type</var> is <emu-const>string</emu-const>, then<ol><li>Append <var>nextKey</var> as the last element of <var>nameList</var>.</li></ol></li></ol></li><li>Return <emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>nameList</var>).\n          </li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-object.getownpropertysymbols": {"num": "19.1.2.11", "title": "#sec-object.getownpropertysymbols Object.getOwnPropertySymbols ( O )", "html": "<emu-clause id=\"sec-object.getownpropertysymbols\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.getownpropertysymbols\">#sec-object.getownpropertysymbols</span> Object.getOwnPropertySymbols ( <var>O</var> )</h1>\n        <p>When the <code>getOwnPropertySymbols</code> function is called with argument <var>O</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"GetOwnPropertyKeys\"><a href=\"#sec-getownpropertykeys\">GetOwnPropertyKeys</a></emu-xref>(<var>O</var>, <emu-const>symbol</emu-const>).\n        </li></ol></emu-alg>\n\n        <div id=\"excluded-sec-getownpropertykeys\"><h1><span class=\"secnum\">19.1.2.11.1</span>#sec-getownpropertykeys Runtime Semantics: GetOwnPropertyKeys ( O, type )</h1>...</div></emu-clause>\n\n      "}}, "figData": {}}}