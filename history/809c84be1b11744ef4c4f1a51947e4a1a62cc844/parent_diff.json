{"from": {"secList": ["sec-getactivescriptormodule"], "secData": {"sec-getactivescriptormodule": {"num": "8.3.1", "title": "#sec-getactivescriptormodule GetActiveScriptOrModule ( )", "html": "<emu-clause id=\"sec-getactivescriptormodule\" aoid=\"GetActiveScriptOrModule\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getactivescriptormodule\">#sec-getactivescriptormodule</span> GetActiveScriptOrModule ( )</h1>\n      <p>The GetActiveScriptOrModule abstract operation is used to determine the running script or module, based on the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>. GetActiveScriptOrModule performs the following steps:</p>\n\n      <emu-alg><ol><li>If the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> is empty, return <emu-val>null</emu-val>.</li><li>Let <var>ec</var> be the topmost <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> on the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> whose ScriptOrModule component is not <emu-val>null</emu-val>.</li><li>If no such <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> exists, return <emu-val>null</emu-val>. Otherwise, return <var>ec</var>'s ScriptOrModule component.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}}, "figData": {}}, "to": {"secList": ["sec-getactivescriptormodule"], "secData": {"sec-getactivescriptormodule": {"num": "8.3.1", "title": "#sec-getactivescriptormodule GetActiveScriptOrModule ( )", "html": "<emu-clause id=\"sec-getactivescriptormodule\" aoid=\"GetActiveScriptOrModule\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getactivescriptormodule\">#sec-getactivescriptormodule</span> GetActiveScriptOrModule ( )</h1>\n      <p>The GetActiveScriptOrModule abstract operation is used to determine the running script or module, based on the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>. GetActiveScriptOrModule performs the following steps:</p>\n\n      <emu-alg><ol><li>If the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> is empty, return <emu-val>null</emu-val>.</li><li>Let <var>ec</var> be the topmost <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> on the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> whose ScriptOrModule component is not <emu-val>null</emu-val>.</li><li>If no such <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> exists, return <emu-val>null</emu-val>. Otherwise, return <var>ec</var>'s ScriptOrModule.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}}, "figData": {}}}