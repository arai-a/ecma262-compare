{"from": {"secList": ["sec-atomescape", "sec-runtime-semantics-unicodematchproperty-p", "sec-runtime-semantics-canonicalize-ch", "sec-runtime-semantics-characterrange-abstract-operation", "sec-characterclassescape", "sec-nonemptyclassranges", "sec-atom", "sec-backreference-matcher"], "secData": {"sec-atomescape": {"num": "22.2.2.9", "title": "#sec-atomescape AtomEscape", "html": "<emu-clause id=\"sec-atomescape\" oldids=\"sec-characterescape,sec-decimalescape\"><span id=\"sec-decimalescape\"></span><span id=\"sec-characterescape\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomescape\">#sec-atomescape</span> AtomEscape</h1>\n        <p>With parameter <var>direction</var>.</p>\n        <p>The production <emu-grammar><emu-production name=\"AtomEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-AtomEscape\">AtomEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"fr_5bnut\"><emu-nt><a href=\"#prod-DecimalEscape\">DecimalEscape</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Let <var>n</var> be the <emu-xref aoid=\"CapturingGroupNumber\"><a href=\"#sec-patterns-static-semantics-capturing-group-number\">CapturingGroupNumber</a></emu-xref> of <emu-nt><a href=\"#prod-DecimalEscape\">DecimalEscape</a></emu-nt>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>n</var> &#8804; <var>NcapturingParens</var>.</li><li>Return !&#160;<emu-xref aoid=\"BackreferenceMatcher\"><a href=\"#sec-backreference-matcher\">BackreferenceMatcher</a></emu-xref>(<var>n</var>, <var>direction</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>An escape sequence of the form <code>\\</code> followed by a non-zero decimal number <var>n</var> matches the result of the <var>n</var><sup>th</sup> set of capturing parentheses (<emu-xref href=\"#sec-notation\"><a href=\"#sec-notation\" class=\"excluded-xref\" excluded-id=\"sec-notation\">#sec-notation</a></emu-xref>). It is an error if the regular expression has fewer than <var>n</var> capturing parentheses. If the regular expression has <var>n</var> or more capturing parentheses but the <var>n</var><sup>th</sup> one is <emu-val>undefined</emu-val> because it has not captured anything, then the backreference always succeeds.</p>\n        </div></emu-note>\n        <p>The production <emu-grammar><emu-production name=\"AtomEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-AtomEscape\">AtomEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"fjarvpc8\"><emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Let <var>cv</var> be the <emu-xref aoid=\"CharacterValue\"><a href=\"#sec-patterns-static-semantics-character-value\">CharacterValue</a></emu-xref> of <emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt>.</li><li>Let <var>ch</var> be the character whose character value is <var>cv</var>.</li><li>Let <var>A</var> be a one-element CharSet containing the character <var>ch</var>.</li><li>Return !&#160;<emu-xref aoid=\"CharacterSetMatcher\"><a href=\"#sec-runtime-semantics-charactersetmatcher-abstract-operation\">CharacterSetMatcher</a></emu-xref>(<var>A</var>, <emu-val>false</emu-val>, <var>direction</var>).</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"AtomEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-AtomEscape\">AtomEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"bww-5j2p\"><emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Evaluate <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> to obtain a CharSet <var>A</var>.</li><li>Return !&#160;<emu-xref aoid=\"CharacterSetMatcher\"><a href=\"#sec-runtime-semantics-charactersetmatcher-abstract-operation\">CharacterSetMatcher</a></emu-xref>(<var>A</var>, <emu-val>false</emu-val>, <var>direction</var>).</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"AtomEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-AtomEscape\">AtomEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"dd_xjonr\">\n        <emu-t>k</emu-t>\n        <emu-nt><a href=\"#prod-GroupName\">GroupName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Search the enclosing <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> for an instance of a <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt> containing a <emu-nt><a href=\"#prod-RegExpIdentifierName\">RegExpIdentifierName</a></emu-nt> which has a <emu-xref aoid=\"CapturingGroupName\"><a href=\"#sec-static-semantics-capturinggroupname\">CapturingGroupName</a></emu-xref> equal to the <emu-xref aoid=\"CapturingGroupName\"><a href=\"#sec-static-semantics-capturinggroupname\">CapturingGroupName</a></emu-xref> of the <emu-nt><a href=\"#prod-RegExpIdentifierName\">RegExpIdentifierName</a></emu-nt> contained in <emu-nt><a href=\"#prod-GroupName\">GroupName</a></emu-nt>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: A unique such <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt> is found.</li><li>Let <var>parenIndex</var> be the number of left-capturing parentheses in the entire regular expression that occur to the left of the located <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt>. This is the total number of <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"waoim9ah\">\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Nodes</a></emu-xref> prior to or enclosing the located <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt>, including its immediately enclosing <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"BackreferenceMatcher\"><a href=\"#sec-backreference-matcher\">BackreferenceMatcher</a></emu-xref>(<var>parenIndex</var>, <var>direction</var>).</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-backreference-matcher\"><h1><span class=\"secnum\">22.2.2.9.1</span>#sec-backreference-matcher BackreferenceMatcher ( n, direction )</h1>...</div></emu-clause>\n\n      "}, "sec-runtime-semantics-unicodematchproperty-p": {"num": "22.2.2.8.3", "title": "#sec-runtime-semantics-unicodematchproperty-p UnicodeMatchProperty ( p )", "html": "<emu-clause id=\"sec-runtime-semantics-unicodematchproperty-p\" type=\"abstract operation\" aoid=\"UnicodeMatchProperty\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-unicodematchproperty-p\">#sec-runtime-semantics-unicodematchproperty-p</span> UnicodeMatchProperty ( <var>p</var> )</h1>\n          <p>The abstract operation UnicodeMatchProperty takes argument <var>p</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Unicode code points). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>p</var> is a Unicode <emu-not-ref>property name</emu-not-ref> or property alias listed in the &#8220;<emu-not-ref>Property name</emu-not-ref> and aliases&#8221; column of <emu-xref href=\"#table-nonbinary-unicode-properties\"><a href=\"#table-nonbinary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</a></emu-xref> or <emu-xref href=\"#table-binary-unicode-properties\"><a href=\"#table-binary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</a></emu-xref>.</li><li>Let <var>c</var> be the canonical <emu-not-ref>property name</emu-not-ref> of <var>p</var> as given in the &#8220;Canonical <emu-not-ref>property name</emu-not-ref>&#8221; column of the corresponding row.</li><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Unicode code points <var>c</var>.</li></ol></emu-alg>\n          <p>Implementations must support the Unicode property names and aliases listed in <emu-xref href=\"#table-nonbinary-unicode-properties\"><a href=\"#table-nonbinary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</a></emu-xref> and <emu-xref href=\"#table-binary-unicode-properties\"><a href=\"#table-binary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</a></emu-xref>. To ensure interoperability, implementations must not support any other property names or aliases.</p>\n          <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n            <p>For example, <code>Script_Extensions</code> (<emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref>) and <code>scx</code> (property alias) are valid, but <code>script_extensions</code> or <code>Scx</code> aren't.</p>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n            <p>The listed properties form a superset of what <a href=\"https://unicode.org/reports/tr18/#RL1.2\">UTS18 RL1.2</a> requires.</p>\n          </div></emu-note>\n          <emu-import href=\"table-nonbinary-unicode-properties.html\"><emu-table id=\"table-nonbinary-unicode-properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</span>: Non-binary Unicode property aliases and their canonical property names</figcaption>\n  \n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th><emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref> and aliases</th>\n        <th>Canonical <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref></th>\n      </tr>\n    </thead>\n    <tbody><tr>\n      <td><code>General_Category</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>General_Category</code></a></td>\n    </tr>\n    <tr>\n      <td><code>gc</code></td>\n    </tr>\n    <tr>\n      <td><code>Script</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr24/#Script\"><code>Script</code></a></td>\n    </tr>\n    <tr>\n      <td><code>sc</code></td>\n    </tr>\n    <tr>\n      <td><code>Script_Extensions</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr24/#Script_Extensions\"><code>Script_Extensions</code></a></td>\n    </tr>\n    <tr>\n      <td><code>scx</code></td>\n    </tr>\n  </tbody></table>\n</figure></emu-table></emu-import>\n          <emu-import href=\"table-binary-unicode-properties.html\"><emu-table id=\"table-binary-unicode-properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</span>: Binary Unicode property aliases and their canonical property names</figcaption>\n  \n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th><emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref> and aliases</th>\n        <th>Canonical <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref></th>\n      </tr>\n    </thead>\n    <tbody><tr>\n      <td><code>ASCII</code></td>\n      <td><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>ASCII</code></a></td>\n    </tr>\n    <tr>\n      <td><code>ASCII_Hex_Digit</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#ASCII_Hex_Digit\"><code>ASCII_Hex_Digit</code></a></td>\n    </tr>\n    <tr>\n      <td><code>AHex</code></td>\n    </tr>\n    <tr>\n      <td><code>Alphabetic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Alphabetic\"><code>Alphabetic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Alpha</code></td>\n    </tr>\n    <tr>\n      <td><code>Any</code></td>\n      <td><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>Any</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Assigned</code></td>\n      <td><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>Assigned</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_Control</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Bidi_Control\"><code>Bidi_Control</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_C</code></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_Mirrored</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Bidi_Mirrored\"><code>Bidi_Mirrored</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_M</code></td>\n    </tr>\n    <tr>\n      <td><code>Case_Ignorable</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Case_Ignorable\"><code>Case_Ignorable</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CI</code></td>\n    </tr>\n    <tr>\n      <td><code>Cased</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Cased\"><code>Cased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Casefolded</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWCF\"><code>Changes_When_Casefolded</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWCF</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Casemapped</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWCM\"><code>Changes_When_Casemapped</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWCM</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Lowercased</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWL\"><code>Changes_When_Lowercased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWL</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_NFKC_Casefolded</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWKCF\"><code>Changes_When_NFKC_Casefolded</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWKCF</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Titlecased</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWT\"><code>Changes_When_Titlecased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWT</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Uppercased</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWU\"><code>Changes_When_Uppercased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWU</code></td>\n    </tr>\n    <tr>\n      <td><code>Dash</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Dash\"><code>Dash</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Default_Ignorable_Code_Point</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Default_Ignorable_Code_Point\"><code>Default_Ignorable_Code_Point</code></a></td>\n    </tr>\n    <tr>\n      <td><code>DI</code></td>\n    </tr>\n    <tr>\n      <td><code>Deprecated</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Deprecated\"><code>Deprecated</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Dep</code></td>\n    </tr>\n    <tr>\n      <td><code>Diacritic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Diacritic\"><code>Diacritic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Dia</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji</code></td>\n      <td><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Component</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Component</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EComp</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Modifier</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Modifier</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EMod</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Modifier_Base</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Modifier_Base</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EBase</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Presentation</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Presentation</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EPres</code></td>\n    </tr>\n    <tr>\n      <td><code>Extended_Pictographic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Extended_Pictographic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>ExtPict</code></td>\n    </tr>\n    <tr>\n      <td><code>Extender</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Extender\"><code>Extender</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Ext</code></td>\n    </tr>\n    <tr>\n      <td><code>Grapheme_Base</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Grapheme_Base\"><code>Grapheme_Base</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Gr_Base</code></td>\n    </tr>\n    <tr>\n      <td><code>Grapheme_Extend</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Grapheme_Extend\"><code>Grapheme_Extend</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Gr_Ext</code></td>\n    </tr>\n    <tr>\n      <td><code>Hex_Digit</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Hex_Digit\"><code>Hex_Digit</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Hex</code></td>\n    </tr>\n    <tr>\n      <td><code>IDS_Binary_Operator</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#IDS_Binary_Operator\"><code>IDS_Binary_Operator</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDSB</code></td>\n    </tr>\n    <tr>\n      <td><code>IDS_Trinary_Operator</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#IDS_Trinary_Operator\"><code>IDS_Trinary_Operator</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDST</code></td>\n    </tr>\n    <tr>\n      <td><code>ID_Continue</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#ID_Continue\"><code>ID_Continue</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDC</code></td>\n    </tr>\n    <tr>\n      <td><code>ID_Start</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#ID_Start\"><code>ID_Start</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDS</code></td>\n    </tr>\n    <tr>\n      <td><code>Ideographic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Ideographic\"><code>Ideographic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Ideo</code></td>\n    </tr>\n    <tr>\n      <td><code>Join_Control</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Join_Control\"><code>Join_Control</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Join_C</code></td>\n    </tr>\n    <tr>\n      <td><code>Logical_Order_Exception</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Logical_Order_Exception\"><code>Logical_Order_Exception</code></a></td>\n    </tr>\n    <tr>\n      <td><code>LOE</code></td>\n    </tr>\n    <tr>\n      <td><code>Lowercase</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Lowercase\"><code>Lowercase</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Lower</code></td>\n    </tr>\n    <tr>\n      <td><code>Math</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Math\"><code>Math</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Noncharacter_Code_Point</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Noncharacter_Code_Point\"><code>Noncharacter_Code_Point</code></a></td>\n    </tr>\n    <tr>\n      <td><code>NChar</code></td>\n    </tr>\n    <tr>\n      <td><code>Pattern_Syntax</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Pattern_Syntax\"><code>Pattern_Syntax</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Pat_Syn</code></td>\n    </tr>\n    <tr>\n      <td><code>Pattern_White_Space</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Pattern_White_Space\"><code>Pattern_White_Space</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Pat_WS</code></td>\n    </tr>\n    <tr>\n      <td><code>Quotation_Mark</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Quotation_Mark\"><code>Quotation_Mark</code></a></td>\n    </tr>\n    <tr>\n      <td><code>QMark</code></td>\n    </tr>\n    <tr>\n      <td><code>Radical</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Radical\"><code>Radical</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Regional_Indicator</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Regional_Indicator\"><code>Regional_Indicator</code></a></td>\n    </tr>\n    <tr>\n      <td><code>RI</code></td>\n    </tr>\n    <tr>\n      <td><code>Sentence_Terminal</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#STerm\"><code>Sentence_Terminal</code></a></td>\n    </tr>\n    <tr>\n      <td><code>STerm</code></td>\n    </tr>\n    <tr>\n      <td><code>Soft_Dotted</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Soft_Dotted\"><code>Soft_Dotted</code></a></td>\n    </tr>\n    <tr>\n      <td><code>SD</code></td>\n    </tr>\n    <tr>\n      <td><code>Terminal_Punctuation</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Terminal_Punctuation\"><code>Terminal_Punctuation</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Term</code></td>\n    </tr>\n    <tr>\n      <td><code>Unified_Ideograph</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Unified_Ideograph\"><code>Unified_Ideograph</code></a></td>\n    </tr>\n    <tr>\n      <td><code>UIdeo</code></td>\n    </tr>\n    <tr>\n      <td><code>Uppercase</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Uppercase\"><code>Uppercase</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Upper</code></td>\n    </tr>\n    <tr>\n      <td><code>Variation_Selector</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Variation_Selector\"><code>Variation_Selector</code></a></td>\n    </tr>\n    <tr>\n      <td><code>VS</code></td>\n    </tr>\n    <tr>\n      <td><code>White_Space</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#White_Space\"><code>White_Space</code></a></td>\n    </tr>\n    <tr>\n      <td><code>space</code></td>\n    </tr>\n    <tr>\n      <td><code>XID_Continue</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#XID_Continue\"><code>XID_Continue</code></a></td>\n    </tr>\n    <tr>\n      <td><code>XIDC</code></td>\n    </tr>\n    <tr>\n      <td><code>XID_Start</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#XID_Start\"><code>XID_Start</code></a></td>\n    </tr>\n    <tr>\n      <td><code>XIDS</code></td>\n    </tr>\n  </tbody></table>\n</figure></emu-table></emu-import>\n        </emu-clause>\n        "}, "sec-runtime-semantics-canonicalize-ch": {"num": "22.2.2.8.2", "title": "#sec-runtime-semantics-canonicalize-ch Canonicalize ( ch )", "html": "<emu-clause id=\"sec-runtime-semantics-canonicalize-ch\" type=\"abstract operation\" aoid=\"Canonicalize\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-canonicalize-ch\">#sec-runtime-semantics-canonicalize-ch</span> Canonicalize ( <var>ch</var> )</h1>\n          <p>The abstract operation Canonicalize takes argument <var>ch</var> (a character). It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <var>Unicode</var> is <emu-val>true</emu-val> and <var>IgnoreCase</var> is <emu-val>true</emu-val>, then<ol><li>If the file CaseFolding.txt of the Unicode Character Database provides a simple or common case folding mapping for <var>ch</var>, return the result of applying that mapping to <var>ch</var>.</li><li>Return <var>ch</var>.</li></ol></li><li>If <var>IgnoreCase</var> is <emu-val>false</emu-val>, return <var>ch</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>ch</var> is a UTF-16 code unit.</li><li>Let <var>cp</var> be the code point whose numeric value is that of <var>ch</var>.</li><li>Let <var>u</var> be the result of toUppercase(&#171; <var>cp</var> &#187;), according to the Unicode Default Case Conversion algorithm.</li><li>Let <var>uStr</var> be !&#160;<emu-xref aoid=\"CodePointsToString\"><a href=\"#sec-codepointstostring\">CodePointsToString</a></emu-xref>(<var>u</var>).</li><li>If <var>uStr</var> does not consist of a single code unit, return <var>ch</var>.</li><li>Let <var>cu</var> be <var>uStr</var>'s single code unit element.</li><li>If the numeric value of <var>ch</var> &#8805; 128 and the numeric value of <var>cu</var> &lt; 128, return <var>ch</var>.</li><li>Return <var>cu</var>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n            <p>Parentheses of the form <code>(</code> <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> <code>)</code> serve both to group the components of the <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> pattern together and to save the result of the match. The result can be used either in a backreference (<code>\\</code> followed by a non-zero decimal number), referenced in a replace String, or returned as part of an array from the regular expression matching <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref>. To inhibit the capturing behaviour of parentheses, use the form <code>(?:</code> <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> <code>)</code> instead.</p>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n            <p>The form <code>(?=</code> <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> <code>)</code> specifies a zero-width positive lookahead. In order for it to succeed, the pattern inside <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> must match at the current position, but the current position is not advanced before matching the sequel. If <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> can match at the current position in several ways, only the first one is tried. Unlike other regular expression operators, there is no backtracking into a <code>(?=</code> form (this unusual behaviour is inherited from Perl). This only matters when the <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> contains capturing parentheses and the sequel of the pattern contains backreferences to those captures.</p>\n            <p>For example,</p>\n            <pre><code class=\"javascript hljs\">/(?=(a+))/.<span class=\"hljs-title function_\">exec</span>(<span class=\"hljs-string\">\"baaabac\"</span>)</code></pre>\n            <p>matches the empty String immediately after the first <code>b</code> and therefore returns the array:</p>\n            <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"\"</span>, <span class=\"hljs-string\">\"aaa\"</span>]</code></pre>\n            <p>To illustrate the lack of backtracking into the lookahead, consider:</p>\n            <pre><code class=\"javascript hljs\">/(?=(a+))a*b\\<span class=\"hljs-number\">1</span>/.<span class=\"hljs-title function_\">exec</span>(<span class=\"hljs-string\">\"baaabac\"</span>)</code></pre>\n            <p>This expression returns</p>\n            <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"aba\"</span>, <span class=\"hljs-string\">\"a\"</span>]</code></pre>\n            <p>and not:</p>\n            <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"aaaba\"</span>, <span class=\"hljs-string\">\"a\"</span>]</code></pre>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n            <p>The form <code>(?!</code> <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> <code>)</code> specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> must fail to match at the current position. The current position is not advanced before matching the sequel. <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> can contain capturing parentheses, but backreferences to them only make sense from within <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> itself. Backreferences to these capturing parentheses from elsewhere in the pattern always return <emu-val>undefined</emu-val> because the negative lookahead must fail for the pattern to succeed. For example,</p>\n            <pre><code class=\"javascript hljs\">/(.*?)<span class=\"hljs-title function_\">a</span>(?!(a+)b\\2c)\\<span class=\"hljs-number\">2</span>(.*)/.<span class=\"hljs-title function_\">exec</span>(<span class=\"hljs-string\">\"baaabaac\"</span>)</code></pre>\n            <p>looks for an <code>a</code> not immediately followed by some positive number n of <code>a</code>'s, a <code>b</code>, another n <code>a</code>'s (specified by the first <code>\\2</code>) and a <code>c</code>. The second <code>\\2</code> is outside the negative lookahead, so it matches against <emu-val>undefined</emu-val> and therefore always succeeds. The whole expression returns the array:</p>\n            <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"baaabaac\"</span>, <span class=\"hljs-string\">\"ba\"</span>, <span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-string\">\"abaac\"</span>]</code></pre>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 4</span><div class=\"note-contents\">\n            <p>In case-insignificant matches when <var>Unicode</var> is <emu-val>true</emu-val>, all characters are implicitly case-folded using the simple mapping provided by the Unicode standard immediately before they are compared. The simple mapping always maps to a single code point, so it does not map, for example, <code>&#223;</code> (U+00DF) to <code>SS</code>. It may however map a code point outside the Basic Latin range to a character within, for example, <code>&#383;</code> (U+017F) to <code>s</code>. Such characters are not mapped if <var>Unicode</var> is <emu-val>false</emu-val>. This prevents Unicode code points such as U+017F and U+212A from matching regular expressions such as <code>/[a-z]/i</code>, but they will match <code>/[a-z]/ui</code>.</p>\n          </div></emu-note>\n        </emu-clause>\n        "}, "sec-runtime-semantics-characterrange-abstract-operation": {"num": "22.2.2.12.1", "title": "#sec-runtime-semantics-characterrange-abstract-operation CharacterRange ( A, B )", "html": "<emu-clause id=\"sec-runtime-semantics-characterrange-abstract-operation\" type=\"abstract operation\" aoid=\"CharacterRange\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-characterrange-abstract-operation\">#sec-runtime-semantics-characterrange-abstract-operation</span> CharacterRange ( <var>A</var>, <var>B</var> )</h1>\n          <p>The abstract operation CharacterRange takes arguments <var>A</var> (a CharSet) and <var>B</var> (a CharSet). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>A</var> and <var>B</var> each contain exactly one character.</li><li>Let <var>a</var> be the one character in CharSet <var>A</var>.</li><li>Let <var>b</var> be the one character in CharSet <var>B</var>.</li><li>Let <var>i</var> be the character value of character <var>a</var>.</li><li>Let <var>j</var> be the character value of character <var>b</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>i</var> &#8804; <var>j</var>.</li><li>Return the CharSet containing all characters with a character value greater than or equal to <var>i</var> and less than or equal to <var>j</var>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-characterclassescape": {"num": "22.2.2.17", "title": "#sec-characterclassescape CharacterClassEscape", "html": "<emu-clause id=\"sec-characterclassescape\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-characterclassescape\">#sec-characterclassescape</span> CharacterClassEscape</h1>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"8pmnkw2i\"><emu-t>d</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the ten-element CharSet containing the characters <code>0</code> through <code>9</code> inclusive.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"kzsugx0d\"><emu-t>D</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet containing all characters not in the CharSet returned by <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"8pmnkw2i\"><emu-t>d</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> .</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"w5xsbsk3\"><emu-t>s</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet containing all characters corresponding to a code point on the right-hand side of the <emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> productions.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"avlpsekd\"><emu-t>S</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet containing all characters not in the CharSet returned by <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"w5xsbsk3\"><emu-t>s</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> .</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"lytism1a\"><emu-t>w</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return <var>WordCharacters</var>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"rhxouzu-\"><emu-t>W</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet containing all characters not in the CharSet returned by <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"lytism1a\"><emu-t>w</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> .</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"w6blst1q\">\n        <emu-t>p{</emu-t>\n        <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet containing all Unicode code points included in the CharSet returned by <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"4og7ke5v\">\n        <emu-t>P{</emu-t>\n        <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet containing all Unicode code points not included in the CharSet returned by <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"UnicodePropertyValueExpression\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"sr3kbwzj\">\n        <emu-nt><a href=\"#prod-UnicodePropertyName\">UnicodePropertyName</a></emu-nt>\n        <emu-t>=</emu-t>\n        <emu-nt><a href=\"#prod-UnicodePropertyValue\">UnicodePropertyValue</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Let <var>ps</var> be <emu-xref aoid=\"SourceText\"><a href=\"#sec-static-semantics-sourcetext\">SourceText</a></emu-xref> of <emu-nt><a href=\"#prod-UnicodePropertyName\">UnicodePropertyName</a></emu-nt>.</li><li>Let <var>p</var> be !&#160;<emu-xref aoid=\"UnicodeMatchProperty\"><a href=\"#sec-runtime-semantics-unicodematchproperty-p\">UnicodeMatchProperty</a></emu-xref>(<var>ps</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>p</var> is a Unicode <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> or property alias listed in the &#8220;<emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref> and aliases&#8221; column of <emu-xref href=\"#table-nonbinary-unicode-properties\"><a href=\"#table-nonbinary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</a></emu-xref>.</li><li>Let <var>vs</var> be <emu-xref aoid=\"SourceText\"><a href=\"#sec-static-semantics-sourcetext\">SourceText</a></emu-xref> of <emu-nt><a href=\"#prod-UnicodePropertyValue\">UnicodePropertyValue</a></emu-nt>.</li><li>Let <var>v</var> be !&#160;<emu-xref aoid=\"UnicodeMatchPropertyValue\"><a href=\"#sec-runtime-semantics-unicodematchpropertyvalue-p-v\">UnicodeMatchPropertyValue</a></emu-xref>(<var>p</var>, <var>vs</var>).</li><li>Return the CharSet containing all Unicode code points whose character database definition includes the property <var>p</var> with value <var>v</var>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"UnicodePropertyValueExpression\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"jdlbklv9\"><emu-nt><a href=\"#prod-LoneUnicodePropertyNameOrValue\">LoneUnicodePropertyNameOrValue</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Let <var>s</var> be <emu-xref aoid=\"SourceText\"><a href=\"#sec-static-semantics-sourcetext\">SourceText</a></emu-xref> of <emu-nt><a href=\"#prod-LoneUnicodePropertyNameOrValue\">LoneUnicodePropertyNameOrValue</a></emu-nt>.</li><li>If !&#160;<emu-xref aoid=\"UnicodeMatchPropertyValue\"><a href=\"#sec-runtime-semantics-unicodematchpropertyvalue-p-v\">UnicodeMatchPropertyValue</a></emu-xref>(<code>General_Category</code>, <var>s</var>) is identical to a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Unicode code points that is the name of a Unicode general category or general category alias listed in the &#8220;Property value and aliases&#8221; column of <emu-xref href=\"#table-unicode-general-category-values\"><a href=\"#table-unicode-general-category-values\" class=\"excluded-xref\" excluded-id=\"table-unicode-general-category-values\">#table-unicode-general-category-values</a></emu-xref>, then<ol><li>Return the CharSet containing all Unicode code points whose character database definition includes the property &#8220;General_Category&#8221; with value <var>s</var>.</li></ol></li><li>Let <var>p</var> be !&#160;<emu-xref aoid=\"UnicodeMatchProperty\"><a href=\"#sec-runtime-semantics-unicodematchproperty-p\">UnicodeMatchProperty</a></emu-xref>(<var>s</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>p</var> is a binary Unicode property or binary property alias listed in the &#8220;<emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref> and aliases&#8221; column of <emu-xref href=\"#table-binary-unicode-properties\"><a href=\"#table-binary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</a></emu-xref>.</li><li>Return the CharSet containing all Unicode code points whose character database definition includes the property <var>p</var> with value &#8220;True&#8221;.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-nonemptyclassranges": {"num": "22.2.2.12", "title": "#sec-nonemptyclassranges NonemptyClassRanges", "html": "<emu-clause id=\"sec-nonemptyclassranges\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nonemptyclassranges\">#sec-nonemptyclassranges</span> NonemptyClassRanges</h1>\n        <p>The production <emu-grammar><emu-production name=\"NonemptyClassRanges\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonemptyClassRanges\">NonemptyClassRanges</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"nitc0vwv\"><emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet that is the result of evaluating <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"NonemptyClassRanges\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonemptyClassRanges\">NonemptyClassRanges</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"9bczlwfd\">\n        <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt>\n        <emu-nt><a href=\"#prod-NonemptyClassRangesNoDash\">NonemptyClassRangesNoDash</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Evaluate <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt> to obtain a CharSet <var>A</var>.</li><li>Evaluate <emu-nt><a href=\"#prod-NonemptyClassRangesNoDash\">NonemptyClassRangesNoDash</a></emu-nt> to obtain a CharSet <var>B</var>.</li><li>Return the union of CharSets <var>A</var> and <var>B</var>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"NonemptyClassRanges\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonemptyClassRanges\">NonemptyClassRanges</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"pblfo8mk\">\n        <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt>\n        <emu-t>-</emu-t>\n        <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt>\n        <emu-nt><a href=\"#prod-ClassRanges\">ClassRanges</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Evaluate the first <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt> to obtain a CharSet <var>A</var>.</li><li>Evaluate the second <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt> to obtain a CharSet <var>B</var>.</li><li>Evaluate <emu-nt><a href=\"#prod-ClassRanges\">ClassRanges</a></emu-nt> to obtain a CharSet <var>C</var>.</li><li>Let <var>D</var> be !&#160;<emu-xref aoid=\"CharacterRange\"><a href=\"#sec-runtime-semantics-characterrange-abstract-operation\">CharacterRange</a></emu-xref>(<var>A</var>, <var>B</var>).</li><li>Return the union of <var>D</var> and <var>C</var>.</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-runtime-semantics-characterrange-abstract-operation\"><h1><span class=\"secnum\">22.2.2.12.1</span>#sec-runtime-semantics-characterrange-abstract-operation CharacterRange ( A, B )</h1>...</div></emu-clause>\n\n      "}, "sec-atom": {"num": "22.2.2.8", "title": "#sec-atom Atom", "html": "<emu-clause id=\"sec-atom\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atom\">#sec-atom</span> Atom</h1>\n        <p>With parameter <var>direction</var>.</p>\n        <p>The production <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"vv9sxhyc\"><emu-nt><a href=\"#prod-PatternCharacter\">PatternCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Let <var>ch</var> be the character matched by <emu-nt><a href=\"#prod-PatternCharacter\">PatternCharacter</a></emu-nt>.</li><li>Let <var>A</var> be a one-element CharSet containing the character <var>ch</var>.</li><li>Return !&#160;<emu-xref aoid=\"CharacterSetMatcher\"><a href=\"#sec-runtime-semantics-charactersetmatcher-abstract-operation\">CharacterSetMatcher</a></emu-xref>(<var>A</var>, <emu-val>false</emu-val>, <var>direction</var>).</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"lljkc4zd\"><emu-t>.</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Let <var>A</var> be the CharSet of all characters.</li><li>If <var>DotAll</var> is not <emu-val>true</emu-val>, then<ol><li>Remove from <var>A</var> all characters corresponding to a code point on the right-hand side of the <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> production.</li></ol></li><li>Return !&#160;<emu-xref aoid=\"CharacterSetMatcher\"><a href=\"#sec-runtime-semantics-charactersetmatcher-abstract-operation\">CharacterSetMatcher</a></emu-xref>(<var>A</var>, <emu-val>false</emu-val>, <var>direction</var>).</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"noz-pdyz\">\n        <emu-t>\\</emu-t>\n        <emu-nt><a href=\"#prod-AtomEscape\">AtomEscape</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the Matcher that is the result of evaluating <emu-nt><a href=\"#prod-AtomEscape\">AtomEscape</a></emu-nt> with argument <var>direction</var>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"zqqoud41\"><emu-nt><a href=\"#prod-CharacterClass\">CharacterClass</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Evaluate <emu-nt><a href=\"#prod-CharacterClass\">CharacterClass</a></emu-nt> to obtain a CharSet <var>A</var> and a Boolean <var>invert</var>.</li><li>Return !&#160;<emu-xref aoid=\"CharacterSetMatcher\"><a href=\"#sec-runtime-semantics-charactersetmatcher-abstract-operation\">CharacterSetMatcher</a></emu-xref>(<var>A</var>, <var>invert</var>, <var>direction</var>).</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"waoim9ah\">\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Evaluate <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> with argument <var>direction</var> to obtain a Matcher <var>m</var>.</li><li>Let <var>parenIndex</var> be the number of left-capturing parentheses in the entire regular expression that occur to the left of this <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt>. This is the total number of <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"waoim9ah\">\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Nodes</a></emu-xref> prior to or enclosing this <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt>.</li><li>Return a new Matcher with parameters (<var>x</var>, <var>c</var>) that captures <var>direction</var>, <var>m</var>, and <var>parenIndex</var> and performs the following steps when called:<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>x</var> is a State.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>c</var> is a Continuation.</li><li>Let <var>d</var> be a new Continuation with parameters (<var>y</var>) that captures <var>x</var>, <var>c</var>, <var>direction</var>, and <var>parenIndex</var> and performs the following steps when called:<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>y</var> is a State.</li><li>Let <var>cap</var> be a copy of <var>y</var>'s <var>captures</var> <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>xe</var> be <var>x</var>'s <var>endIndex</var>.</li><li>Let <var>ye</var> be <var>y</var>'s <var>endIndex</var>.</li><li>If <var>direction</var> = 1, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>xe</var> &#8804; <var>ye</var>.</li><li>Let <var>s</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the characters of <var>Input</var> at indices <var>xe</var> (inclusive) through <var>ye</var> (exclusive).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>direction</var> is -1.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>ye</var> &#8804; <var>xe</var>.</li><li>Let <var>s</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the characters of <var>Input</var> at indices <var>ye</var> (inclusive) through <var>xe</var> (exclusive).</li></ol></li><li>Set <var>cap</var>[<var>parenIndex</var> + 1] to <var>s</var>.</li><li>Let <var>z</var> be the State (<var>ye</var>, <var>cap</var>).</li><li>Return <var>c</var>(<var>z</var>).</li></ol></li><li>Return <var>m</var>(<var>x</var>, <var>d</var>).</li></ol></li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"1223xxig\">\n        <emu-t>(</emu-t>\n        <emu-t>?</emu-t>\n        <emu-t>:</emu-t>\n        <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the Matcher that is the result of evaluating <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> with argument <var>direction</var>.</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-runtime-semantics-charactersetmatcher-abstract-operation\"><h1><span class=\"secnum\">22.2.2.8.1</span>#sec-runtime-semantics-charactersetmatcher-abstract-operation CharacterSetMatcher ( A, invert, direction )</h1>...</div><div id=\"excluded-sec-runtime-semantics-canonicalize-ch\"><h1><span class=\"secnum\">22.2.2.8.2</span>#sec-runtime-semantics-canonicalize-ch Canonicalize ( ch )</h1>...</div><div id=\"excluded-sec-runtime-semantics-unicodematchproperty-p\"><h1><span class=\"secnum\">22.2.2.8.3</span>#sec-runtime-semantics-unicodematchproperty-p UnicodeMatchProperty ( p )</h1>...</div><div id=\"excluded-sec-runtime-semantics-unicodematchpropertyvalue-p-v\"><h1><span class=\"secnum\">22.2.2.8.4</span>#sec-runtime-semantics-unicodematchpropertyvalue-p-v UnicodeMatchPropertyValue ( p, v )</h1>...</div></emu-clause>\n\n      "}, "sec-backreference-matcher": {"num": "22.2.2.9.1", "title": "#sec-backreference-matcher BackreferenceMatcher ( n, direction )", "html": "<emu-clause id=\"sec-backreference-matcher\" type=\"abstract operation\" aoid=\"BackreferenceMatcher\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-backreference-matcher\">#sec-backreference-matcher</span> BackreferenceMatcher ( <var>n</var>, <var>direction</var> )</h1>\n          <p>The abstract operation BackreferenceMatcher takes arguments <var>n</var> (a positive <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>) and <var>direction</var> (1 or -1). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>n</var> &#8805; 1.</li><li>Return a new Matcher with parameters (<var>x</var>, <var>c</var>) that captures <var>n</var> and <var>direction</var> and performs the following steps when called:<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>x</var> is a State.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>c</var> is a Continuation.</li><li>Let <var>cap</var> be <var>x</var>'s <var>captures</var> <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>s</var> be <var>cap</var>[<var>n</var>].</li><li>If <var>s</var> is <emu-val>undefined</emu-val>, return <var>c</var>(<var>x</var>).</li><li>Let <var>e</var> be <var>x</var>'s <var>endIndex</var>.</li><li>Let <var>len</var> be the number of elements in <var>s</var>.</li><li>Let <var>f</var> be <var>e</var> + <var>direction</var> &#215; <var>len</var>.</li><li>If <var>f</var> &lt; 0 or <var>f</var> &gt; <var>InputLength</var>, return <emu-const>failure</emu-const>.</li><li>Let <var>g</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>e</var>, <var>f</var>).</li><li>If there exists an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> between 0 (inclusive) and <var>len</var> (exclusive) such that <emu-xref aoid=\"Canonicalize\"><a href=\"#sec-runtime-semantics-canonicalize-ch\">Canonicalize</a></emu-xref>(<var>s</var>[<var>i</var>]) is not the same character value as <emu-xref aoid=\"Canonicalize\"><a href=\"#sec-runtime-semantics-canonicalize-ch\">Canonicalize</a></emu-xref>(<var>Input</var>[<var>g</var> + <var>i</var>]), return <emu-const>failure</emu-const>.</li><li>Let <var>y</var> be the State (<var>f</var>, <var>cap</var>).</li><li>Return <var>c</var>(<var>y</var>).</li></ol></li></ol></emu-alg>\n        </emu-clause>\n      "}}, "figData": {"table-nonbinary-unicode-properties": "Table 68", "table-binary-unicode-properties": "Table 69", "table-unicode-general-category-values": "Table 70"}}, "to": {"secList": ["sec-atomescape", "sec-runtime-semantics-unicodematchproperty-p", "sec-runtime-semantics-canonicalize-ch", "sec-runtime-semantics-characterrange-abstract-operation", "sec-characterclassescape", "sec-nonemptyclassranges", "sec-atom", "sec-backreference-matcher"], "secData": {"sec-atomescape": {"num": "22.2.2.9", "title": "#sec-atomescape AtomEscape", "html": "<emu-clause id=\"sec-atomescape\" oldids=\"sec-characterescape,sec-decimalescape\"><span id=\"sec-decimalescape\"></span><span id=\"sec-characterescape\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomescape\">#sec-atomescape</span> AtomEscape</h1>\n        <p>With parameter <var>direction</var>.</p>\n        <p>The production <emu-grammar><emu-production name=\"AtomEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-AtomEscape\">AtomEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"fr_5bnut\"><emu-nt><a href=\"#prod-DecimalEscape\">DecimalEscape</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Let <var>n</var> be the <emu-xref aoid=\"CapturingGroupNumber\"><a href=\"#sec-patterns-static-semantics-capturing-group-number\">CapturingGroupNumber</a></emu-xref> of <emu-nt><a href=\"#prod-DecimalEscape\">DecimalEscape</a></emu-nt>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>n</var> &#8804; <var>NcapturingParens</var>.</li><li>Return !&#160;<emu-xref aoid=\"BackreferenceMatcher\"><a href=\"#sec-backreference-matcher\">BackreferenceMatcher</a></emu-xref>(<var>n</var>, <var>direction</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>An escape sequence of the form <code>\\</code> followed by a non-zero decimal number <var>n</var> matches the result of the <var>n</var><sup>th</sup> set of capturing parentheses (<emu-xref href=\"#sec-notation\"><a href=\"#sec-notation\" class=\"excluded-xref\" excluded-id=\"sec-notation\">#sec-notation</a></emu-xref>). It is an error if the regular expression has fewer than <var>n</var> capturing parentheses. If the regular expression has <var>n</var> or more capturing parentheses but the <var>n</var><sup>th</sup> one is <emu-val>undefined</emu-val> because it has not captured anything, then the backreference always succeeds.</p>\n        </div></emu-note>\n        <p>The production <emu-grammar><emu-production name=\"AtomEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-AtomEscape\">AtomEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"fjarvpc8\"><emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Let <var>cv</var> be the <emu-xref aoid=\"CharacterValue\"><a href=\"#sec-patterns-static-semantics-character-value\">CharacterValue</a></emu-xref> of <emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt>.</li><li>Let <var>ch</var> be the character whose character value is <var>cv</var>.</li><li>Let <var>A</var> be a one-element CharSet containing the character <var>ch</var>.</li><li>Return !&#160;<emu-xref aoid=\"CharacterSetMatcher\"><a href=\"#sec-runtime-semantics-charactersetmatcher-abstract-operation\">CharacterSetMatcher</a></emu-xref>(<var>A</var>, <emu-val>false</emu-val>, <var>direction</var>).</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"AtomEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-AtomEscape\">AtomEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"bww-5j2p\"><emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Evaluate <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> to obtain a CharSet <var>A</var>.</li><li>Return !&#160;<emu-xref aoid=\"CharacterSetMatcher\"><a href=\"#sec-runtime-semantics-charactersetmatcher-abstract-operation\">CharacterSetMatcher</a></emu-xref>(<var>A</var>, <emu-val>false</emu-val>, <var>direction</var>).</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"AtomEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-AtomEscape\">AtomEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"dd_xjonr\">\n        <emu-t>k</emu-t>\n        <emu-nt><a href=\"#prod-GroupName\">GroupName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Search the enclosing <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> for an instance of a <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt> containing a <emu-nt><a href=\"#prod-RegExpIdentifierName\">RegExpIdentifierName</a></emu-nt> which has a <emu-xref aoid=\"CapturingGroupName\"><a href=\"#sec-static-semantics-capturinggroupname\">CapturingGroupName</a></emu-xref> equal to the <emu-xref aoid=\"CapturingGroupName\"><a href=\"#sec-static-semantics-capturinggroupname\">CapturingGroupName</a></emu-xref> of the <emu-nt><a href=\"#prod-RegExpIdentifierName\">RegExpIdentifierName</a></emu-nt> contained in <emu-nt><a href=\"#prod-GroupName\">GroupName</a></emu-nt>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: A unique such <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt> is found.</li><li>Let <var>parenIndex</var> be the number of left-capturing parentheses in the entire regular expression that occur to the left of the located <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt>. This is the total number of <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"waoim9ah\">\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Nodes</a></emu-xref> prior to or enclosing the located <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt>, including its immediately enclosing <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"BackreferenceMatcher\"><a href=\"#sec-backreference-matcher\">BackreferenceMatcher</a></emu-xref>(<var>parenIndex</var>, <var>direction</var>).</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-runtime-semantics-charactersetmatcher-abstract-operation\"><h1><span class=\"secnum\">22.2.2.9.1</span>#sec-runtime-semantics-charactersetmatcher-abstract-operation CharacterSetMatcher ( A, invert, direction )</h1>...</div><div id=\"excluded-sec-backreference-matcher\"><h1><span class=\"secnum\">22.2.2.9.2</span>#sec-backreference-matcher BackreferenceMatcher ( n, direction )</h1>...</div><div id=\"excluded-sec-runtime-semantics-canonicalize-ch\"><h1><span class=\"secnum\">22.2.2.9.3</span>#sec-runtime-semantics-canonicalize-ch Canonicalize ( ch )</h1>...</div></emu-clause>\n\n      "}, "sec-runtime-semantics-unicodematchproperty-p": {"num": "22.2.2.17.2", "title": "#sec-runtime-semantics-unicodematchproperty-p UnicodeMatchProperty ( p )", "html": "<emu-clause id=\"sec-runtime-semantics-unicodematchproperty-p\" type=\"abstract operation\" aoid=\"UnicodeMatchProperty\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-unicodematchproperty-p\">#sec-runtime-semantics-unicodematchproperty-p</span> UnicodeMatchProperty ( <var>p</var> )</h1>\n          <p>The abstract operation UnicodeMatchProperty takes argument <var>p</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Unicode code points). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>p</var> is a Unicode <emu-not-ref>property name</emu-not-ref> or property alias listed in the &#8220;<emu-not-ref>Property name</emu-not-ref> and aliases&#8221; column of <emu-xref href=\"#table-nonbinary-unicode-properties\"><a href=\"#table-nonbinary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</a></emu-xref> or <emu-xref href=\"#table-binary-unicode-properties\"><a href=\"#table-binary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</a></emu-xref>.</li><li>Let <var>c</var> be the canonical <emu-not-ref>property name</emu-not-ref> of <var>p</var> as given in the &#8220;Canonical <emu-not-ref>property name</emu-not-ref>&#8221; column of the corresponding row.</li><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Unicode code points <var>c</var>.</li></ol></emu-alg>\n          <p>Implementations must support the Unicode property names and aliases listed in <emu-xref href=\"#table-nonbinary-unicode-properties\"><a href=\"#table-nonbinary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</a></emu-xref> and <emu-xref href=\"#table-binary-unicode-properties\"><a href=\"#table-binary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</a></emu-xref>. To ensure interoperability, implementations must not support any other property names or aliases.</p>\n          <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n            <p>For example, <code>Script_Extensions</code> (<emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref>) and <code>scx</code> (property alias) are valid, but <code>script_extensions</code> or <code>Scx</code> aren't.</p>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n            <p>The listed properties form a superset of what <a href=\"https://unicode.org/reports/tr18/#RL1.2\">UTS18 RL1.2</a> requires.</p>\n          </div></emu-note>\n          <emu-import href=\"table-nonbinary-unicode-properties.html\"><emu-table id=\"table-nonbinary-unicode-properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</span>: Non-binary Unicode property aliases and their canonical property names</figcaption>\n  \n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th><emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref> and aliases</th>\n        <th>Canonical <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref></th>\n      </tr>\n    </thead>\n    <tbody><tr>\n      <td><code>General_Category</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>General_Category</code></a></td>\n    </tr>\n    <tr>\n      <td><code>gc</code></td>\n    </tr>\n    <tr>\n      <td><code>Script</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr24/#Script\"><code>Script</code></a></td>\n    </tr>\n    <tr>\n      <td><code>sc</code></td>\n    </tr>\n    <tr>\n      <td><code>Script_Extensions</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr24/#Script_Extensions\"><code>Script_Extensions</code></a></td>\n    </tr>\n    <tr>\n      <td><code>scx</code></td>\n    </tr>\n  </tbody></table>\n</figure></emu-table></emu-import>\n          <emu-import href=\"table-binary-unicode-properties.html\"><emu-table id=\"table-binary-unicode-properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</span>: Binary Unicode property aliases and their canonical property names</figcaption>\n  \n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th><emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref> and aliases</th>\n        <th>Canonical <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref></th>\n      </tr>\n    </thead>\n    <tbody><tr>\n      <td><code>ASCII</code></td>\n      <td><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>ASCII</code></a></td>\n    </tr>\n    <tr>\n      <td><code>ASCII_Hex_Digit</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#ASCII_Hex_Digit\"><code>ASCII_Hex_Digit</code></a></td>\n    </tr>\n    <tr>\n      <td><code>AHex</code></td>\n    </tr>\n    <tr>\n      <td><code>Alphabetic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Alphabetic\"><code>Alphabetic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Alpha</code></td>\n    </tr>\n    <tr>\n      <td><code>Any</code></td>\n      <td><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>Any</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Assigned</code></td>\n      <td><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>Assigned</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_Control</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Bidi_Control\"><code>Bidi_Control</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_C</code></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_Mirrored</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Bidi_Mirrored\"><code>Bidi_Mirrored</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_M</code></td>\n    </tr>\n    <tr>\n      <td><code>Case_Ignorable</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Case_Ignorable\"><code>Case_Ignorable</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CI</code></td>\n    </tr>\n    <tr>\n      <td><code>Cased</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Cased\"><code>Cased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Casefolded</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWCF\"><code>Changes_When_Casefolded</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWCF</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Casemapped</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWCM\"><code>Changes_When_Casemapped</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWCM</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Lowercased</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWL\"><code>Changes_When_Lowercased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWL</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_NFKC_Casefolded</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWKCF\"><code>Changes_When_NFKC_Casefolded</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWKCF</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Titlecased</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWT\"><code>Changes_When_Titlecased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWT</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Uppercased</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWU\"><code>Changes_When_Uppercased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWU</code></td>\n    </tr>\n    <tr>\n      <td><code>Dash</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Dash\"><code>Dash</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Default_Ignorable_Code_Point</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Default_Ignorable_Code_Point\"><code>Default_Ignorable_Code_Point</code></a></td>\n    </tr>\n    <tr>\n      <td><code>DI</code></td>\n    </tr>\n    <tr>\n      <td><code>Deprecated</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Deprecated\"><code>Deprecated</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Dep</code></td>\n    </tr>\n    <tr>\n      <td><code>Diacritic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Diacritic\"><code>Diacritic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Dia</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji</code></td>\n      <td><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Component</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Component</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EComp</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Modifier</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Modifier</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EMod</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Modifier_Base</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Modifier_Base</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EBase</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Presentation</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Presentation</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EPres</code></td>\n    </tr>\n    <tr>\n      <td><code>Extended_Pictographic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Extended_Pictographic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>ExtPict</code></td>\n    </tr>\n    <tr>\n      <td><code>Extender</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Extender\"><code>Extender</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Ext</code></td>\n    </tr>\n    <tr>\n      <td><code>Grapheme_Base</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Grapheme_Base\"><code>Grapheme_Base</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Gr_Base</code></td>\n    </tr>\n    <tr>\n      <td><code>Grapheme_Extend</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Grapheme_Extend\"><code>Grapheme_Extend</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Gr_Ext</code></td>\n    </tr>\n    <tr>\n      <td><code>Hex_Digit</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Hex_Digit\"><code>Hex_Digit</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Hex</code></td>\n    </tr>\n    <tr>\n      <td><code>IDS_Binary_Operator</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#IDS_Binary_Operator\"><code>IDS_Binary_Operator</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDSB</code></td>\n    </tr>\n    <tr>\n      <td><code>IDS_Trinary_Operator</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#IDS_Trinary_Operator\"><code>IDS_Trinary_Operator</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDST</code></td>\n    </tr>\n    <tr>\n      <td><code>ID_Continue</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#ID_Continue\"><code>ID_Continue</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDC</code></td>\n    </tr>\n    <tr>\n      <td><code>ID_Start</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#ID_Start\"><code>ID_Start</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDS</code></td>\n    </tr>\n    <tr>\n      <td><code>Ideographic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Ideographic\"><code>Ideographic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Ideo</code></td>\n    </tr>\n    <tr>\n      <td><code>Join_Control</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Join_Control\"><code>Join_Control</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Join_C</code></td>\n    </tr>\n    <tr>\n      <td><code>Logical_Order_Exception</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Logical_Order_Exception\"><code>Logical_Order_Exception</code></a></td>\n    </tr>\n    <tr>\n      <td><code>LOE</code></td>\n    </tr>\n    <tr>\n      <td><code>Lowercase</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Lowercase\"><code>Lowercase</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Lower</code></td>\n    </tr>\n    <tr>\n      <td><code>Math</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Math\"><code>Math</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Noncharacter_Code_Point</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Noncharacter_Code_Point\"><code>Noncharacter_Code_Point</code></a></td>\n    </tr>\n    <tr>\n      <td><code>NChar</code></td>\n    </tr>\n    <tr>\n      <td><code>Pattern_Syntax</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Pattern_Syntax\"><code>Pattern_Syntax</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Pat_Syn</code></td>\n    </tr>\n    <tr>\n      <td><code>Pattern_White_Space</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Pattern_White_Space\"><code>Pattern_White_Space</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Pat_WS</code></td>\n    </tr>\n    <tr>\n      <td><code>Quotation_Mark</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Quotation_Mark\"><code>Quotation_Mark</code></a></td>\n    </tr>\n    <tr>\n      <td><code>QMark</code></td>\n    </tr>\n    <tr>\n      <td><code>Radical</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Radical\"><code>Radical</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Regional_Indicator</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Regional_Indicator\"><code>Regional_Indicator</code></a></td>\n    </tr>\n    <tr>\n      <td><code>RI</code></td>\n    </tr>\n    <tr>\n      <td><code>Sentence_Terminal</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#STerm\"><code>Sentence_Terminal</code></a></td>\n    </tr>\n    <tr>\n      <td><code>STerm</code></td>\n    </tr>\n    <tr>\n      <td><code>Soft_Dotted</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Soft_Dotted\"><code>Soft_Dotted</code></a></td>\n    </tr>\n    <tr>\n      <td><code>SD</code></td>\n    </tr>\n    <tr>\n      <td><code>Terminal_Punctuation</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Terminal_Punctuation\"><code>Terminal_Punctuation</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Term</code></td>\n    </tr>\n    <tr>\n      <td><code>Unified_Ideograph</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Unified_Ideograph\"><code>Unified_Ideograph</code></a></td>\n    </tr>\n    <tr>\n      <td><code>UIdeo</code></td>\n    </tr>\n    <tr>\n      <td><code>Uppercase</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Uppercase\"><code>Uppercase</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Upper</code></td>\n    </tr>\n    <tr>\n      <td><code>Variation_Selector</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Variation_Selector\"><code>Variation_Selector</code></a></td>\n    </tr>\n    <tr>\n      <td><code>VS</code></td>\n    </tr>\n    <tr>\n      <td><code>White_Space</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#White_Space\"><code>White_Space</code></a></td>\n    </tr>\n    <tr>\n      <td><code>space</code></td>\n    </tr>\n    <tr>\n      <td><code>XID_Continue</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#XID_Continue\"><code>XID_Continue</code></a></td>\n    </tr>\n    <tr>\n      <td><code>XIDC</code></td>\n    </tr>\n    <tr>\n      <td><code>XID_Start</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#XID_Start\"><code>XID_Start</code></a></td>\n    </tr>\n    <tr>\n      <td><code>XIDS</code></td>\n    </tr>\n  </tbody></table>\n</figure></emu-table></emu-import>\n        </emu-clause>\n\n        "}, "sec-runtime-semantics-canonicalize-ch": {"num": "22.2.2.9.3", "title": "#sec-runtime-semantics-canonicalize-ch Canonicalize ( ch )", "html": "<emu-clause id=\"sec-runtime-semantics-canonicalize-ch\" type=\"abstract operation\" aoid=\"Canonicalize\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-canonicalize-ch\">#sec-runtime-semantics-canonicalize-ch</span> Canonicalize ( <var>ch</var> )</h1>\n          <p>The abstract operation Canonicalize takes argument <var>ch</var> (a character). It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <var>Unicode</var> is <emu-val>true</emu-val> and <var>IgnoreCase</var> is <emu-val>true</emu-val>, then<ol><li>If the file CaseFolding.txt of the Unicode Character Database provides a simple or common case folding mapping for <var>ch</var>, return the result of applying that mapping to <var>ch</var>.</li><li>Return <var>ch</var>.</li></ol></li><li>If <var>IgnoreCase</var> is <emu-val>false</emu-val>, return <var>ch</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>ch</var> is a UTF-16 code unit.</li><li>Let <var>cp</var> be the code point whose numeric value is that of <var>ch</var>.</li><li>Let <var>u</var> be the result of toUppercase(&#171; <var>cp</var> &#187;), according to the Unicode Default Case Conversion algorithm.</li><li>Let <var>uStr</var> be !&#160;<emu-xref aoid=\"CodePointsToString\"><a href=\"#sec-codepointstostring\">CodePointsToString</a></emu-xref>(<var>u</var>).</li><li>If <var>uStr</var> does not consist of a single code unit, return <var>ch</var>.</li><li>Let <var>cu</var> be <var>uStr</var>'s single code unit element.</li><li>If the numeric value of <var>ch</var> &#8805; 128 and the numeric value of <var>cu</var> &lt; 128, return <var>ch</var>.</li><li>Return <var>cu</var>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n            <p>Parentheses of the form <code>(</code> <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> <code>)</code> serve both to group the components of the <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> pattern together and to save the result of the match. The result can be used either in a backreference (<code>\\</code> followed by a non-zero decimal number), referenced in a replace String, or returned as part of an array from the regular expression matching <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref>. To inhibit the capturing behaviour of parentheses, use the form <code>(?:</code> <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> <code>)</code> instead.</p>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n            <p>The form <code>(?=</code> <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> <code>)</code> specifies a zero-width positive lookahead. In order for it to succeed, the pattern inside <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> must match at the current position, but the current position is not advanced before matching the sequel. If <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> can match at the current position in several ways, only the first one is tried. Unlike other regular expression operators, there is no backtracking into a <code>(?=</code> form (this unusual behaviour is inherited from Perl). This only matters when the <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> contains capturing parentheses and the sequel of the pattern contains backreferences to those captures.</p>\n            <p>For example,</p>\n            <pre><code class=\"javascript hljs\">/(?=(a+))/.<span class=\"hljs-title function_\">exec</span>(<span class=\"hljs-string\">\"baaabac\"</span>)</code></pre>\n            <p>matches the empty String immediately after the first <code>b</code> and therefore returns the array:</p>\n            <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"\"</span>, <span class=\"hljs-string\">\"aaa\"</span>]</code></pre>\n            <p>To illustrate the lack of backtracking into the lookahead, consider:</p>\n            <pre><code class=\"javascript hljs\">/(?=(a+))a*b\\<span class=\"hljs-number\">1</span>/.<span class=\"hljs-title function_\">exec</span>(<span class=\"hljs-string\">\"baaabac\"</span>)</code></pre>\n            <p>This expression returns</p>\n            <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"aba\"</span>, <span class=\"hljs-string\">\"a\"</span>]</code></pre>\n            <p>and not:</p>\n            <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"aaaba\"</span>, <span class=\"hljs-string\">\"a\"</span>]</code></pre>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n            <p>The form <code>(?!</code> <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> <code>)</code> specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> must fail to match at the current position. The current position is not advanced before matching the sequel. <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> can contain capturing parentheses, but backreferences to them only make sense from within <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> itself. Backreferences to these capturing parentheses from elsewhere in the pattern always return <emu-val>undefined</emu-val> because the negative lookahead must fail for the pattern to succeed. For example,</p>\n            <pre><code class=\"javascript hljs\">/(.*?)<span class=\"hljs-title function_\">a</span>(?!(a+)b\\2c)\\<span class=\"hljs-number\">2</span>(.*)/.<span class=\"hljs-title function_\">exec</span>(<span class=\"hljs-string\">\"baaabaac\"</span>)</code></pre>\n            <p>looks for an <code>a</code> not immediately followed by some positive number n of <code>a</code>'s, a <code>b</code>, another n <code>a</code>'s (specified by the first <code>\\2</code>) and a <code>c</code>. The second <code>\\2</code> is outside the negative lookahead, so it matches against <emu-val>undefined</emu-val> and therefore always succeeds. The whole expression returns the array:</p>\n            <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"baaabaac\"</span>, <span class=\"hljs-string\">\"ba\"</span>, <span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-string\">\"abaac\"</span>]</code></pre>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 4</span><div class=\"note-contents\">\n            <p>In case-insignificant matches when <var>Unicode</var> is <emu-val>true</emu-val>, all characters are implicitly case-folded using the simple mapping provided by the Unicode standard immediately before they are compared. The simple mapping always maps to a single code point, so it does not map, for example, <code>&#223;</code> (U+00DF) to <code>SS</code>. It may however map a code point outside the Basic Latin range to a character within, for example, <code>&#383;</code> (U+017F) to <code>s</code>. Such characters are not mapped if <var>Unicode</var> is <emu-val>false</emu-val>. This prevents Unicode code points such as U+017F and U+212A from matching regular expressions such as <code>/[a-z]/i</code>, but they will match <code>/[a-z]/ui</code>.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-runtime-semantics-characterrange-abstract-operation": {"num": "22.2.2.17.1", "title": "#sec-runtime-semantics-characterrange-abstract-operation CharacterRange ( A, B )", "html": "<emu-clause id=\"sec-runtime-semantics-characterrange-abstract-operation\" type=\"abstract operation\" aoid=\"CharacterRange\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-characterrange-abstract-operation\">#sec-runtime-semantics-characterrange-abstract-operation</span> CharacterRange ( <var>A</var>, <var>B</var> )</h1>\n          <p>The abstract operation CharacterRange takes arguments <var>A</var> (a CharSet) and <var>B</var> (a CharSet). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>A</var> and <var>B</var> each contain exactly one character.</li><li>Let <var>a</var> be the one character in CharSet <var>A</var>.</li><li>Let <var>b</var> be the one character in CharSet <var>B</var>.</li><li>Let <var>i</var> be the character value of character <var>a</var>.</li><li>Let <var>j</var> be the character value of character <var>b</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>i</var> &#8804; <var>j</var>.</li><li>Return the CharSet containing all characters with a character value greater than or equal to <var>i</var> and less than or equal to <var>j</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-characterclassescape": {"num": "22.2.2.17", "title": "#sec-characterclassescape CharacterClassEscape", "html": "<emu-clause id=\"sec-characterclassescape\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-characterclassescape\">#sec-characterclassescape</span> CharacterClassEscape</h1>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"8pmnkw2i\"><emu-t>d</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the ten-element CharSet containing the characters <code>0</code> through <code>9</code> inclusive.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"kzsugx0d\"><emu-t>D</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet containing all characters not in the CharSet returned by <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"8pmnkw2i\"><emu-t>d</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> .</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"w5xsbsk3\"><emu-t>s</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet containing all characters corresponding to a code point on the right-hand side of the <emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> productions.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"avlpsekd\"><emu-t>S</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet containing all characters not in the CharSet returned by <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"w5xsbsk3\"><emu-t>s</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> .</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"lytism1a\"><emu-t>w</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return <var>WordCharacters</var>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"rhxouzu-\"><emu-t>W</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet containing all characters not in the CharSet returned by <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"lytism1a\"><emu-t>w</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> .</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"w6blst1q\">\n        <emu-t>p{</emu-t>\n        <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet containing all Unicode code points included in the CharSet returned by <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"CharacterClassEscape\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"4og7ke5v\">\n        <emu-t>P{</emu-t>\n        <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet containing all Unicode code points not included in the CharSet returned by <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"UnicodePropertyValueExpression\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"sr3kbwzj\">\n        <emu-nt><a href=\"#prod-UnicodePropertyName\">UnicodePropertyName</a></emu-nt>\n        <emu-t>=</emu-t>\n        <emu-nt><a href=\"#prod-UnicodePropertyValue\">UnicodePropertyValue</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Let <var>ps</var> be <emu-xref aoid=\"SourceText\"><a href=\"#sec-static-semantics-sourcetext\">SourceText</a></emu-xref> of <emu-nt><a href=\"#prod-UnicodePropertyName\">UnicodePropertyName</a></emu-nt>.</li><li>Let <var>p</var> be !&#160;<emu-xref aoid=\"UnicodeMatchProperty\"><a href=\"#sec-runtime-semantics-unicodematchproperty-p\">UnicodeMatchProperty</a></emu-xref>(<var>ps</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>p</var> is a Unicode <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> or property alias listed in the &#8220;<emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref> and aliases&#8221; column of <emu-xref href=\"#table-nonbinary-unicode-properties\"><a href=\"#table-nonbinary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</a></emu-xref>.</li><li>Let <var>vs</var> be <emu-xref aoid=\"SourceText\"><a href=\"#sec-static-semantics-sourcetext\">SourceText</a></emu-xref> of <emu-nt><a href=\"#prod-UnicodePropertyValue\">UnicodePropertyValue</a></emu-nt>.</li><li>Let <var>v</var> be !&#160;<emu-xref aoid=\"UnicodeMatchPropertyValue\"><a href=\"#sec-runtime-semantics-unicodematchpropertyvalue-p-v\">UnicodeMatchPropertyValue</a></emu-xref>(<var>p</var>, <var>vs</var>).</li><li>Return the CharSet containing all Unicode code points whose character database definition includes the property <var>p</var> with value <var>v</var>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"UnicodePropertyValueExpression\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"jdlbklv9\"><emu-nt><a href=\"#prod-LoneUnicodePropertyNameOrValue\">LoneUnicodePropertyNameOrValue</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Let <var>s</var> be <emu-xref aoid=\"SourceText\"><a href=\"#sec-static-semantics-sourcetext\">SourceText</a></emu-xref> of <emu-nt><a href=\"#prod-LoneUnicodePropertyNameOrValue\">LoneUnicodePropertyNameOrValue</a></emu-nt>.</li><li>If !&#160;<emu-xref aoid=\"UnicodeMatchPropertyValue\"><a href=\"#sec-runtime-semantics-unicodematchpropertyvalue-p-v\">UnicodeMatchPropertyValue</a></emu-xref>(<code>General_Category</code>, <var>s</var>) is identical to a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Unicode code points that is the name of a Unicode general category or general category alias listed in the &#8220;Property value and aliases&#8221; column of <emu-xref href=\"#table-unicode-general-category-values\"><a href=\"#table-unicode-general-category-values\" class=\"excluded-xref\" excluded-id=\"table-unicode-general-category-values\">#table-unicode-general-category-values</a></emu-xref>, then<ol><li>Return the CharSet containing all Unicode code points whose character database definition includes the property &#8220;General_Category&#8221; with value <var>s</var>.</li></ol></li><li>Let <var>p</var> be !&#160;<emu-xref aoid=\"UnicodeMatchProperty\"><a href=\"#sec-runtime-semantics-unicodematchproperty-p\">UnicodeMatchProperty</a></emu-xref>(<var>s</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>p</var> is a binary Unicode property or binary property alias listed in the &#8220;<emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref> and aliases&#8221; column of <emu-xref href=\"#table-binary-unicode-properties\"><a href=\"#table-binary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</a></emu-xref>.</li><li>Return the CharSet containing all Unicode code points whose character database definition includes the property <var>p</var> with value &#8220;True&#8221;.</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-runtime-semantics-characterrange-abstract-operation\"><h1><span class=\"secnum\">22.2.2.17.1</span>#sec-runtime-semantics-characterrange-abstract-operation CharacterRange ( A, B )</h1>...</div><div id=\"excluded-sec-runtime-semantics-unicodematchproperty-p\"><h1><span class=\"secnum\">22.2.2.17.2</span>#sec-runtime-semantics-unicodematchproperty-p UnicodeMatchProperty ( p )</h1>...</div><div id=\"excluded-sec-runtime-semantics-unicodematchpropertyvalue-p-v\"><h1><span class=\"secnum\">22.2.2.17.3</span>#sec-runtime-semantics-unicodematchpropertyvalue-p-v UnicodeMatchPropertyValue ( p, v )</h1>...</div></emu-clause>\n    "}, "sec-nonemptyclassranges": {"num": "22.2.2.12", "title": "#sec-nonemptyclassranges NonemptyClassRanges", "html": "<emu-clause id=\"sec-nonemptyclassranges\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nonemptyclassranges\">#sec-nonemptyclassranges</span> NonemptyClassRanges</h1>\n        <p>The production <emu-grammar><emu-production name=\"NonemptyClassRanges\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonemptyClassRanges\">NonemptyClassRanges</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"nitc0vwv\"><emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the CharSet that is the result of evaluating <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"NonemptyClassRanges\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonemptyClassRanges\">NonemptyClassRanges</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"9bczlwfd\">\n        <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt>\n        <emu-nt><a href=\"#prod-NonemptyClassRangesNoDash\">NonemptyClassRangesNoDash</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Evaluate <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt> to obtain a CharSet <var>A</var>.</li><li>Evaluate <emu-nt><a href=\"#prod-NonemptyClassRangesNoDash\">NonemptyClassRangesNoDash</a></emu-nt> to obtain a CharSet <var>B</var>.</li><li>Return the union of CharSets <var>A</var> and <var>B</var>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"NonemptyClassRanges\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonemptyClassRanges\">NonemptyClassRanges</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"pblfo8mk\">\n        <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt>\n        <emu-t>-</emu-t>\n        <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt>\n        <emu-nt><a href=\"#prod-ClassRanges\">ClassRanges</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Evaluate the first <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt> to obtain a CharSet <var>A</var>.</li><li>Evaluate the second <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt> to obtain a CharSet <var>B</var>.</li><li>Evaluate <emu-nt><a href=\"#prod-ClassRanges\">ClassRanges</a></emu-nt> to obtain a CharSet <var>C</var>.</li><li>Let <var>D</var> be !&#160;<emu-xref aoid=\"CharacterRange\"><a href=\"#sec-runtime-semantics-characterrange-abstract-operation\">CharacterRange</a></emu-xref>(<var>A</var>, <var>B</var>).</li><li>Return the union of <var>D</var> and <var>C</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-atom": {"num": "22.2.2.8", "title": "#sec-atom Atom", "html": "<emu-clause id=\"sec-atom\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atom\">#sec-atom</span> Atom</h1>\n        <p>With parameter <var>direction</var>.</p>\n        <p>The production <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"vv9sxhyc\"><emu-nt><a href=\"#prod-PatternCharacter\">PatternCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Let <var>ch</var> be the character matched by <emu-nt><a href=\"#prod-PatternCharacter\">PatternCharacter</a></emu-nt>.</li><li>Let <var>A</var> be a one-element CharSet containing the character <var>ch</var>.</li><li>Return !&#160;<emu-xref aoid=\"CharacterSetMatcher\"><a href=\"#sec-runtime-semantics-charactersetmatcher-abstract-operation\">CharacterSetMatcher</a></emu-xref>(<var>A</var>, <emu-val>false</emu-val>, <var>direction</var>).</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"lljkc4zd\"><emu-t>.</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Let <var>A</var> be the CharSet of all characters.</li><li>If <var>DotAll</var> is not <emu-val>true</emu-val>, then<ol><li>Remove from <var>A</var> all characters corresponding to a code point on the right-hand side of the <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> production.</li></ol></li><li>Return !&#160;<emu-xref aoid=\"CharacterSetMatcher\"><a href=\"#sec-runtime-semantics-charactersetmatcher-abstract-operation\">CharacterSetMatcher</a></emu-xref>(<var>A</var>, <emu-val>false</emu-val>, <var>direction</var>).</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"noz-pdyz\">\n        <emu-t>\\</emu-t>\n        <emu-nt><a href=\"#prod-AtomEscape\">AtomEscape</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the Matcher that is the result of evaluating <emu-nt><a href=\"#prod-AtomEscape\">AtomEscape</a></emu-nt> with argument <var>direction</var>.</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"zqqoud41\"><emu-nt><a href=\"#prod-CharacterClass\">CharacterClass</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Evaluate <emu-nt><a href=\"#prod-CharacterClass\">CharacterClass</a></emu-nt> to obtain a CharSet <var>A</var> and a Boolean <var>invert</var>.</li><li>Return !&#160;<emu-xref aoid=\"CharacterSetMatcher\"><a href=\"#sec-runtime-semantics-charactersetmatcher-abstract-operation\">CharacterSetMatcher</a></emu-xref>(<var>A</var>, <var>invert</var>, <var>direction</var>).</li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"waoim9ah\">\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Evaluate <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> with argument <var>direction</var> to obtain a Matcher <var>m</var>.</li><li>Let <var>parenIndex</var> be the number of left-capturing parentheses in the entire regular expression that occur to the left of this <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt>. This is the total number of <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"waoim9ah\">\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Nodes</a></emu-xref> prior to or enclosing this <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt>.</li><li>Return a new Matcher with parameters (<var>x</var>, <var>c</var>) that captures <var>direction</var>, <var>m</var>, and <var>parenIndex</var> and performs the following steps when called:<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>x</var> is a State.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>c</var> is a Continuation.</li><li>Let <var>d</var> be a new Continuation with parameters (<var>y</var>) that captures <var>x</var>, <var>c</var>, <var>direction</var>, and <var>parenIndex</var> and performs the following steps when called:<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>y</var> is a State.</li><li>Let <var>cap</var> be a copy of <var>y</var>'s <var>captures</var> <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>xe</var> be <var>x</var>'s <var>endIndex</var>.</li><li>Let <var>ye</var> be <var>y</var>'s <var>endIndex</var>.</li><li>If <var>direction</var> = 1, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>xe</var> &#8804; <var>ye</var>.</li><li>Let <var>s</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the characters of <var>Input</var> at indices <var>xe</var> (inclusive) through <var>ye</var> (exclusive).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>direction</var> is -1.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>ye</var> &#8804; <var>xe</var>.</li><li>Let <var>s</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the characters of <var>Input</var> at indices <var>ye</var> (inclusive) through <var>xe</var> (exclusive).</li></ol></li><li>Set <var>cap</var>[<var>parenIndex</var> + 1] to <var>s</var>.</li><li>Let <var>z</var> be the State (<var>ye</var>, <var>cap</var>).</li><li>Return <var>c</var>(<var>z</var>).</li></ol></li><li>Return <var>m</var>(<var>x</var>, <var>d</var>).</li></ol></li></ol></emu-alg>\n        <p>The production <emu-grammar><emu-production name=\"Atom\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Atom\">Atom</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"1223xxig\">\n        <emu-t>(</emu-t>\n        <emu-t>?</emu-t>\n        <emu-t>:</emu-t>\n        <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> evaluates as follows:</p>\n        <emu-alg><ol><li>Return the Matcher that is the result of evaluating <emu-nt><a href=\"#prod-Disjunction\">Disjunction</a></emu-nt> with argument <var>direction</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-backreference-matcher": {"num": "22.2.2.9.2", "title": "#sec-backreference-matcher BackreferenceMatcher ( n, direction )", "html": "<emu-clause id=\"sec-backreference-matcher\" type=\"abstract operation\" aoid=\"BackreferenceMatcher\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-backreference-matcher\">#sec-backreference-matcher</span> BackreferenceMatcher ( <var>n</var>, <var>direction</var> )</h1>\n          <p>The abstract operation BackreferenceMatcher takes arguments <var>n</var> (a positive <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>) and <var>direction</var> (1 or -1). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>n</var> &#8805; 1.</li><li>Return a new Matcher with parameters (<var>x</var>, <var>c</var>) that captures <var>n</var> and <var>direction</var> and performs the following steps when called:<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>x</var> is a State.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>c</var> is a Continuation.</li><li>Let <var>cap</var> be <var>x</var>'s <var>captures</var> <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>s</var> be <var>cap</var>[<var>n</var>].</li><li>If <var>s</var> is <emu-val>undefined</emu-val>, return <var>c</var>(<var>x</var>).</li><li>Let <var>e</var> be <var>x</var>'s <var>endIndex</var>.</li><li>Let <var>len</var> be the number of elements in <var>s</var>.</li><li>Let <var>f</var> be <var>e</var> + <var>direction</var> &#215; <var>len</var>.</li><li>If <var>f</var> &lt; 0 or <var>f</var> &gt; <var>InputLength</var>, return <emu-const>failure</emu-const>.</li><li>Let <var>g</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>e</var>, <var>f</var>).</li><li>If there exists an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> between 0 (inclusive) and <var>len</var> (exclusive) such that <emu-xref aoid=\"Canonicalize\"><a href=\"#sec-runtime-semantics-canonicalize-ch\">Canonicalize</a></emu-xref>(<var>s</var>[<var>i</var>]) is not the same character value as <emu-xref aoid=\"Canonicalize\"><a href=\"#sec-runtime-semantics-canonicalize-ch\">Canonicalize</a></emu-xref>(<var>Input</var>[<var>g</var> + <var>i</var>]), return <emu-const>failure</emu-const>.</li><li>Let <var>y</var> be the State (<var>f</var>, <var>cap</var>).</li><li>Return <var>c</var>(<var>y</var>).</li></ol></li></ol></emu-alg>\n        </emu-clause>\n\n        "}}, "figData": {"table-nonbinary-unicode-properties": "Table 68", "table-binary-unicode-properties": "Table 69", "table-unicode-general-category-values": "Table 70"}}}