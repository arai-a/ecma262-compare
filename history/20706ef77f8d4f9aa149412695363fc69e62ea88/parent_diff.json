{"from": {"secList": ["sec-notifywaiter"], "secData": {"sec-notifywaiter": {"num": "24.4.1.10", "title": "#sec-notifywaiter NotifyWaiter ( WL, W )", "html": "<emu-clause id=\"sec-notifywaiter\" aoid=\"NotifyWaiter\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-notifywaiter\">#sec-notifywaiter</span> NotifyWaiter ( <var>WL</var>, <var>W</var> )</h1>\n        <p>The abstract operation NotifyWaiter takes two arguments, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var> and an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> signifier <var>W</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is on the list of waiters in <var>WL</var>.</li><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventsRecord</var> be the <emu-xref href=\"#sec-agent-event-records\"><a href=\"#sec-agent-event-records\">Agent Events Record</a></emu-xref> in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Let <var>agentSynchronizesWith</var> be <var>eventsRecord</var>.[[AgentSynchronizesWith]].</li><li>Let <var>notifierEventList</var> be <var>eventsRecord</var>.[[EventList]].</li><li>Let <var>waiterEventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <var>W</var>.</li><li>Let <var>notifyEvent</var> and <var>waitEvent</var> be new <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize</a></emu-xref> events.</li><li>Append <var>notifyEvent</var> to <var>notifierEventList</var>.</li><li>Append <var>waitEvent</var> to <var>waiterEventList</var>.</li><li>Append (<var>notifyEvent</var>, <var>waitEvent</var>) to <var>agentSynchronizesWith</var>.</li><li>Notify the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> <var>W</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The embedding may delay notifying <var>W</var>, e.g. for resource management reasons, but <var>W</var> must eventually be notified in order to guarantee forward progress.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-notifywaiter"], "secData": {"sec-notifywaiter": {"num": "24.4.1.10", "title": "#sec-notifywaiter NotifyWaiter ( WL, W )", "html": "<emu-clause id=\"sec-notifywaiter\" aoid=\"NotifyWaiter\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-notifywaiter\">#sec-notifywaiter</span> NotifyWaiter ( <var>WL</var>, <var>W</var> )</h1>\n        <p>The abstract operation NotifyWaiter takes two arguments, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var> and an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> signifier <var>W</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>.</li><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventsRecord</var> be the <emu-xref href=\"#sec-agent-event-records\"><a href=\"#sec-agent-event-records\">Agent Events Record</a></emu-xref> in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Let <var>agentSynchronizesWith</var> be <var>eventsRecord</var>.[[AgentSynchronizesWith]].</li><li>Let <var>notifierEventList</var> be <var>eventsRecord</var>.[[EventList]].</li><li>Let <var>waiterEventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <var>W</var>.</li><li>Let <var>notifyEvent</var> and <var>waitEvent</var> be new <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize</a></emu-xref> events.</li><li>Append <var>notifyEvent</var> to <var>notifierEventList</var>.</li><li>Append <var>waitEvent</var> to <var>waiterEventList</var>.</li><li>Append (<var>notifyEvent</var>, <var>waitEvent</var>) to <var>agentSynchronizesWith</var>.</li><li>Notify the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> <var>W</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The embedding may delay notifying <var>W</var>, e.g. for resource management reasons, but <var>W</var> must eventually be notified in order to guarantee forward progress.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}}, "figData": {}}}