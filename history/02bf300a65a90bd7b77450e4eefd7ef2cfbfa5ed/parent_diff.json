{"from": {"secList": ["sec-error-message", "sec-nativeerror-constructors", "sec-aggregate-error", "sec-aggregate-error-constructor", "sec-aggregate-error-objects", "sec-error-constructor", "sec-operations-on-objects", "sec-error-objects", "sec-nativeerror"], "secData": {"sec-error-message": {"num": "20.5.1.1", "title": "#sec-error-message Error ( message )", "html": "<emu-clause id=\"sec-error-message\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-message\">#sec-error-message</span> Error ( <var>message</var> )</h1>\n        <p>When the <code>Error</code> function is called with argument <var>message</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, let <var>newTarget</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>; else let <var>newTarget</var> be NewTarget.</li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(<var>newTarget</var>, <emu-val>\"%Error.prototype%\"</emu-val>, &#171; [[ErrorData]] &#187;).</li><li>If <var>message</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>msg</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>message</var>).</li><li>Let <var>msgDesc</var> be the PropertyDescriptor { [[Value]]: <var>msg</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>O</var>, <emu-val>\"message\"</emu-val>, <var>msgDesc</var>).</li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-nativeerror-constructors": {"num": "20.5.6.1", "title": "#sec-nativeerror-constructors The NativeError Constructors", "html": "<emu-clause id=\"sec-nativeerror-constructors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror-constructors\">#sec-nativeerror-constructors</span> The <var>NativeError</var> Constructors</h1>\n        <p>Each <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>creates and initializes a new <var>NativeError</var> object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. A call of the object as a function is equivalent to calling it as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the same arguments. Thus the function call <code><var>NativeError</var>(&#8230;)</code> is equivalent to the object creation expression <code>new <var>NativeError</var>(&#8230;)</code> with the same arguments.</li>\n          <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified <var>NativeError</var> behaviour must include a <code>super</code> call to the <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n        </ul>\n\n        <div id=\"excluded-sec-nativeerror\"><h1><span class=\"secnum\">20.5.6.1.1</span>#sec-nativeerror NativeError ( message )</h1>...</div></emu-clause>\n\n      "}, "sec-aggregate-error": {"num": "20.5.7.1.1", "title": "#sec-aggregate-error AggregateError ( errors, message )", "html": "<emu-clause id=\"sec-aggregate-error\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error\">#sec-aggregate-error</span> AggregateError ( <var>errors</var>, <var>message</var> )</h1>\n          <p>When the <emu-val>AggregateError</emu-val> function is called with arguments <var>errors</var> and <var>message</var>, the following steps are taken:</p>\n          <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, let <var>newTarget</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>; else let <var>newTarget</var> be NewTarget.</li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(<var>newTarget</var>, <emu-val>\"%AggregateError.prototype%\"</emu-val>, &#171; [[ErrorData]] &#187;).</li><li>If <var>message</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>msg</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>message</var>).</li><li>Let <var>msgDesc</var> be the PropertyDescriptor { [[Value]]: <var>msg</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>O</var>, <emu-val>\"message\"</emu-val>, <var>msgDesc</var>).</li></ol></li><li>Let <var>errorsList</var> be ?&#160;<emu-xref aoid=\"IterableToList\"><a href=\"#sec-iterabletolist\">IterableToList</a></emu-xref>(<var>errors</var>).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>O</var>, <emu-val>\"errors\"</emu-val>, PropertyDescriptor { [[Configurable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Writable]]: <emu-val>true</emu-val>, [[Value]]: !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>errorsList</var>) }).</li><li>Return <var>O</var>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-aggregate-error-constructor": {"num": "20.5.7.1", "title": "#sec-aggregate-error-constructor The AggregateError Constructor", "html": "<emu-clause id=\"sec-aggregate-error-constructor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error-constructor\">#sec-aggregate-error-constructor</span> The AggregateError Constructor</h1>\n        <p>The AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>is <dfn>%AggregateError%</dfn>.</li>\n          <li>is the initial value of the <emu-val>\"AggregateError\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n          <li>creates and initializes a new AggregateError object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AggregateError(&#8230;)</code> is equivalent to the object creation expression <code>new AggregateError(&#8230;)</code> with the same arguments.</li>\n          <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified AggregateError behaviour must include a <code>super</code> call to the AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n        </ul>\n\n        <div id=\"excluded-sec-aggregate-error\"><h1><span class=\"secnum\">20.5.7.1.1</span>#sec-aggregate-error AggregateError ( errors, message )</h1>...</div></emu-clause>\n\n      "}, "sec-aggregate-error-objects": {"num": "20.5.7", "title": "#sec-aggregate-error-objects AggregateError Objects", "html": "<emu-clause id=\"sec-aggregate-error-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error-objects\">#sec-aggregate-error-objects</span> AggregateError Objects</h1>\n\n      <div id=\"excluded-sec-aggregate-error-constructor\"><h1><span class=\"secnum\">20.5.7.1</span>#sec-aggregate-error-constructor The AggregateError Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-aggregate-error-constructors\"><h1><span class=\"secnum\">20.5.7.2</span>#sec-properties-of-the-aggregate-error-constructors Properties of the AggregateError Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-aggregate-error-prototype-objects\"><h1><span class=\"secnum\">20.5.7.3</span>#sec-properties-of-the-aggregate-error-prototype-objects Properties of the AggregateError Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-aggregate-error-instances\"><h1><span class=\"secnum\">20.5.7.4</span>#sec-properties-of-aggregate-error-instances Properties of AggregateError Instances</h1>...</div></emu-clause>\n  "}, "sec-error-constructor": {"num": "20.5.1", "title": "#sec-error-constructor The Error Constructor", "html": "<emu-clause id=\"sec-error-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</span> The Error Constructor</h1>\n      <p>The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Error%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Error\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Error object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Error(&#8230;)</code> is equivalent to the object creation expression <code>new Error(&#8230;)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified Error behaviour must include a <code>super</code> call to the Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-error-message\"><h1><span class=\"secnum\">20.5.1.1</span>#sec-error-message Error ( message )</h1>...</div></emu-clause>\n\n    "}, "sec-operations-on-objects": {"num": "7.3", "title": "#sec-operations-on-objects Operations on Objects", "html": "<emu-clause id=\"sec-operations-on-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-operations-on-objects\">#sec-operations-on-objects</span> Operations on Objects</h1>\n\n    <div id=\"excluded-sec-makebasicobject\"><h1><span class=\"secnum\">7.3.1</span>#sec-makebasicobject MakeBasicObject ( internalSlotsList )</h1>...</div><div id=\"excluded-sec-get-o-p\"><h1><span class=\"secnum\">7.3.2</span>#sec-get-o-p Get ( O, P )</h1>...</div><div id=\"excluded-sec-getv\"><h1><span class=\"secnum\">7.3.3</span>#sec-getv GetV ( V, P )</h1>...</div><div id=\"excluded-sec-set-o-p-v-throw\"><h1><span class=\"secnum\">7.3.4</span>#sec-set-o-p-v-throw Set ( O, P, V, Throw )</h1>...</div><div id=\"excluded-sec-createdataproperty\"><h1><span class=\"secnum\">7.3.5</span>#sec-createdataproperty CreateDataProperty ( O, P, V )</h1>...</div><div id=\"excluded-sec-createmethodproperty\"><h1><span class=\"secnum\">7.3.6</span>#sec-createmethodproperty CreateMethodProperty ( O, P, V )</h1>...</div><div id=\"excluded-sec-createdatapropertyorthrow\"><h1><span class=\"secnum\">7.3.7</span>#sec-createdatapropertyorthrow CreateDataPropertyOrThrow ( O, P, V )</h1>...</div><div id=\"excluded-sec-definepropertyorthrow\"><h1><span class=\"secnum\">7.3.8</span>#sec-definepropertyorthrow DefinePropertyOrThrow ( O, P, desc )</h1>...</div><div id=\"excluded-sec-deletepropertyorthrow\"><h1><span class=\"secnum\">7.3.9</span>#sec-deletepropertyorthrow DeletePropertyOrThrow ( O, P )</h1>...</div><div id=\"excluded-sec-getmethod\"><h1><span class=\"secnum\">7.3.10</span>#sec-getmethod GetMethod ( V, P )</h1>...</div><div id=\"excluded-sec-hasproperty\"><h1><span class=\"secnum\">7.3.11</span>#sec-hasproperty HasProperty ( O, P )</h1>...</div><div id=\"excluded-sec-hasownproperty\"><h1><span class=\"secnum\">7.3.12</span>#sec-hasownproperty HasOwnProperty ( O, P )</h1>...</div><div id=\"excluded-sec-call\"><h1><span class=\"secnum\">7.3.13</span>#sec-call Call ( F, V [ , argumentsList ] )</h1>...</div><div id=\"excluded-sec-construct\"><h1><span class=\"secnum\">7.3.14</span>#sec-construct Construct ( F [ , argumentsList [ , newTarget ] ] )</h1>...</div><div id=\"excluded-sec-setintegritylevel\"><h1><span class=\"secnum\">7.3.15</span>#sec-setintegritylevel SetIntegrityLevel ( O, level )</h1>...</div><div id=\"excluded-sec-testintegritylevel\"><h1><span class=\"secnum\">7.3.16</span>#sec-testintegritylevel TestIntegrityLevel ( O, level )</h1>...</div><div id=\"excluded-sec-createarrayfromlist\"><h1><span class=\"secnum\">7.3.17</span>#sec-createarrayfromlist CreateArrayFromList ( elements )</h1>...</div><div id=\"excluded-sec-lengthofarraylike\"><h1><span class=\"secnum\">7.3.18</span>#sec-lengthofarraylike LengthOfArrayLike ( obj )</h1>...</div><div id=\"excluded-sec-createlistfromarraylike\"><h1><span class=\"secnum\">7.3.19</span>#sec-createlistfromarraylike CreateListFromArrayLike ( obj [ , elementTypes ] )</h1>...</div><div id=\"excluded-sec-invoke\"><h1><span class=\"secnum\">7.3.20</span>#sec-invoke Invoke ( V, P [ , argumentsList ] )</h1>...</div><div id=\"excluded-sec-ordinaryhasinstance\"><h1><span class=\"secnum\">7.3.21</span>#sec-ordinaryhasinstance OrdinaryHasInstance ( C, O )</h1>...</div><div id=\"excluded-sec-speciesconstructor\"><h1><span class=\"secnum\">7.3.22</span>#sec-speciesconstructor SpeciesConstructor ( O, defaultConstructor )</h1>...</div><div id=\"excluded-sec-enumerableownpropertynames\"><h1><span class=\"secnum\">7.3.23</span>#sec-enumerableownpropertynames EnumerableOwnPropertyNames ( O, kind )</h1>...</div><div id=\"excluded-sec-getfunctionrealm\"><h1><span class=\"secnum\">7.3.24</span>#sec-getfunctionrealm GetFunctionRealm ( obj )</h1>...</div><div id=\"excluded-sec-copydataproperties\"><h1><span class=\"secnum\">7.3.25</span>#sec-copydataproperties CopyDataProperties ( target, source, excludedItems )</h1>...</div><div id=\"excluded-sec-privateelementfind\"><h1><span class=\"secnum\">7.3.26</span>#sec-privateelementfind PrivateElementFind ( O, P )</h1>...</div><div id=\"excluded-sec-privatefieldadd\"><h1><span class=\"secnum\">7.3.27</span>#sec-privatefieldadd PrivateFieldAdd ( O, P, value )</h1>...</div><div id=\"excluded-sec-privatemethodoraccessoradd\"><h1><span class=\"secnum\">7.3.28</span>#sec-privatemethodoraccessoradd PrivateMethodOrAccessorAdd ( O, method )</h1>...</div><div id=\"excluded-sec-privateget\"><h1><span class=\"secnum\">7.3.29</span>#sec-privateget PrivateGet ( O, P )</h1>...</div><div id=\"excluded-sec-privateset\"><h1><span class=\"secnum\">7.3.30</span>#sec-privateset PrivateSet ( O, P, value )</h1>...</div><div id=\"excluded-sec-definefield\"><h1><span class=\"secnum\">7.3.31</span>#sec-definefield DefineField ( receiver, fieldRecord )</h1>...</div><div id=\"excluded-sec-initializeinstanceelements\"><h1><span class=\"secnum\">7.3.32</span>#sec-initializeinstanceelements InitializeInstanceElements ( O, constructor )</h1>...</div></emu-clause>\n\n  "}, "sec-error-objects": {"num": "20.5", "title": "#sec-error-objects Error Objects", "html": "<emu-clause id=\"sec-error-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-objects\">#sec-error-objects</span> Error Objects</h1>\n    <p>Instances of Error objects are thrown as exceptions when runtime errors occur. The Error objects may also serve as base objects for user-defined exception classes.</p>\n    <p>When an ECMAScript implementation detects a runtime error, it throws a new instance of one of the <var>NativeError</var> objects defined in <emu-xref href=\"#sec-native-error-types-used-in-this-standard\"><a href=\"#sec-native-error-types-used-in-this-standard\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard\">#sec-native-error-types-used-in-this-standard</a></emu-xref> or a new instance of AggregateError object defined in <emu-xref href=\"#sec-aggregate-error-objects\"><a href=\"#sec-aggregate-error-objects\" class=\"excluded-xref\" excluded-id=\"sec-aggregate-error-objects\">#sec-aggregate-error-objects</a></emu-xref>. Each of these objects has the structure described below, differing only in the name used as the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name instead of <var>NativeError</var>, in the <code>name</code> property of the prototype object, in the <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> <code>message</code> property of the prototype object, and in the presence of the <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>-specific <code>errors</code> property.</p>\n\n    <div id=\"excluded-sec-error-constructor\"><h1><span class=\"secnum\">20.5.1</span>#sec-error-constructor The Error Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-error-constructor\"><h1><span class=\"secnum\">20.5.2</span>#sec-properties-of-the-error-constructor Properties of the Error Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-error-prototype-object\"><h1><span class=\"secnum\">20.5.3</span>#sec-properties-of-the-error-prototype-object Properties of the Error Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-error-instances\"><h1><span class=\"secnum\">20.5.4</span>#sec-properties-of-error-instances Properties of Error Instances</h1>...</div><div id=\"excluded-sec-native-error-types-used-in-this-standard\"><h1><span class=\"secnum\">20.5.5</span>#sec-native-error-types-used-in-this-standard Native Error Types Used in This Standard</h1>...</div><div id=\"excluded-sec-nativeerror-object-structure\"><h1><span class=\"secnum\">20.5.6</span>#sec-nativeerror-object-structure NativeError Object Structure</h1>...</div><div id=\"excluded-sec-aggregate-error-objects\"><h1><span class=\"secnum\">20.5.7</span>#sec-aggregate-error-objects AggregateError Objects</h1>...</div></emu-clause>\n"}, "sec-nativeerror": {"num": "20.5.6.1.1", "title": "#sec-nativeerror NativeError ( message )", "html": "<emu-clause id=\"sec-nativeerror\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror\">#sec-nativeerror</span> <var>NativeError</var> ( <var>message</var> )</h1>\n          <p>When a <var>NativeError</var> function is called with argument <var>message</var>, the following steps are taken:</p>\n          <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, let <var>newTarget</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>; else let <var>newTarget</var> be NewTarget.</li><li id=\"step-nativerror-ordinarycreatefromconstructor\">Let <var>O</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(<var>newTarget</var>, <code>\"%<var>NativeError</var>.prototype%\"</code>, &#171; [[ErrorData]] &#187;).</li><li>If <var>message</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>msg</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>message</var>).</li><li>Let <var>msgDesc</var> be the PropertyDescriptor { [[Value]]: <var>msg</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>O</var>, <emu-val>\"message\"</emu-val>, <var>msgDesc</var>).</li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n          <p>The actual value of the string passed in step <emu-xref href=\"#step-nativerror-ordinarycreatefromconstructor\"><a href=\"#step-nativerror-ordinarycreatefromconstructor\" class=\"excluded-xref\" excluded-id=\"step-nativerror-ordinarycreatefromconstructor\">#step-nativerror-ordinarycreatefromconstructor</a></emu-xref> is either <emu-val>\"%EvalError.prototype%\"</emu-val>, <emu-val>\"%RangeError.prototype%\"</emu-val>, <emu-val>\"%ReferenceError.prototype%\"</emu-val>, <emu-val>\"%SyntaxError.prototype%\"</emu-val>, <emu-val>\"%TypeError.prototype%\"</emu-val>, or <emu-val>\"%URIError.prototype%\"</emu-val> corresponding to which <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is being defined.</p>\n        </emu-clause>\n      "}}, "figData": {}}, "to": {"secList": ["sec-installerrorcause", "sec-error-message", "sec-abstract-operations-for-error-objects", "sec-nativeerror-constructors", "sec-createnonenumerabledatapropertyorthrow", "sec-aggregate-error", "sec-aggregate-error-constructor", "sec-aggregate-error-objects", "sec-error-constructor", "sec-operations-on-objects", "sec-error-objects", "sec-nativeerror"], "secData": {"sec-installerrorcause": {"num": "20.5.8.1", "title": "#sec-installerrorcause InstallErrorCause ( O, options )", "html": "<emu-clause id=\"sec-installerrorcause\" type=\"abstract operation\" aoid=\"InstallErrorCause\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-installerrorcause\">#sec-installerrorcause</span> InstallErrorCause ( <var>O</var>, <var>options</var> )</h1>\n        <p>The abstract operation InstallErrorCause takes arguments <var>O</var> (an Object) and <var>options</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It is used to create a <emu-val>\"cause\"</emu-val> property on <var>O</var> when a <emu-val>\"cause\"</emu-val> property is present on <var>options</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>options</var>) is Object and ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>options</var>, <emu-val>\"cause\"</emu-val>) is <emu-val>true</emu-val>, then<ol><li>Let <var>cause</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>options</var>, <emu-val>\"cause\"</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateNonEnumerableDataPropertyOrThrow\"><a href=\"#sec-createnonenumerabledatapropertyorthrow\">CreateNonEnumerableDataPropertyOrThrow</a></emu-xref>(<var>O</var>, <emu-val>\"cause\"</emu-val>, <var>cause</var>).</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-error-message": {"num": "20.5.1.1", "title": "#sec-error-message Error ( message [ , options ] )", "html": "<emu-clause id=\"sec-error-message\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-message\">#sec-error-message</span> Error ( <var>message</var> [ , <var>options</var> ] )</h1>\n        <p>When the <code>Error</code> function is called with argument <var>message</var> and optional argument <var>options</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, let <var>newTarget</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>; else let <var>newTarget</var> be NewTarget.</li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(<var>newTarget</var>, <emu-val>\"%Error.prototype%\"</emu-val>, &#171; [[ErrorData]] &#187;).</li><li>If <var>message</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>msg</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>message</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateNonEnumerableDataPropertyOrThrow\"><a href=\"#sec-createnonenumerabledatapropertyorthrow\">CreateNonEnumerableDataPropertyOrThrow</a></emu-xref>(<var>O</var>, <emu-val>\"message\"</emu-val>, <var>msg</var>).</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"InstallErrorCause\"><a href=\"#sec-installerrorcause\">InstallErrorCause</a></emu-xref>(<var>O</var>, <var>options</var>).</li><li>Return <var>O</var>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-abstract-operations-for-error-objects": {"num": "20.5.8", "title": "#sec-abstract-operations-for-error-objects Abstract Operations for Error Objects", "html": "<emu-clause id=\"sec-abstract-operations-for-error-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-error-objects\">#sec-abstract-operations-for-error-objects</span> Abstract Operations for Error Objects</h1>\n\n      <div id=\"excluded-sec-installerrorcause\"><h1><span class=\"secnum\">20.5.8.1</span>#sec-installerrorcause InstallErrorCause ( O, options )</h1>...</div></emu-clause>\n  "}, "sec-nativeerror-constructors": {"num": "20.5.6.1", "title": "#sec-nativeerror-constructors The NativeError Constructors", "html": "<emu-clause id=\"sec-nativeerror-constructors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror-constructors\">#sec-nativeerror-constructors</span> The <var>NativeError</var> Constructors</h1>\n        <p>Each <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>creates and initializes a new <var>NativeError</var> object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. A call of the object as a function is equivalent to calling it as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the same arguments. Thus the function call <code><var>NativeError</var>(&#8230;)</code> is equivalent to the object creation expression <code>new <var>NativeError</var>(&#8230;)</code> with the same arguments.</li>\n          <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified <var>NativeError</var> behaviour must include a <code>super</code> call to the <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n        </ul>\n\n        <div id=\"excluded-sec-nativeerror\"><h1><span class=\"secnum\">20.5.6.1.1</span>#sec-nativeerror NativeError ( message [ , options ] )</h1>...</div></emu-clause>\n\n      "}, "sec-createnonenumerabledatapropertyorthrow": {"num": "7.3.8", "title": "#sec-createnonenumerabledatapropertyorthrow CreateNonEnumerableDataPropertyOrThrow ( O, P, V )", "html": "<emu-clause id=\"sec-createnonenumerabledatapropertyorthrow\" type=\"abstract operation\" aoid=\"CreateNonEnumerableDataPropertyOrThrow\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createnonenumerabledatapropertyorthrow\">#sec-createnonenumerabledatapropertyorthrow</span> CreateNonEnumerableDataPropertyOrThrow ( <var>O</var>, <var>P</var>, <var>V</var> )</h1>\n      <p>The abstract operation CreateNonEnumerableDataPropertyOrThrow takes arguments <var>O</var> (an Object), <var>P</var> (a property key), and <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It is used to create a new non-enumerable own property of an object. It throws a <emu-val>TypeError</emu-val> exception if the requested property update cannot be performed. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>newDesc</var> be the PropertyDescriptor { [[Value]]: <var>V</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</li><li>Return ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>P</var>, <var>newDesc</var>).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>This abstract operation creates a property whose attributes are set to the same defaults used for properties created by the ECMAScript language assignment operator except it is not enumerable. Normally, the property will not already exist. If it does exist and is not configurable or if <var>O</var> is not extensible, [[DefineOwnProperty]] will return <emu-val>false</emu-val> causing this operation to throw a <emu-val>TypeError</emu-val> exception.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-aggregate-error": {"num": "20.5.7.1.1", "title": "#sec-aggregate-error AggregateError ( errors, message [ , options ] )", "html": "<emu-clause id=\"sec-aggregate-error\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error\">#sec-aggregate-error</span> AggregateError ( <var>errors</var>, <var>message</var> [ , <var>options</var> ] )</h1>\n          <p>When the <emu-val>AggregateError</emu-val> function is called with arguments <var>errors</var> and <var>message</var> and optional argument <var>options</var>, the following steps are taken:</p>\n          <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, let <var>newTarget</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>; else let <var>newTarget</var> be NewTarget.</li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(<var>newTarget</var>, <emu-val>\"%AggregateError.prototype%\"</emu-val>, &#171; [[ErrorData]] &#187;).</li><li>If <var>message</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>msg</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>message</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateNonEnumerableDataPropertyOrThrow\"><a href=\"#sec-createnonenumerabledatapropertyorthrow\">CreateNonEnumerableDataPropertyOrThrow</a></emu-xref>(<var>O</var>, <emu-val>\"message\"</emu-val>, <var>msg</var>).</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"InstallErrorCause\"><a href=\"#sec-installerrorcause\">InstallErrorCause</a></emu-xref>(<var>O</var>, <var>options</var>).</li><li>Let <var>errorsList</var> be ?&#160;<emu-xref aoid=\"IterableToList\"><a href=\"#sec-iterabletolist\">IterableToList</a></emu-xref>(<var>errors</var>).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>O</var>, <emu-val>\"errors\"</emu-val>, PropertyDescriptor { [[Configurable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Writable]]: <emu-val>true</emu-val>, [[Value]]: !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>errorsList</var>) }).</li><li>Return <var>O</var>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-aggregate-error-constructor": {"num": "20.5.7.1", "title": "#sec-aggregate-error-constructor The AggregateError Constructor", "html": "<emu-clause id=\"sec-aggregate-error-constructor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error-constructor\">#sec-aggregate-error-constructor</span> The AggregateError Constructor</h1>\n        <p>The AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>is <dfn>%AggregateError%</dfn>.</li>\n          <li>is the initial value of the <emu-val>\"AggregateError\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n          <li>creates and initializes a new AggregateError object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AggregateError(&#8230;)</code> is equivalent to the object creation expression <code>new AggregateError(&#8230;)</code> with the same arguments.</li>\n          <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified AggregateError behaviour must include a <code>super</code> call to the AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n        </ul>\n\n        <div id=\"excluded-sec-aggregate-error\"><h1><span class=\"secnum\">20.5.7.1.1</span>#sec-aggregate-error AggregateError ( errors, message [ , options ] )</h1>...</div></emu-clause>\n\n      "}, "sec-aggregate-error-objects": {"num": "20.5.7", "title": "#sec-aggregate-error-objects AggregateError Objects", "html": "<emu-clause id=\"sec-aggregate-error-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error-objects\">#sec-aggregate-error-objects</span> AggregateError Objects</h1>\n\n      <div id=\"excluded-sec-aggregate-error-constructor\"><h1><span class=\"secnum\">20.5.7.1</span>#sec-aggregate-error-constructor The AggregateError Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-aggregate-error-constructors\"><h1><span class=\"secnum\">20.5.7.2</span>#sec-properties-of-the-aggregate-error-constructors Properties of the AggregateError Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-aggregate-error-prototype-objects\"><h1><span class=\"secnum\">20.5.7.3</span>#sec-properties-of-the-aggregate-error-prototype-objects Properties of the AggregateError Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-aggregate-error-instances\"><h1><span class=\"secnum\">20.5.7.4</span>#sec-properties-of-aggregate-error-instances Properties of AggregateError Instances</h1>...</div></emu-clause>\n\n    "}, "sec-error-constructor": {"num": "20.5.1", "title": "#sec-error-constructor The Error Constructor", "html": "<emu-clause id=\"sec-error-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</span> The Error Constructor</h1>\n      <p>The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Error%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Error\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Error object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Error(&#8230;)</code> is equivalent to the object creation expression <code>new Error(&#8230;)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified Error behaviour must include a <code>super</code> call to the Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-error-message\"><h1><span class=\"secnum\">20.5.1.1</span>#sec-error-message Error ( message [ , options ] )</h1>...</div></emu-clause>\n\n    "}, "sec-operations-on-objects": {"num": "7.3", "title": "#sec-operations-on-objects Operations on Objects", "html": "<emu-clause id=\"sec-operations-on-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-operations-on-objects\">#sec-operations-on-objects</span> Operations on Objects</h1>\n\n    <div id=\"excluded-sec-makebasicobject\"><h1><span class=\"secnum\">7.3.1</span>#sec-makebasicobject MakeBasicObject ( internalSlotsList )</h1>...</div><div id=\"excluded-sec-get-o-p\"><h1><span class=\"secnum\">7.3.2</span>#sec-get-o-p Get ( O, P )</h1>...</div><div id=\"excluded-sec-getv\"><h1><span class=\"secnum\">7.3.3</span>#sec-getv GetV ( V, P )</h1>...</div><div id=\"excluded-sec-set-o-p-v-throw\"><h1><span class=\"secnum\">7.3.4</span>#sec-set-o-p-v-throw Set ( O, P, V, Throw )</h1>...</div><div id=\"excluded-sec-createdataproperty\"><h1><span class=\"secnum\">7.3.5</span>#sec-createdataproperty CreateDataProperty ( O, P, V )</h1>...</div><div id=\"excluded-sec-createmethodproperty\"><h1><span class=\"secnum\">7.3.6</span>#sec-createmethodproperty CreateMethodProperty ( O, P, V )</h1>...</div><div id=\"excluded-sec-createdatapropertyorthrow\"><h1><span class=\"secnum\">7.3.7</span>#sec-createdatapropertyorthrow CreateDataPropertyOrThrow ( O, P, V )</h1>...</div><div id=\"excluded-sec-createnonenumerabledatapropertyorthrow\"><h1><span class=\"secnum\">7.3.8</span>#sec-createnonenumerabledatapropertyorthrow CreateNonEnumerableDataPropertyOrThrow ( O, P, V )</h1>...</div><div id=\"excluded-sec-definepropertyorthrow\"><h1><span class=\"secnum\">7.3.9</span>#sec-definepropertyorthrow DefinePropertyOrThrow ( O, P, desc )</h1>...</div><div id=\"excluded-sec-deletepropertyorthrow\"><h1><span class=\"secnum\">7.3.10</span>#sec-deletepropertyorthrow DeletePropertyOrThrow ( O, P )</h1>...</div><div id=\"excluded-sec-getmethod\"><h1><span class=\"secnum\">7.3.11</span>#sec-getmethod GetMethod ( V, P )</h1>...</div><div id=\"excluded-sec-hasproperty\"><h1><span class=\"secnum\">7.3.12</span>#sec-hasproperty HasProperty ( O, P )</h1>...</div><div id=\"excluded-sec-hasownproperty\"><h1><span class=\"secnum\">7.3.13</span>#sec-hasownproperty HasOwnProperty ( O, P )</h1>...</div><div id=\"excluded-sec-call\"><h1><span class=\"secnum\">7.3.14</span>#sec-call Call ( F, V [ , argumentsList ] )</h1>...</div><div id=\"excluded-sec-construct\"><h1><span class=\"secnum\">7.3.15</span>#sec-construct Construct ( F [ , argumentsList [ , newTarget ] ] )</h1>...</div><div id=\"excluded-sec-setintegritylevel\"><h1><span class=\"secnum\">7.3.16</span>#sec-setintegritylevel SetIntegrityLevel ( O, level )</h1>...</div><div id=\"excluded-sec-testintegritylevel\"><h1><span class=\"secnum\">7.3.17</span>#sec-testintegritylevel TestIntegrityLevel ( O, level )</h1>...</div><div id=\"excluded-sec-createarrayfromlist\"><h1><span class=\"secnum\">7.3.18</span>#sec-createarrayfromlist CreateArrayFromList ( elements )</h1>...</div><div id=\"excluded-sec-lengthofarraylike\"><h1><span class=\"secnum\">7.3.19</span>#sec-lengthofarraylike LengthOfArrayLike ( obj )</h1>...</div><div id=\"excluded-sec-createlistfromarraylike\"><h1><span class=\"secnum\">7.3.20</span>#sec-createlistfromarraylike CreateListFromArrayLike ( obj [ , elementTypes ] )</h1>...</div><div id=\"excluded-sec-invoke\"><h1><span class=\"secnum\">7.3.21</span>#sec-invoke Invoke ( V, P [ , argumentsList ] )</h1>...</div><div id=\"excluded-sec-ordinaryhasinstance\"><h1><span class=\"secnum\">7.3.22</span>#sec-ordinaryhasinstance OrdinaryHasInstance ( C, O )</h1>...</div><div id=\"excluded-sec-speciesconstructor\"><h1><span class=\"secnum\">7.3.23</span>#sec-speciesconstructor SpeciesConstructor ( O, defaultConstructor )</h1>...</div><div id=\"excluded-sec-enumerableownpropertynames\"><h1><span class=\"secnum\">7.3.24</span>#sec-enumerableownpropertynames EnumerableOwnPropertyNames ( O, kind )</h1>...</div><div id=\"excluded-sec-getfunctionrealm\"><h1><span class=\"secnum\">7.3.25</span>#sec-getfunctionrealm GetFunctionRealm ( obj )</h1>...</div><div id=\"excluded-sec-copydataproperties\"><h1><span class=\"secnum\">7.3.26</span>#sec-copydataproperties CopyDataProperties ( target, source, excludedItems )</h1>...</div><div id=\"excluded-sec-privateelementfind\"><h1><span class=\"secnum\">7.3.27</span>#sec-privateelementfind PrivateElementFind ( O, P )</h1>...</div><div id=\"excluded-sec-privatefieldadd\"><h1><span class=\"secnum\">7.3.28</span>#sec-privatefieldadd PrivateFieldAdd ( O, P, value )</h1>...</div><div id=\"excluded-sec-privatemethodoraccessoradd\"><h1><span class=\"secnum\">7.3.29</span>#sec-privatemethodoraccessoradd PrivateMethodOrAccessorAdd ( O, method )</h1>...</div><div id=\"excluded-sec-privateget\"><h1><span class=\"secnum\">7.3.30</span>#sec-privateget PrivateGet ( O, P )</h1>...</div><div id=\"excluded-sec-privateset\"><h1><span class=\"secnum\">7.3.31</span>#sec-privateset PrivateSet ( O, P, value )</h1>...</div><div id=\"excluded-sec-definefield\"><h1><span class=\"secnum\">7.3.32</span>#sec-definefield DefineField ( receiver, fieldRecord )</h1>...</div><div id=\"excluded-sec-initializeinstanceelements\"><h1><span class=\"secnum\">7.3.33</span>#sec-initializeinstanceelements InitializeInstanceElements ( O, constructor )</h1>...</div></emu-clause>\n\n  "}, "sec-error-objects": {"num": "20.5", "title": "#sec-error-objects Error Objects", "html": "<emu-clause id=\"sec-error-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-objects\">#sec-error-objects</span> Error Objects</h1>\n    <p>Instances of Error objects are thrown as exceptions when runtime errors occur. The Error objects may also serve as base objects for user-defined exception classes.</p>\n    <p>When an ECMAScript implementation detects a runtime error, it throws a new instance of one of the <var>NativeError</var> objects defined in <emu-xref href=\"#sec-native-error-types-used-in-this-standard\"><a href=\"#sec-native-error-types-used-in-this-standard\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard\">#sec-native-error-types-used-in-this-standard</a></emu-xref> or a new instance of AggregateError object defined in <emu-xref href=\"#sec-aggregate-error-objects\"><a href=\"#sec-aggregate-error-objects\" class=\"excluded-xref\" excluded-id=\"sec-aggregate-error-objects\">#sec-aggregate-error-objects</a></emu-xref>. Each of these objects has the structure described below, differing only in the name used as the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name instead of <var>NativeError</var>, in the <code>name</code> property of the prototype object, in the <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> <code>message</code> property of the prototype object, and in the presence of the <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>-specific <code>errors</code> property.</p>\n\n    <div id=\"excluded-sec-error-constructor\"><h1><span class=\"secnum\">20.5.1</span>#sec-error-constructor The Error Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-error-constructor\"><h1><span class=\"secnum\">20.5.2</span>#sec-properties-of-the-error-constructor Properties of the Error Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-error-prototype-object\"><h1><span class=\"secnum\">20.5.3</span>#sec-properties-of-the-error-prototype-object Properties of the Error Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-error-instances\"><h1><span class=\"secnum\">20.5.4</span>#sec-properties-of-error-instances Properties of Error Instances</h1>...</div><div id=\"excluded-sec-native-error-types-used-in-this-standard\"><h1><span class=\"secnum\">20.5.5</span>#sec-native-error-types-used-in-this-standard Native Error Types Used in This Standard</h1>...</div><div id=\"excluded-sec-nativeerror-object-structure\"><h1><span class=\"secnum\">20.5.6</span>#sec-nativeerror-object-structure NativeError Object Structure</h1>...</div><div id=\"excluded-sec-aggregate-error-objects\"><h1><span class=\"secnum\">20.5.7</span>#sec-aggregate-error-objects AggregateError Objects</h1>...</div><div id=\"excluded-sec-abstract-operations-for-error-objects\"><h1><span class=\"secnum\">20.5.8</span>#sec-abstract-operations-for-error-objects Abstract Operations for Error Objects</h1>...</div></emu-clause>\n"}, "sec-nativeerror": {"num": "20.5.6.1.1", "title": "#sec-nativeerror NativeError ( message [ , options ] )", "html": "<emu-clause id=\"sec-nativeerror\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror\">#sec-nativeerror</span> <var>NativeError</var> ( <var>message</var> [ , <var>options</var> ] )</h1>\n          <p>When a <var>NativeError</var> function is called with argument <var>message</var> and optional argument <var>options</var>, the following steps are taken:</p>\n          <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, let <var>newTarget</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>; else let <var>newTarget</var> be NewTarget.</li><li id=\"step-nativerror-ordinarycreatefromconstructor\">Let <var>O</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(<var>newTarget</var>, <code>\"%<var>NativeError</var>.prototype%\"</code>, &#171; [[ErrorData]] &#187;).</li><li>If <var>message</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>msg</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>message</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateNonEnumerableDataPropertyOrThrow\"><a href=\"#sec-createnonenumerabledatapropertyorthrow\">CreateNonEnumerableDataPropertyOrThrow</a></emu-xref>(<var>O</var>, <emu-val>\"message\"</emu-val>, <var>msg</var>).</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"InstallErrorCause\"><a href=\"#sec-installerrorcause\">InstallErrorCause</a></emu-xref>(<var>O</var>, <var>options</var>).</li><li>Return <var>O</var>.</li></ol></emu-alg>\n          <p>The actual value of the string passed in step <emu-xref href=\"#step-nativerror-ordinarycreatefromconstructor\"><a href=\"#step-nativerror-ordinarycreatefromconstructor\" class=\"excluded-xref\" excluded-id=\"step-nativerror-ordinarycreatefromconstructor\">#step-nativerror-ordinarycreatefromconstructor</a></emu-xref> is either <emu-val>\"%EvalError.prototype%\"</emu-val>, <emu-val>\"%RangeError.prototype%\"</emu-val>, <emu-val>\"%ReferenceError.prototype%\"</emu-val>, <emu-val>\"%SyntaxError.prototype%\"</emu-val>, <emu-val>\"%TypeError.prototype%\"</emu-val>, or <emu-val>\"%URIError.prototype%\"</emu-val> corresponding to which <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is being defined.</p>\n        </emu-clause>\n      "}}, "figData": {}}}