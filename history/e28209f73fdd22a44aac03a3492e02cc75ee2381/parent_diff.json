{"from": {"secList": ["sec-template-literals-runtime-semantics-evaluation", "sec-object-initializer-runtime-semantics-evaluation", "sec-decode", "sec-string-literals-static-semantics-stringvalue", "sec-static-semantics-sv", "sec-static-semantics-tv-and-trv", "sec-codepointtoutf16codeunits", "sec-additional-syntax-string-literals-static-semantics", "sec-string.fromcodepoint", "sec-object-initializer-static-semantics-propname"], "secData": {"sec-template-literals-runtime-semantics-evaluation": {"num": "12.2.9.6", "title": "#sec-template-literals-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-template-literals-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-template-literals-runtime-semantics-evaluation\">#sec-template-literals-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"TemplateLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the String value whose code units are the elements of the TV of <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt> as defined in <emu-xref href=\"#sec-template-literal-lexical-components\"><a href=\"#sec-template-literal-lexical-components\" class=\"excluded-xref\" excluded-id=\"sec-template-literal-lexical-components\">#sec-template-literal-lexical-components</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SubstitutionTemplate\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"be95cc40\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>head</var> be the TV of <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt> as defined in <emu-xref href=\"#sec-template-literal-lexical-components\"><a href=\"#sec-template-literal-lexical-components\" class=\"excluded-xref\" excluded-id=\"sec-template-literal-lexical-components\">#sec-template-literal-lexical-components</a></emu-xref>.</li><li>Let <var>subRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>sub</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>subRef</var>).</li><li>Let <var>middle</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>sub</var>).</li><li>Let <var>tail</var> be the result of evaluating <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>tail</var>).</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>head</var>, <var>middle</var>, and <var>tail</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The string conversion semantics applied to the <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt> value are like <code>String.prototype.concat</code> rather than the <code>+</code> operator.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>tail</var> be the TV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt> as defined in <emu-xref href=\"#sec-template-literal-lexical-components\"><a href=\"#sec-template-literal-lexical-components\" class=\"excluded-xref\" excluded-id=\"sec-template-literal-lexical-components\">#sec-template-literal-lexical-components</a></emu-xref>.</li><li>Return the String value consisting of the code units of <var>tail</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b0b4f425\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>head</var> be the result of evaluating <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>head</var>).</li><li>Let <var>tail</var> be the TV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt> as defined in <emu-xref href=\"#sec-template-literal-lexical-components\"><a href=\"#sec-template-literal-lexical-components\" class=\"excluded-xref\" excluded-id=\"sec-template-literal-lexical-components\">#sec-template-literal-lexical-components</a></emu-xref>.</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>head</var> and <var>tail</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"dc7ec961\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>head</var> be the TV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt> as defined in <emu-xref href=\"#sec-template-literal-lexical-components\"><a href=\"#sec-template-literal-lexical-components\" class=\"excluded-xref\" excluded-id=\"sec-template-literal-lexical-components\">#sec-template-literal-lexical-components</a></emu-xref>.</li><li>Let <var>subRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>sub</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>subRef</var>).</li><li>Let <var>middle</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>sub</var>).</li><li>Return the sequence of code units consisting of the code units of <var>head</var> followed by the elements of <var>middle</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The string conversion semantics applied to the <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt> value are like <code>String.prototype.concat</code> rather than the <code>+</code> operator.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"47acf041\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>rest</var> be the result of evaluating <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>rest</var>).</li><li>Let <var>middle</var> be the TV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt> as defined in <emu-xref href=\"#sec-template-literal-lexical-components\"><a href=\"#sec-template-literal-lexical-components\" class=\"excluded-xref\" excluded-id=\"sec-template-literal-lexical-components\">#sec-template-literal-lexical-components</a></emu-xref>.</li><li>Let <var>subRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>sub</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>subRef</var>).</li><li>Let <var>last</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>sub</var>).</li><li>Return the sequence of code units consisting of the elements of <var>rest</var> followed by the code units of <var>middle</var> followed by the elements of <var>last</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>The string conversion semantics applied to the <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt> value are like <code>String.prototype.concat</code> rather than the <code>+</code> operator.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-object-initializer-runtime-semantics-evaluation": {"num": "12.2.6.7", "title": "#sec-object-initializer-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-object-initializer-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-initializer-runtime-semantics-evaluation\">#sec-object-initializer-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ObjectLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ObjectLiteral\">\n    <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1bef8ed3\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"8703527f\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>obj</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform ? PropertyDefinitionEvaluation of <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt> with arguments <var>obj</var> and <emu-val>true</emu-val>.</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the String value whose code units are the SV of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>nbr</var> be the NumericValue of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nbr</var>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ComputedPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ComputedPropertyName\">ComputedPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2ed5550b\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>exprValue</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>propName</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>exprValue</var>).</li><li>Return ?&#160;<emu-xref aoid=\"ToPropertyKey\"><a href=\"#sec-topropertykey\">ToPropertyKey</a></emu-xref>(<var>propName</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-decode": {"num": "18.2.6.1.2", "title": "#sec-decode Decode ( string, reservedSet )", "html": "<emu-clause id=\"sec-decode\" aoid=\"Decode\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-decode\">#sec-decode</span> Decode ( <var>string</var>, <var>reservedSet</var> )</h1>\n          <p>The abstract operation Decode takes arguments <var>string</var> (a String) and <var>reservedSet</var> (a String). It performs URI unescaping and decoding. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>strLen</var> be the length of <var>string</var>.</li><li>Let <var>R</var> be the empty String.</li><li>Let <var>k</var> be 0.</li><li>Repeat,<ol><li>If <var>k</var> = <var>strLen</var>, return <var>R</var>.</li><li>Let <var>C</var> be the code unit at index <var>k</var> within <var>string</var>.</li><li>If <var>C</var> is not the code unit 0x0025 (PERCENT SIGN), then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>start</var> be <var>k</var>.</li><li>If <var>k</var> + 2 &#8805; <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Let <var>n</var> be the number of leading 1 bits in <var>B</var>.</li><li>If <var>n</var> = 0, then<ol><li>Let <var>C</var> be the code unit whose value is <var>B</var>.</li><li>If <var>C</var> is not in <var>reservedSet</var>, then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>S</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>start</var> to <var>k</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>If <var>n</var> = 1 or <var>n</var> &gt; 4, throw a <emu-val>URIError</emu-val> exception.</li><li>If <var>k</var> + (3 &#215; (<var>n</var> - 1)) &#8805; <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>Octets</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>B</var>.</li><li>Let <var>j</var> be 1.</li><li>Repeat, while <var>j</var> &lt; <var>n</var>,<ol><li>Set <var>k</var> to <var>k</var> + 1.</li><li>If the code unit at index <var>k</var> within <var>string</var> is not the code unit 0x0025 (PERCENT SIGN), throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Append <var>B</var> to <var>Octets</var>.</li><li>Set <var>j</var> to <var>j</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The length of <var>Octets</var> is <var>n</var>.</li><li>If <var>Octets</var> does not contain a valid UTF-8 encoding of a Unicode code point, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>V</var> be the code point obtained by applying the UTF-8 transformation to <var>Octets</var>, that is, from a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of octets into a 21-bit value.</li><li>Let <var>S</var> be the String value whose code units are the elements in <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(<var>V</var>).</li></ol></li></ol></li><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>S</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>This syntax of Uniform Resource Identifiers is based upon RFC 2396 and does not reflect the more recent RFC 3986 which replaces RFC 2396. A formal description and implementation of UTF-8 is given in RFC 3629.</p>\n            <p>In UTF-8, characters are encoded using sequences of 1 to 6 octets. The only octet of a sequence of one has the higher-order bit set to 0, the remaining 7 bits being used to encode the character value. In a sequence of n octets, n &gt; 1, the initial octet has the n higher-order bits set to 1, followed by a bit set to 0. The remaining bits of that octet contain bits from the value of the character to be encoded. The following octets all have the higher-order bit set to 1 and the following bit set to 0, leaving 6 bits in each to contain bits from the character to be encoded. The possible UTF-8 encodings of ECMAScript characters are specified in <emu-xref href=\"#table-utf-8-encodings\"><a href=\"#table-utf-8-encodings\" class=\"excluded-xref\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</a></emu-xref>.</p>\n            <emu-table id=\"table-utf-8-encodings\" caption=\"UTF-8 Encodings\" informative=\"\" oldids=\"table-43\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</span> (Informative): UTF-8 Encodings</figcaption><span id=\"table-43\"></span>\n              <table>\n                <tbody>\n                <tr>\n                  <th>\n                    Code Unit Value\n                  </th>\n                  <th>\n                    Representation\n                  </th>\n                  <th>\n                    1<sup>st</sup> Octet\n                  </th>\n                  <th>\n                    2<sup>nd</sup> Octet\n                  </th>\n                  <th>\n                    3<sup>rd</sup> Octet\n                  </th>\n                  <th>\n                    4<sup>th</sup> Octet\n                  </th>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0000 - 0x007F</code>\n                  </td>\n                  <td>\n                    <code>00000000 0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0080 - 0x07FF</code>\n                  </td>\n                  <td>\n                    <code>00000<i>yyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>110<i>yyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0800 - 0xD7FF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    <code>110110<i>vv vvwwwwxx</i></code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>110111<i>yy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>11110<i>uuu</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>uuwwww</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>xxyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    not followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xE000 - 0xFFFF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n            </figure></emu-table>\n            <p>Where\n              <br>\n                <var>uuuuu</var> = <var>vvvv</var> + 1\n              <br>\n              to account for the addition of 0x10000 as in section 3.8 of the Unicode Standard (Surrogates).</p>\n            <p>The above transformation combines each <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref> (for which code unit values in the inclusive range 0xD800 to 0xDFFF are reserved) into a UTF-32 representation and encodes the resulting 21-bit value into UTF-8. Decoding reconstructs the <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref>.</p>\n            <p>RFC 3629 prohibits the decoding of invalid UTF-8 octet sequences. For example, the invalid sequence C0 80 must not decode into the code unit 0x0000. Implementations of the Decode algorithm are required to throw a <emu-val>URIError</emu-val> when encountering such invalid sequences.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-string-literals-static-semantics-stringvalue": {"num": "11.8.4.1", "title": "#sec-string-literals-static-semantics-stringvalue Static Semantics: StringValue", "html": "<emu-clause id=\"sec-string-literals-static-semantics-stringvalue\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-literals-static-semantics-stringvalue\">#sec-string-literals-static-semantics-stringvalue</span> Static Semantics: StringValue</h1>\n        <emu-see-also-para op=\"StringValue\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"StringLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"15d8b1f1\"><emu-t>\"</emu-t><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>\"</emu-t></emu-rhs>\n    <emu-rhs a=\"82ecb3d9\"><emu-t>'</emu-t><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>'</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the String value whose code units are the SV of this <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-static-semantics-sv": {"num": "11.8.4.2", "title": "#sec-static-semantics-sv Static Semantics: SV", "html": "<emu-clause id=\"sec-static-semantics-sv\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-sv\">#sec-static-semantics-sv</span> Static Semantics: SV</h1>\n        <p>A string literal stands for a value of the String type. The String value (SV) of the literal is described in terms of code unit values contributed by the various parts of the string literal. As part of this process, some Unicode code points within the string literal are interpreted as having a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV), as described below or in <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>.</p>\n        <ul>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"StringLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a2dff6c6\"><emu-t>\"</emu-t><emu-t>\"</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty code unit sequence.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"StringLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"74786b0a\"><emu-t>'</emu-t><emu-t>'</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty code unit sequence.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9b3f247e\"><emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is a sequence of up to two code units that is the SV of <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt> followed by the code units of the SV of <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"89ebe999\"><emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is a sequence of up to two code units that is the SV of <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt> followed by the code units of the SV of <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a87f95ed\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\"</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x2028 (LINE SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x2029 (PARAGRAPH SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty code unit sequence.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ea9e1d2\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x2028 (LINE SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x2029 (PARAGRAPH SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty code unit sequence.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"EscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x0000 (NULL).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"CharacterEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit whose value is determined by the <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt> according to <emu-xref href=\"#table-string-single-character-escape-sequences\"><a href=\"#table-string-single-character-escape-sequences\" class=\"excluded-xref\" excluded-id=\"table-string-single-character-escape-sequences\">#table-string-single-character-escape-sequences</a></emu-xref>.\n          </li>\n        </ul>\n        <emu-table id=\"table-string-single-character-escape-sequences\" caption=\"String Single Character Escape Sequences\" oldids=\"table-34\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-string-single-character-escape-sequences\">#table-string-single-character-escape-sequences</span>: String Single Character Escape Sequences</figcaption><span id=\"table-34\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Escape Sequence\n              </th>\n              <th>\n                Code Unit Value\n              </th>\n              <th>\n                Unicode Character Name\n              </th>\n              <th>\n                Symbol\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>\\b</code>\n              </td>\n              <td>\n                <code>0x0008</code>\n              </td>\n              <td>\n                BACKSPACE\n              </td>\n              <td>\n                &lt;BS&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\t</code>\n              </td>\n              <td>\n                <code>0x0009</code>\n              </td>\n              <td>\n                CHARACTER TABULATION\n              </td>\n              <td>\n                &lt;HT&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\n</code>\n              </td>\n              <td>\n                <code>0x000A</code>\n              </td>\n              <td>\n                LINE FEED (LF)\n              </td>\n              <td>\n                &lt;LF&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\v</code>\n              </td>\n              <td>\n                <code>0x000B</code>\n              </td>\n              <td>\n                LINE TABULATION\n              </td>\n              <td>\n                &lt;VT&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\f</code>\n              </td>\n              <td>\n                <code>0x000C</code>\n              </td>\n              <td>\n                FORM FEED (FF)\n              </td>\n              <td>\n                &lt;FF&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\r</code>\n              </td>\n              <td>\n                <code>0x000D</code>\n              </td>\n              <td>\n                CARRIAGE RETURN (CR)\n              </td>\n              <td>\n                &lt;CR&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\\"</code>\n              </td>\n              <td>\n                <code>0x0022</code>\n              </td>\n              <td>\n                QUOTATION MARK\n              </td>\n              <td>\n                <code>\"</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\'</code>\n              </td>\n              <td>\n                <code>0x0027</code>\n              </td>\n              <td>\n                APOSTROPHE\n              </td>\n              <td>\n                <code>'</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\\\</code>\n              </td>\n              <td>\n                <code>0x005C</code>\n              </td>\n              <td>\n                REVERSE SOLIDUS\n              </td>\n              <td>\n                <code>\\</code>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <ul>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"NonEscapeCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1bac6127\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"HexEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit whose value is the MV of <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"Hex4Digits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit whose value is the MV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the MV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-static-semantics-tv-and-trv": {"num": "11.8.6.1", "title": "#sec-static-semantics-tv-and-trv Static Semantics: TV and TRV", "html": "<emu-clause id=\"sec-static-semantics-tv-and-trv\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-tv-and-trv\">#sec-static-semantics-tv-and-trv</span> Static Semantics: TV and TRV</h1>\n        <p>A template literal component is interpreted as a sequence of Unicode code points. The Template Value (TV) of a literal component is described in terms of code unit values (SV, <emu-xref href=\"#sec-literals-string-literals\"><a href=\"#sec-literals-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-string-literals\">#sec-literals-string-literals</a></emu-xref>) contributed by the various parts of the template literal component. As part of this process, some Unicode code points within the template component are interpreted as having a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV, <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>). In determining a TV, escape sequences are replaced by the UTF-16 code unit(s) of the Unicode code point represented by the escape sequence. The Template Raw Value (TRV) is similar to a Template Value with the difference that in TRVs escape sequences are interpreted literally.</p>\n        <ul>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"NoSubstitutionTemplate\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7718e620\"><emu-t>`</emu-t><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty code unit sequence.\n          </li>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"TemplateHead\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"25732601\"><emu-t>`</emu-t><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty code unit sequence.\n          </li>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"TemplateMiddle\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"046dadff\"><emu-t>}</emu-t><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty code unit sequence.\n          </li>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"TemplateTail\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7a8ba1d2\"><emu-t>}</emu-t><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty code unit sequence.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5f9e47ad\"><emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is <emu-val>undefined</emu-val> if either the TV of <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> is <emu-val>undefined</emu-val> or the TV of <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt> is <emu-val>undefined</emu-val>. Otherwise, it is a sequence consisting of the code units of the TV of <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> followed by the code units of the TV of <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c80ea41\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\\</emu-t> or <emu-t>$</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x0024 (DOLLAR SIGN).\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the SV of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"68cad9cc\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is <emu-val>undefined</emu-val>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"544825da\"><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the TRV of <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"LineContinuation\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty code unit sequence.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5f9e47ad\"><emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is a sequence consisting of the code units of the TRV of <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> followed by the code units of the TRV of <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c80ea41\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\\</emu-t> or <emu-t>$</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x0024 (DOLLAR SIGN).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x005C (REVERSE SOLIDUS) followed by the code units of TRV of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"68cad9cc\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x005C (REVERSE SOLIDUS) followed by the code units of TRV of <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"EscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x0030 (DIGIT ZERO).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c247e196\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x0030 (DIGIT ZERO) followed by the code units of the TRV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e6c4f6ee\"><emu-t>x</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x0078 (LATIN SMALL LETTER X).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"92cdf202\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x0078 (LATIN SMALL LETTER X) followed by the code units of the TRV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a16001b3\"><emu-t>u</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x0075 (LATIN SMALL LETTER U).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f7d3e8d4\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x0075 (LATIN SMALL LETTER U) followed by the code units of the TRV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4ea47d3d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x0075 (LATIN SMALL LETTER U) followed by the code units of the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> followed by the code units of the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"45170c27\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x0075 (LATIN SMALL LETTER U) followed by the code units of the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> followed by the code units of the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> followed by the code units of the TRV of the third <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5427e268\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x0075 (LATIN SMALL LETTER U) followed by the code unit 0x007B (LEFT CURLY BRACKET).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0c957f40\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x0075 (LATIN SMALL LETTER U) followed by the code unit 0x007B (LEFT CURLY BRACKET) followed by the code units of the TRV of <emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ab5a798c\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>}</emu-t>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x0075 (LATIN SMALL LETTER U) followed by the code unit 0x007B (LEFT CURLY BRACKET) followed by the code units of the TRV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the single code point matched by this production.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"CharacterEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b7980a98\"><emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the SV of <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"SingleEscapeCharacter\" type=\"lexical\" oneof=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>'</emu-t><emu-t>\"</emu-t><emu-t>\\</emu-t><emu-t>b</emu-t><emu-t>f</emu-t><emu-t>n</emu-t><emu-t>r</emu-t><emu-t>t</emu-t><emu-t>v</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the single code point matched by this production.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"HexEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x0078 (LATIN SMALL LETTER X) followed by TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> followed by the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8072ad8d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x0075 (LATIN SMALL LETTER U) followed by TRV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x0075 (LATIN SMALL LETTER U) followed by the code unit 0x007B (LEFT CURLY BRACKET) followed by TRV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt> followed by the code unit 0x007D (RIGHT CURLY BRACKET).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"Hex4Digits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> followed by the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> followed by the TRV of the third <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> followed by the TRV of the fourth <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c8221899\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of TRV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> followed by TRV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" oneof=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the single code point matched by this production.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineContinuation\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x005C (REVERSE SOLIDUS) followed by the code units of TRV of <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"df188a5e\"><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x000A (LINE FEED).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6bb44f60\"><emu-gprose>&lt;CR&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x000A (LINE FEED).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x2028 (LINE SEPARATOR).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x2029 (PARAGRAPH SEPARATOR).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"253de229\"><emu-gprose>&lt;CR&gt;</emu-gprose><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the sequence consisting of the code unit 0x000A (LINE FEED).\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>TV excludes the code units of <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt> while TRV includes them. &lt;CR&gt;&lt;LF&gt; and &lt;CR&gt; <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>s are normalized to &lt;LF&gt; for both TV and TRV. An explicit <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> is needed to include a &lt;CR&gt; or &lt;CR&gt;&lt;LF&gt; sequence.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-codepointtoutf16codeunits": {"num": "10.1.1", "title": "#sec-codepointtoutf16codeunits Static Semantics: CodePointToUTF16CodeUnits ( cp )", "html": "<emu-clause id=\"sec-codepointtoutf16codeunits\" aoid=\"CodePointToUTF16CodeUnits\" oldids=\"sec-utf16encoding\"><span id=\"sec-utf16encoding\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-codepointtoutf16codeunits\">#sec-codepointtoutf16codeunits</span> Static Semantics: CodePointToUTF16CodeUnits ( <var>cp</var> )</h1>\n      <p>The abstract operation CodePointToUTF16CodeUnits takes argument <var>cp</var> (a Unicode code point). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: 0 &#8804; <var>cp</var> &#8804; 0x10FFFF.</li><li>If <var>cp</var> &#8804; 0xFFFF, return <var>cp</var>.</li><li>Let <var>cu1</var> be <emu-xref aoid=\"floor\"><a href=\"#eqn-floor\">floor</a></emu-xref>((<var>cp</var> - 0x10000) / 0x400) + 0xD800.</li><li>Let <var>cu2</var> be ((<var>cp</var> - 0x10000) <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> 0x400) + 0xDC00.</li><li>Return the code unit sequence consisting of <var>cu1</var> followed by <var>cu2</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-additional-syntax-string-literals-static-semantics": {"num": "B.1.2.1", "title": "#sec-additional-syntax-string-literals-static-semantics Static Semantics", "html": "<emu-annex id=\"sec-additional-syntax-string-literals-static-semantics\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-additional-syntax-string-literals-static-semantics\">#sec-additional-syntax-string-literals-static-semantics</span> Static Semantics</h1>\n        <ul>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"EscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e8cc2b7c\"><emu-nt><a href=\"#prod-annexB-LegacyOctalEscapeSequence\">LegacyOctalEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit whose value is the MV of <emu-nt><a href=\"#prod-annexB-LegacyOctalEscapeSequence\">LegacyOctalEscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"LegacyOctalEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-LegacyOctalEscapeSequence\">LegacyOctalEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"79ba39b7\"><emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is (8 times the MV of <emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt>) plus the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"LegacyOctalEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-LegacyOctalEscapeSequence\">LegacyOctalEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"088d7fcd\"><emu-nt><a href=\"#prod-annexB-FourToSeven\">FourToSeven</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is (8 times the MV of <emu-nt><a href=\"#prod-annexB-FourToSeven\">FourToSeven</a></emu-nt>) plus the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"LegacyOctalEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-LegacyOctalEscapeSequence\">LegacyOctalEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e2ee5d93\"><emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is (64 (that is, 8<sup>2</sup>) times the MV of <emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt>) plus (8 times the MV of the first <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>) plus the MV of the second <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"NonOctalDecimalEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-NonOctalDecimalEscapeSequence\">NonOctalDecimalEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7a5bd8c3\"><emu-t>8</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x0038 (DIGIT EIGHT).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"NonOctalDecimalEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-NonOctalDecimalEscapeSequence\">NonOctalDecimalEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"163f4308\"><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the code unit 0x0039 (DIGIT NINE).\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"ZeroToThree\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 0.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"ZeroToThree\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 1.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"ZeroToThree\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ca73105\"><emu-t>2</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 2.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"ZeroToThree\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ec6bb6b2\"><emu-t>3</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 3.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"FourToSeven\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-FourToSeven\">FourToSeven</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"58ec4a73\"><emu-t>4</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 4.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"FourToSeven\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-FourToSeven\">FourToSeven</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8fcdef77\"><emu-t>5</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 5.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"FourToSeven\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-FourToSeven\">FourToSeven</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0b64877d\"><emu-t>6</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 6.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"FourToSeven\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-FourToSeven\">FourToSeven</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea5e07a4\"><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 7.\n          </li>\n        </ul>\n      </emu-annex>\n    "}, "sec-string.fromcodepoint": {"num": "21.1.2.2", "title": "#sec-string.fromcodepoint String.fromCodePoint ( ...codePoints )", "html": "<emu-clause id=\"sec-string.fromcodepoint\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.fromcodepoint\">#sec-string.fromcodepoint</span> String.fromCodePoint ( ...<var>codePoints</var> )</h1>\n        <p>The <code>String.fromCodePoint</code> function may be called with any number of arguments which form the rest parameter <var>codePoints</var>. The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>elements</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>next</var> of <var>codePoints</var>, do<ol><li>Let <var>nextCP</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>next</var>).</li><li>If !&#160;<emu-xref aoid=\"IsIntegralNumber\"><a href=\"#sec-isintegralnumber\">IsIntegralNumber</a></emu-xref>(<var>nextCP</var>) is <emu-val>false</emu-val>, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>nextCP</var>) &lt; 0 or <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>nextCP</var>) &gt; 0x10FFFF, throw a <emu-val>RangeError</emu-val> exception.</li><li>Append the elements of !&#160;<emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(<emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>nextCP</var>)) to the end of <var>elements</var>.</li></ol></li><li>Return the String value whose code units are the elements in the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>elements</var>. If <var>codePoints</var> is empty, the empty String is returned.</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>fromCodePoint</code> function is <emu-val>1</emu-val><sub>&#120125;</sub>.</p>\n      </emu-clause>\n\n      "}, "sec-object-initializer-static-semantics-propname": {"num": "12.2.6.5", "title": "#sec-object-initializer-static-semantics-propname Static Semantics: PropName", "html": "<emu-clause id=\"sec-object-initializer-static-semantics-propname\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-initializer-static-semantics-propname\">#sec-object-initializer-static-semantics-propname</span> Static Semantics: PropName</h1>\n        <emu-see-also-para op=\"PropName\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2361f19d\"><emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5bb8853e\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-const>empty</emu-const>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f2d90b76\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return PropName of <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the String value whose code units are the SV of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>nbr</var> be the NumericValue of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nbr</var>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ComputedPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ComputedPropertyName\">ComputedPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2ed5550b\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-const>empty</emu-const>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {"table-string-single-character-escape-sequences": "Table 36", "table-utf-8-encodings": "Table 49"}}, "to": {"secList": ["sec-template-literals-runtime-semantics-evaluation", "sec-object-initializer-runtime-semantics-evaluation", "sec-decode", "sec-string-literals-static-semantics-stringvalue", "sec-static-semantics-sv", "sec-static-semantics-tv-and-trv", "sec-codepointtoutf16codeunits", "sec-additional-syntax-string-literals-static-semantics", "sec-string.fromcodepoint", "sec-object-initializer-static-semantics-propname"], "secData": {"sec-template-literals-runtime-semantics-evaluation": {"num": "12.2.9.6", "title": "#sec-template-literals-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-template-literals-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-template-literals-runtime-semantics-evaluation\">#sec-template-literals-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"TemplateLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the TV of <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt> as defined in <emu-xref href=\"#sec-template-literal-lexical-components\"><a href=\"#sec-template-literal-lexical-components\" class=\"excluded-xref\" excluded-id=\"sec-template-literal-lexical-components\">#sec-template-literal-lexical-components</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SubstitutionTemplate\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"be95cc40\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>head</var> be the TV of <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt> as defined in <emu-xref href=\"#sec-template-literal-lexical-components\"><a href=\"#sec-template-literal-lexical-components\" class=\"excluded-xref\" excluded-id=\"sec-template-literal-lexical-components\">#sec-template-literal-lexical-components</a></emu-xref>.</li><li>Let <var>subRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>sub</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>subRef</var>).</li><li>Let <var>middle</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>sub</var>).</li><li>Let <var>tail</var> be the result of evaluating <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>tail</var>).</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>head</var>, <var>middle</var>, and <var>tail</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The string conversion semantics applied to the <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt> value are like <code>String.prototype.concat</code> rather than the <code>+</code> operator.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the TV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt> as defined in <emu-xref href=\"#sec-template-literal-lexical-components\"><a href=\"#sec-template-literal-lexical-components\" class=\"excluded-xref\" excluded-id=\"sec-template-literal-lexical-components\">#sec-template-literal-lexical-components</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b0b4f425\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>head</var> be the result of evaluating <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>head</var>).</li><li>Let <var>tail</var> be the TV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt> as defined in <emu-xref href=\"#sec-template-literal-lexical-components\"><a href=\"#sec-template-literal-lexical-components\" class=\"excluded-xref\" excluded-id=\"sec-template-literal-lexical-components\">#sec-template-literal-lexical-components</a></emu-xref>.</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>head</var> and <var>tail</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"dc7ec961\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>head</var> be the TV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt> as defined in <emu-xref href=\"#sec-template-literal-lexical-components\"><a href=\"#sec-template-literal-lexical-components\" class=\"excluded-xref\" excluded-id=\"sec-template-literal-lexical-components\">#sec-template-literal-lexical-components</a></emu-xref>.</li><li>Let <var>subRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>sub</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>subRef</var>).</li><li>Let <var>middle</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>sub</var>).</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>head</var> and <var>middle</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The string conversion semantics applied to the <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt> value are like <code>String.prototype.concat</code> rather than the <code>+</code> operator.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"47acf041\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>rest</var> be the result of evaluating <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>rest</var>).</li><li>Let <var>middle</var> be the TV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt> as defined in <emu-xref href=\"#sec-template-literal-lexical-components\"><a href=\"#sec-template-literal-lexical-components\" class=\"excluded-xref\" excluded-id=\"sec-template-literal-lexical-components\">#sec-template-literal-lexical-components</a></emu-xref>.</li><li>Let <var>subRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>sub</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>subRef</var>).</li><li>Let <var>last</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>sub</var>).</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>rest</var>, <var>middle</var>, and <var>last</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>The string conversion semantics applied to the <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt> value are like <code>String.prototype.concat</code> rather than the <code>+</code> operator.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-object-initializer-runtime-semantics-evaluation": {"num": "12.2.6.7", "title": "#sec-object-initializer-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-object-initializer-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-initializer-runtime-semantics-evaluation\">#sec-object-initializer-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ObjectLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ObjectLiteral\">\n    <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1bef8ed3\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"8703527f\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>obj</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform ? PropertyDefinitionEvaluation of <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt> with arguments <var>obj</var> and <emu-val>true</emu-val>.</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the SV of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>nbr</var> be the NumericValue of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nbr</var>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ComputedPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ComputedPropertyName\">ComputedPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2ed5550b\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>exprValue</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>propName</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>exprValue</var>).</li><li>Return ?&#160;<emu-xref aoid=\"ToPropertyKey\"><a href=\"#sec-topropertykey\">ToPropertyKey</a></emu-xref>(<var>propName</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-decode": {"num": "18.2.6.1.2", "title": "#sec-decode Decode ( string, reservedSet )", "html": "<emu-clause id=\"sec-decode\" aoid=\"Decode\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-decode\">#sec-decode</span> Decode ( <var>string</var>, <var>reservedSet</var> )</h1>\n          <p>The abstract operation Decode takes arguments <var>string</var> (a String) and <var>reservedSet</var> (a String). It performs URI unescaping and decoding. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>strLen</var> be the length of <var>string</var>.</li><li>Let <var>R</var> be the empty String.</li><li>Let <var>k</var> be 0.</li><li>Repeat,<ol><li>If <var>k</var> = <var>strLen</var>, return <var>R</var>.</li><li>Let <var>C</var> be the code unit at index <var>k</var> within <var>string</var>.</li><li>If <var>C</var> is not the code unit 0x0025 (PERCENT SIGN), then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>start</var> be <var>k</var>.</li><li>If <var>k</var> + 2 &#8805; <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Let <var>n</var> be the number of leading 1 bits in <var>B</var>.</li><li>If <var>n</var> = 0, then<ol><li>Let <var>C</var> be the code unit whose value is <var>B</var>.</li><li>If <var>C</var> is not in <var>reservedSet</var>, then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>S</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>start</var> to <var>k</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>If <var>n</var> = 1 or <var>n</var> &gt; 4, throw a <emu-val>URIError</emu-val> exception.</li><li>If <var>k</var> + (3 &#215; (<var>n</var> - 1)) &#8805; <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>Octets</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>B</var>.</li><li>Let <var>j</var> be 1.</li><li>Repeat, while <var>j</var> &lt; <var>n</var>,<ol><li>Set <var>k</var> to <var>k</var> + 1.</li><li>If the code unit at index <var>k</var> within <var>string</var> is not the code unit 0x0025 (PERCENT SIGN), throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Append <var>B</var> to <var>Octets</var>.</li><li>Set <var>j</var> to <var>j</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The length of <var>Octets</var> is <var>n</var>.</li><li>If <var>Octets</var> does not contain a valid UTF-8 encoding of a Unicode code point, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>V</var> be the code point obtained by applying the UTF-8 transformation to <var>Octets</var>, that is, from a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of octets into a 21-bit value.</li><li>Let <var>S</var> be <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(<var>V</var>).</li></ol></li></ol></li><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>S</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>This syntax of Uniform Resource Identifiers is based upon RFC 2396 and does not reflect the more recent RFC 3986 which replaces RFC 2396. A formal description and implementation of UTF-8 is given in RFC 3629.</p>\n            <p>In UTF-8, characters are encoded using sequences of 1 to 6 octets. The only octet of a sequence of one has the higher-order bit set to 0, the remaining 7 bits being used to encode the character value. In a sequence of n octets, n &gt; 1, the initial octet has the n higher-order bits set to 1, followed by a bit set to 0. The remaining bits of that octet contain bits from the value of the character to be encoded. The following octets all have the higher-order bit set to 1 and the following bit set to 0, leaving 6 bits in each to contain bits from the character to be encoded. The possible UTF-8 encodings of ECMAScript characters are specified in <emu-xref href=\"#table-utf-8-encodings\"><a href=\"#table-utf-8-encodings\" class=\"excluded-xref\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</a></emu-xref>.</p>\n            <emu-table id=\"table-utf-8-encodings\" caption=\"UTF-8 Encodings\" informative=\"\" oldids=\"table-43\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</span> (Informative): UTF-8 Encodings</figcaption><span id=\"table-43\"></span>\n              <table>\n                <tbody>\n                <tr>\n                  <th>\n                    Code Unit Value\n                  </th>\n                  <th>\n                    Representation\n                  </th>\n                  <th>\n                    1<sup>st</sup> Octet\n                  </th>\n                  <th>\n                    2<sup>nd</sup> Octet\n                  </th>\n                  <th>\n                    3<sup>rd</sup> Octet\n                  </th>\n                  <th>\n                    4<sup>th</sup> Octet\n                  </th>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0000 - 0x007F</code>\n                  </td>\n                  <td>\n                    <code>00000000 0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0080 - 0x07FF</code>\n                  </td>\n                  <td>\n                    <code>00000<i>yyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>110<i>yyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0800 - 0xD7FF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    <code>110110<i>vv vvwwwwxx</i></code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>110111<i>yy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>11110<i>uuu</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>uuwwww</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>xxyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    not followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xE000 - 0xFFFF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n            </figure></emu-table>\n            <p>Where\n              <br>\n                <var>uuuuu</var> = <var>vvvv</var> + 1\n              <br>\n              to account for the addition of 0x10000 as in section 3.8 of the Unicode Standard (Surrogates).</p>\n            <p>The above transformation combines each <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref> (for which code unit values in the inclusive range 0xD800 to 0xDFFF are reserved) into a UTF-32 representation and encodes the resulting 21-bit value into UTF-8. Decoding reconstructs the <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref>.</p>\n            <p>RFC 3629 prohibits the decoding of invalid UTF-8 octet sequences. For example, the invalid sequence C0 80 must not decode into the code unit 0x0000. Implementations of the Decode algorithm are required to throw a <emu-val>URIError</emu-val> when encountering such invalid sequences.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-string-literals-static-semantics-stringvalue": {"num": "11.8.4.1", "title": "#sec-string-literals-static-semantics-stringvalue Static Semantics: StringValue", "html": "<emu-clause id=\"sec-string-literals-static-semantics-stringvalue\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-literals-static-semantics-stringvalue\">#sec-string-literals-static-semantics-stringvalue</span> Static Semantics: StringValue</h1>\n        <emu-see-also-para op=\"StringValue\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"StringLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"15d8b1f1\"><emu-t>\"</emu-t><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>\"</emu-t></emu-rhs>\n    <emu-rhs a=\"82ecb3d9\"><emu-t>'</emu-t><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>'</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the SV of this <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-static-semantics-sv": {"num": "11.8.4.2", "title": "#sec-static-semantics-sv Static Semantics: SV", "html": "<emu-clause id=\"sec-static-semantics-sv\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-sv\">#sec-static-semantics-sv</span> Static Semantics: SV</h1>\n        <p>A string literal stands for a value of the String type. The String value (SV) of the literal is described in terms of String values contributed by the various parts of the string literal. As part of this process, some Unicode code points within the string literal are interpreted as having a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV), as described below or in <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>.</p>\n        <ul>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"StringLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a2dff6c6\"><emu-t>\"</emu-t><emu-t>\"</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"StringLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"74786b0a\"><emu-t>'</emu-t><emu-t>'</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9b3f247e\"><emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the SV of <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt> and the SV of <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"89ebe999\"><emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the SV of <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt> and the SV of <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a87f95ed\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\"</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2028 (LINE SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2029 (PARAGRAPH SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ea9e1d2\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2028 (LINE SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2029 (PARAGRAPH SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"EscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0000 (NULL).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"CharacterEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit whose value is determined by the <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt> according to <emu-xref href=\"#table-string-single-character-escape-sequences\"><a href=\"#table-string-single-character-escape-sequences\" class=\"excluded-xref\" excluded-id=\"table-string-single-character-escape-sequences\">#table-string-single-character-escape-sequences</a></emu-xref>.\n          </li>\n        </ul>\n        <emu-table id=\"table-string-single-character-escape-sequences\" caption=\"String Single Character Escape Sequences\" oldids=\"table-34\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-string-single-character-escape-sequences\">#table-string-single-character-escape-sequences</span>: String Single Character Escape Sequences</figcaption><span id=\"table-34\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Escape Sequence\n              </th>\n              <th>\n                Code Unit Value\n              </th>\n              <th>\n                Unicode Character Name\n              </th>\n              <th>\n                Symbol\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>\\b</code>\n              </td>\n              <td>\n                <code>0x0008</code>\n              </td>\n              <td>\n                BACKSPACE\n              </td>\n              <td>\n                &lt;BS&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\t</code>\n              </td>\n              <td>\n                <code>0x0009</code>\n              </td>\n              <td>\n                CHARACTER TABULATION\n              </td>\n              <td>\n                &lt;HT&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\n</code>\n              </td>\n              <td>\n                <code>0x000A</code>\n              </td>\n              <td>\n                LINE FEED (LF)\n              </td>\n              <td>\n                &lt;LF&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\v</code>\n              </td>\n              <td>\n                <code>0x000B</code>\n              </td>\n              <td>\n                LINE TABULATION\n              </td>\n              <td>\n                &lt;VT&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\f</code>\n              </td>\n              <td>\n                <code>0x000C</code>\n              </td>\n              <td>\n                FORM FEED (FF)\n              </td>\n              <td>\n                &lt;FF&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\r</code>\n              </td>\n              <td>\n                <code>0x000D</code>\n              </td>\n              <td>\n                CARRIAGE RETURN (CR)\n              </td>\n              <td>\n                &lt;CR&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\\"</code>\n              </td>\n              <td>\n                <code>0x0022</code>\n              </td>\n              <td>\n                QUOTATION MARK\n              </td>\n              <td>\n                <code>\"</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\'</code>\n              </td>\n              <td>\n                <code>0x0027</code>\n              </td>\n              <td>\n                APOSTROPHE\n              </td>\n              <td>\n                <code>'</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\\\</code>\n              </td>\n              <td>\n                <code>0x005C</code>\n              </td>\n              <td>\n                REVERSE SOLIDUS\n              </td>\n              <td>\n                <code>\\</code>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <ul>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"NonEscapeCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1bac6127\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"HexEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit whose value is the MV of <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"Hex4Digits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit whose value is the MV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the MV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-static-semantics-tv-and-trv": {"num": "11.8.6.1", "title": "#sec-static-semantics-tv-and-trv Static Semantics: TV and TRV", "html": "<emu-clause id=\"sec-static-semantics-tv-and-trv\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-tv-and-trv\">#sec-static-semantics-tv-and-trv</span> Static Semantics: TV and TRV</h1>\n        <p>A template literal component is interpreted as a sequence of Unicode code points. The Template Value (TV) of a literal component is described in terms of String values (SV, <emu-xref href=\"#sec-literals-string-literals\"><a href=\"#sec-literals-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-string-literals\">#sec-literals-string-literals</a></emu-xref>) contributed by the various parts of the template literal component. As part of this process, some Unicode code points within the template component are interpreted as having a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV, <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>). In determining a TV, escape sequences are replaced by the UTF-16 code unit(s) of the Unicode code point represented by the escape sequence. The Template Raw Value (TRV) is similar to a Template Value with the difference that in TRVs escape sequences are interpreted literally.</p>\n        <ul>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"NoSubstitutionTemplate\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7718e620\"><emu-t>`</emu-t><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"TemplateHead\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"25732601\"><emu-t>`</emu-t><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"TemplateMiddle\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"046dadff\"><emu-t>}</emu-t><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"TemplateTail\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7a8ba1d2\"><emu-t>}</emu-t><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5f9e47ad\"><emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is <emu-val>undefined</emu-val> if either the TV of <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> is <emu-val>undefined</emu-val> or the TV of <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt> is <emu-val>undefined</emu-val>. Otherwise, it is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the TV of <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> and the TV of <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c80ea41\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\\</emu-t> or <emu-t>$</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0024 (DOLLAR SIGN).\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the SV of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"68cad9cc\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is <emu-val>undefined</emu-val>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"544825da\"><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the TRV of <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"LineContinuation\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5f9e47ad\"><emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the TRV of <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> and the TRV of <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c80ea41\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\\</emu-t> or <emu-t>$</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0024 (DOLLAR SIGN).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x005C (REVERSE SOLIDUS) and the TRV of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"68cad9cc\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x005C (REVERSE SOLIDUS) and the TRV of <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"EscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0030 (DIGIT ZERO).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c247e196\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0030 (DIGIT ZERO) and the TRV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e6c4f6ee\"><emu-t>x</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0078 (LATIN SMALL LETTER X).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"92cdf202\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0078 (LATIN SMALL LETTER X) and the TRV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a16001b3\"><emu-t>u</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0075 (LATIN SMALL LETTER U).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f7d3e8d4\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U) and the TRV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4ea47d3d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, and the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"45170c27\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, and the TRV of the third <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5427e268\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U) and the code unit 0x007B (LEFT CURLY BRACKET).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0c957f40\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the code unit 0x007B (LEFT CURLY BRACKET), and the TRV of <emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ab5a798c\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>}</emu-t>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the code unit 0x007B (LEFT CURLY BRACKET), and the TRV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the single code point matched by this production.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"CharacterEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b7980a98\"><emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the SV of <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"SingleEscapeCharacter\" type=\"lexical\" oneof=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>'</emu-t><emu-t>\"</emu-t><emu-t>\\</emu-t><emu-t>b</emu-t><emu-t>f</emu-t><emu-t>n</emu-t><emu-t>r</emu-t><emu-t>t</emu-t><emu-t>v</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the single code point matched by this production.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"HexEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0078 (LATIN SMALL LETTER X), the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, and the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8072ad8d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U) and the TRV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the code unit 0x007B (LEFT CURLY BRACKET), the TRV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>, and the code unit 0x007D (RIGHT CURLY BRACKET).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"Hex4Digits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, the TRV of the third <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, and the TRV of the fourth <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c8221899\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the TRV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> and the TRV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" oneof=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the single code point matched by this production.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineContinuation\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x005C (REVERSE SOLIDUS) and the TRV of <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"df188a5e\"><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x000A (LINE FEED).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6bb44f60\"><emu-gprose>&lt;CR&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x000A (LINE FEED).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2028 (LINE SEPARATOR).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2029 (PARAGRAPH SEPARATOR).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"253de229\"><emu-gprose>&lt;CR&gt;</emu-gprose><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x000A (LINE FEED).\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>TV excludes the code units of <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt> while TRV includes them. &lt;CR&gt;&lt;LF&gt; and &lt;CR&gt; <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>s are normalized to &lt;LF&gt; for both TV and TRV. An explicit <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> is needed to include a &lt;CR&gt; or &lt;CR&gt;&lt;LF&gt; sequence.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-codepointtoutf16codeunits": {"num": "10.1.1", "title": "#sec-codepointtoutf16codeunits Static Semantics: CodePointToUTF16CodeUnits ( cp )", "html": "<emu-clause id=\"sec-codepointtoutf16codeunits\" aoid=\"CodePointToUTF16CodeUnits\" oldids=\"sec-utf16encoding\"><span id=\"sec-utf16encoding\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-codepointtoutf16codeunits\">#sec-codepointtoutf16codeunits</span> Static Semantics: CodePointToUTF16CodeUnits ( <var>cp</var> )</h1>\n      <p>The abstract operation CodePointToUTF16CodeUnits takes argument <var>cp</var> (a Unicode code point). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: 0 &#8804; <var>cp</var> &#8804; 0x10FFFF.</li><li>If <var>cp</var> &#8804; 0xFFFF, return the String value consisting of <var>cp</var>.</li><li>Let <var>cu1</var> be <emu-xref aoid=\"floor\"><a href=\"#eqn-floor\">floor</a></emu-xref>((<var>cp</var> - 0x10000) / 0x400) + 0xD800.</li><li>Let <var>cu2</var> be ((<var>cp</var> - 0x10000) <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> 0x400) + 0xDC00.</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>cu1</var> and <var>cu2</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-additional-syntax-string-literals-static-semantics": {"num": "B.1.2.1", "title": "#sec-additional-syntax-string-literals-static-semantics Static Semantics", "html": "<emu-annex id=\"sec-additional-syntax-string-literals-static-semantics\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-additional-syntax-string-literals-static-semantics\">#sec-additional-syntax-string-literals-static-semantics</span> Static Semantics</h1>\n        <ul>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"EscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e8cc2b7c\"><emu-nt><a href=\"#prod-annexB-LegacyOctalEscapeSequence\">LegacyOctalEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit whose value is the MV of <emu-nt><a href=\"#prod-annexB-LegacyOctalEscapeSequence\">LegacyOctalEscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"LegacyOctalEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-LegacyOctalEscapeSequence\">LegacyOctalEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"79ba39b7\"><emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is (8 times the MV of <emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt>) plus the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"LegacyOctalEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-LegacyOctalEscapeSequence\">LegacyOctalEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"088d7fcd\"><emu-nt><a href=\"#prod-annexB-FourToSeven\">FourToSeven</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is (8 times the MV of <emu-nt><a href=\"#prod-annexB-FourToSeven\">FourToSeven</a></emu-nt>) plus the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"LegacyOctalEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-LegacyOctalEscapeSequence\">LegacyOctalEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e2ee5d93\"><emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is (64 (that is, 8<sup>2</sup>) times the MV of <emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt>) plus (8 times the MV of the first <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>) plus the MV of the second <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"NonOctalDecimalEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-NonOctalDecimalEscapeSequence\">NonOctalDecimalEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7a5bd8c3\"><emu-t>8</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0038 (DIGIT EIGHT).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"NonOctalDecimalEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-NonOctalDecimalEscapeSequence\">NonOctalDecimalEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"163f4308\"><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0039 (DIGIT NINE).\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"ZeroToThree\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 0.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"ZeroToThree\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 1.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"ZeroToThree\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ca73105\"><emu-t>2</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 2.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"ZeroToThree\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-ZeroToThree\">ZeroToThree</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ec6bb6b2\"><emu-t>3</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 3.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"FourToSeven\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-FourToSeven\">FourToSeven</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"58ec4a73\"><emu-t>4</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 4.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"FourToSeven\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-FourToSeven\">FourToSeven</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8fcdef77\"><emu-t>5</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 5.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"FourToSeven\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-FourToSeven\">FourToSeven</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0b64877d\"><emu-t>6</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 6.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"FourToSeven\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-FourToSeven\">FourToSeven</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea5e07a4\"><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 7.\n          </li>\n        </ul>\n      </emu-annex>\n    "}, "sec-string.fromcodepoint": {"num": "21.1.2.2", "title": "#sec-string.fromcodepoint String.fromCodePoint ( ...codePoints )", "html": "<emu-clause id=\"sec-string.fromcodepoint\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.fromcodepoint\">#sec-string.fromcodepoint</span> String.fromCodePoint ( ...<var>codePoints</var> )</h1>\n        <p>The <code>String.fromCodePoint</code> function may be called with any number of arguments which form the rest parameter <var>codePoints</var>. The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>result</var> be the empty String.</li><li>For each element <var>next</var> of <var>codePoints</var>, do<ol><li>Let <var>nextCP</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>next</var>).</li><li>If !&#160;<emu-xref aoid=\"IsIntegralNumber\"><a href=\"#sec-isintegralnumber\">IsIntegralNumber</a></emu-xref>(<var>nextCP</var>) is <emu-val>false</emu-val>, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>nextCP</var>) &lt; 0 or <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>nextCP</var>) &gt; 0x10FFFF, throw a <emu-val>RangeError</emu-val> exception.</li><li>Set <var>result</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>result</var> and !&#160;<emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(<emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>nextCP</var>)).</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>codePoints</var> is empty, then <var>result</var> is the empty String.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>fromCodePoint</code> function is <emu-val>1</emu-val><sub>&#120125;</sub>.</p>\n      </emu-clause>\n\n      "}, "sec-object-initializer-static-semantics-propname": {"num": "12.2.6.5", "title": "#sec-object-initializer-static-semantics-propname Static Semantics: PropName", "html": "<emu-clause id=\"sec-object-initializer-static-semantics-propname\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-initializer-static-semantics-propname\">#sec-object-initializer-static-semantics-propname</span> Static Semantics: PropName</h1>\n        <emu-see-also-para op=\"PropName\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2361f19d\"><emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5bb8853e\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-const>empty</emu-const>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f2d90b76\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return PropName of <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the SV of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>nbr</var> be the NumericValue of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nbr</var>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ComputedPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ComputedPropertyName\">ComputedPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2ed5550b\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-const>empty</emu-const>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {"table-string-single-character-escape-sequences": "Table 36", "table-utf-8-encodings": "Table 49"}}}