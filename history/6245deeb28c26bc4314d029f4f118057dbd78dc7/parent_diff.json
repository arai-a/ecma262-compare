{"from": {"secList": ["sec-%stringiteratorprototype%.next", "sec-properties-of-array-iterator-instances", "sec-%setiteratorprototype%.next", "sec-createlistiteratorRecord", "sec-createstringiterator", "sec-properties-of-set-iterator-instances", "sec-%arrayiteratorprototype%.next", "sec-createarrayiterator", "sec-%mapiteratorprototype%.next", "sec-properties-of-map-iterator-instances", "sec-properties-of-string-iterator-instances", "sec-createmapiterator", "sec-listiteratornext-functions"], "secData": {"sec-%stringiteratorprototype%.next": {"num": "21.1.5.2.1", "title": "#sec-%stringiteratorprototype%.next %StringIteratorPrototype%.next ( )", "html": "<emu-clause id=\"sec-%stringiteratorprototype%.next\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%stringiteratorprototype%.next\">#sec-%stringiteratorprototype%.next</span> %StringIteratorPrototype%.next ( )</h1>\n          <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>O</var> does not have all of the internal slots of a String Iterator Instance (<emu-xref href=\"#sec-properties-of-string-iterator-instances\"><a href=\"#sec-properties-of-string-iterator-instances\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-string-iterator-instances\">#sec-properties-of-string-iterator-instances</a></emu-xref>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>s</var> be <var>O</var>.[[IteratedString]].</li><li>If <var>s</var> is <emu-val>undefined</emu-val>, return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li><li>Let <var>position</var> be <var>O</var>.[[StringIteratorNextIndex]].</li><li>Let <var>len</var> be the length of <var>s</var>.</li><li>If <var>position</var> &#8805; <var>len</var>, then<ol><li>Set <var>O</var>.[[IteratedString]] to <emu-val>undefined</emu-val>.</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>cp</var> be !&#160;<emu-xref aoid=\"CodePointAt\"><a href=\"#sec-codepointat\">CodePointAt</a></emu-xref>(<var>s</var>, <var>position</var>).</li><li>Let <var>resultString</var> be the String value containing <var>cp</var>.[[CodeUnitCount]] consecutive code units from <var>s</var> beginning with the code unit at index <var>position</var>.</li><li>Set <var>O</var>.[[StringIteratorNextIndex]] to <var>position</var> + <var>cp</var>.[[CodeUnitCount]].</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>resultString</var>, <emu-val>false</emu-val>).\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-properties-of-array-iterator-instances": {"num": "22.1.5.3", "title": "#sec-properties-of-array-iterator-instances Properties of Array Iterator Instances", "html": "<emu-clause id=\"sec-properties-of-array-iterator-instances\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-array-iterator-instances\">#sec-properties-of-array-iterator-instances</span> Properties of Array Iterator Instances</h1>\n        <p>Array Iterator instances are ordinary objects that inherit properties from the <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref> intrinsic object. Array Iterator instances are initially created with the internal slots listed in  <emu-xref href=\"#table-48\"><a href=\"#table-48\" class=\"excluded-xref\" excluded-id=\"table-48\">#table-48</a></emu-xref>.</p>\n        <emu-table id=\"table-48\" caption=\"Internal Slots of Array Iterator Instances\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-48\">#table-48</span>: Internal Slots of Array Iterator Instances</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Internal Slot\n              \n              </th>\n              <th>\n                Description\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[IteratedObject]]\n              \n              </td>\n              <td>\n                The object whose array elements are being iterated.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ArrayIteratorNextIndex]]\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> of the next <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> to be examined by this iteration.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ArrayIterationKind]]\n              \n              </td>\n              <td>\n                A String value that identifies what is returned for each element of the iteration. The possible values are: <emu-const>key</emu-const>, <emu-const>value</emu-const>, <emu-const>key+value</emu-const>.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-%setiteratorprototype%.next": {"num": "23.2.5.2.1", "title": "#sec-%setiteratorprototype%.next %SetIteratorPrototype%.next ( )", "html": "<emu-clause id=\"sec-%setiteratorprototype%.next\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%setiteratorprototype%.next\">#sec-%setiteratorprototype%.next</span> %SetIteratorPrototype%.next ( )</h1>\n          <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>O</var> does not have all of the internal slots of a Set Iterator Instance (<emu-xref href=\"#sec-properties-of-set-iterator-instances\"><a href=\"#sec-properties-of-set-iterator-instances\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-set-iterator-instances\">#sec-properties-of-set-iterator-instances</a></emu-xref>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>s</var> be <var>O</var>.[[IteratedSet]].</li><li>Let <var>index</var> be <var>O</var>.[[SetNextIndex]].</li><li>Let <var>itemKind</var> be <var>O</var>.[[SetIterationKind]].</li><li>If <var>s</var> is <emu-val>undefined</emu-val>, return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>s</var> has a [[SetData]] internal slot.</li><li>Let <var>entries</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> that is <var>s</var>.[[SetData]].</li><li>Let <var>numEntries</var> be the number of elements of <var>entries</var>.</li><li>NOTE: <var>numEntries</var> must be redetermined each time this method is evaluated.</li><li>Repeat, while <var>index</var> is less than <var>numEntries</var>,<ol><li>Let <var>e</var> be <var>entries</var>[<var>index</var>].</li><li>Set <var>index</var> to <var>index</var> + 1.</li><li>Set <var>O</var>.[[SetNextIndex]] to <var>index</var>.</li><li>If <var>e</var> is not <emu-const>empty</emu-const>, then<ol><li>If <var>itemKind</var> is <emu-const>key+value</emu-const>, then<ol><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(&#171; <var>e</var>, <var>e</var> &#187;), <emu-val>false</emu-val>).</li></ol></li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>e</var>, <emu-val>false</emu-val>).</li></ol></li></ol></li><li>Set <var>O</var>.[[IteratedSet]] to <emu-val>undefined</emu-val>.</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-createlistiteratorRecord": {"num": "7.4.9", "title": "#sec-createlistiteratorRecord CreateListIteratorRecord ( list )", "html": "<emu-clause id=\"sec-createlistiteratorRecord\" oldids=\"sec-createlistiterator\" aoid=\"CreateListIteratorRecord\">\n      <span id=\"sec-createlistiterator\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createlistiteratorRecord\">#sec-createlistiteratorRecord</span> CreateListIteratorRecord ( <var>list</var> )</h1>\n      <p>The abstract operation CreateListIteratorRecord with argument <var>list</var> creates an Iterator (<emu-xref href=\"#sec-iterator-interface\"><a href=\"#sec-iterator-interface\" class=\"excluded-xref\" excluded-id=\"sec-iterator-interface\">#sec-iterator-interface</a></emu-xref>) object record whose next method returns the successive elements of <var>list</var>. It performs the following steps:</p>\n      <emu-alg><ol><li>Let <var>iterator</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>, &#171; [[IteratedList]], [[ListIteratorNextIndex]] &#187;).</li><li>Set <var>iterator</var>.[[IteratedList]] to <var>list</var>.</li><li>Set <var>iterator</var>.[[ListIteratorNextIndex]] to 0.</li><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-listiteratornext-functions\" title=\"\"><a href=\"#sec-listiteratornext-functions\">ListIteratorNext Functions</a></emu-xref>.</li><li>Let <var>next</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, &#171; &#187;).</li><li>Return <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Iterator]]: <var>iterator</var>, [[NextMethod]]: <var>next</var>, [[Done]]: <emu-val>false</emu-val> }.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The list iterator object is never directly accessible to ECMAScript code.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-listiteratornext-functions\"><h1><span class=\"secnum\">7.4.9.1</span>#sec-listiteratornext-functions ListIteratorNext Functions</h1>...</div></emu-clause>\n  "}, "sec-createstringiterator": {"num": "21.1.5.1", "title": "#sec-createstringiterator CreateStringIterator ( string )", "html": "<emu-clause id=\"sec-createstringiterator\" aoid=\"CreateStringIterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createstringiterator\">#sec-createstringiterator</span> CreateStringIterator ( <var>string</var> )</h1>\n        <p>Several methods of String objects return Iterator objects. The abstract operation CreateStringIterator with argument <var>string</var> is used to create such iterator objects. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>string</var>) is String.</li><li>Let <var>iterator</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>, &#171; [[IteratedString]], [[StringIteratorNextIndex]] &#187;).</li><li>Set <var>iterator</var>.[[IteratedString]] to <var>string</var>.</li><li>Set <var>iterator</var>.[[StringIteratorNextIndex]] to 0.</li><li>Return <var>iterator</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-set-iterator-instances": {"num": "23.2.5.3", "title": "#sec-properties-of-set-iterator-instances Properties of Set Iterator Instances", "html": "<emu-clause id=\"sec-properties-of-set-iterator-instances\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-set-iterator-instances\">#sec-properties-of-set-iterator-instances</span> Properties of Set Iterator Instances</h1>\n        <p>Set Iterator instances are ordinary objects that inherit properties from the <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref> intrinsic object. Set Iterator instances are initially created with the internal slots specified in  <emu-xref href=\"#table-51\"><a href=\"#table-51\" class=\"excluded-xref\" excluded-id=\"table-51\">#table-51</a></emu-xref>.</p>\n        <emu-table id=\"table-51\" caption=\"Internal Slots of Set Iterator Instances\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-51\">#table-51</span>: Internal Slots of Set Iterator Instances</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Internal Slot\n              \n              </th>\n              <th>\n                Description\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[IteratedSet]]\n              \n              </td>\n              <td>\n                The Set object that is being iterated.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[SetNextIndex]]\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> of the next Set data element to be examined by this iterator\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[SetIterationKind]]\n              \n              </td>\n              <td>\n                A String value that identifies what is to be returned for each element of the iteration. The possible values are: <emu-const>key</emu-const>, <emu-const>value</emu-const>, <emu-const>key+value</emu-const>. <emu-const>key</emu-const> and <emu-const>value</emu-const> have the same meaning.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-%arrayiteratorprototype%.next": {"num": "22.1.5.2.1", "title": "#sec-%arrayiteratorprototype%.next %ArrayIteratorPrototype%.next ( )", "html": "<emu-clause id=\"sec-%arrayiteratorprototype%.next\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%arrayiteratorprototype%.next\">#sec-%arrayiteratorprototype%.next</span> %ArrayIteratorPrototype%.next ( )</h1>\n          <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>O</var> does not have all of the internal slots of an Array Iterator Instance (<emu-xref href=\"#sec-properties-of-array-iterator-instances\"><a href=\"#sec-properties-of-array-iterator-instances\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-array-iterator-instances\">#sec-properties-of-array-iterator-instances</a></emu-xref>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>a</var> be <var>O</var>.[[IteratedObject]].</li><li>If <var>a</var> is <emu-val>undefined</emu-val>, return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li><li>Let <var>index</var> be <var>O</var>.[[ArrayIteratorNextIndex]].</li><li>Let <var>itemKind</var> be <var>O</var>.[[ArrayIterationKind]].</li><li>If <var>a</var> has a [[TypedArrayName]] internal slot, then<ol><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>a</var>.[[ViewedArrayBuffer]]) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>len</var> be <var>a</var>.[[ArrayLength]].</li></ol></li><li>Else,<ol><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>a</var>).</li></ol></li><li>If <var>index</var> &#8805; <var>len</var>, then<ol><li>Set <var>O</var>.[[IteratedObject]] to <emu-val>undefined</emu-val>.</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li></ol></li><li>Set <var>O</var>.[[ArrayIteratorNextIndex]] to <var>index</var> + 1.</li><li>If <var>itemKind</var> is <emu-const>key</emu-const>, return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>index</var>, <emu-val>false</emu-val>).</li><li>Let <var>elementKey</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>).</li><li>Let <var>elementValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>a</var>, <var>elementKey</var>).</li><li>If <var>itemKind</var> is <emu-const>value</emu-const>, let <var>result</var> be <var>elementValue</var>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>itemKind</var> is <emu-const>key+value</emu-const>.</li><li>Let <var>result</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(&#171; <var>index</var>, <var>elementValue</var> &#187;).</li></ol></li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>result</var>, <emu-val>false</emu-val>).\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-createarrayiterator": {"num": "22.1.5.1", "title": "#sec-createarrayiterator CreateArrayIterator ( array, kind )", "html": "<emu-clause id=\"sec-createarrayiterator\" aoid=\"CreateArrayIterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createarrayiterator\">#sec-createarrayiterator</span> CreateArrayIterator ( <var>array</var>, <var>kind</var> )</h1>\n        <p>Several methods of Array objects return Iterator objects. The abstract operation CreateArrayIterator with arguments <var>array</var> and <var>kind</var> is used to create such iterator objects. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>array</var>) is Object.</li><li>Let <var>iterator</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>, &#171; [[IteratedObject]], [[ArrayIteratorNextIndex]], [[ArrayIterationKind]] &#187;).</li><li>Set <var>iterator</var>.[[IteratedObject]] to <var>array</var>.</li><li>Set <var>iterator</var>.[[ArrayIteratorNextIndex]] to 0.</li><li>Set <var>iterator</var>.[[ArrayIterationKind]] to <var>kind</var>.</li><li>Return <var>iterator</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-%mapiteratorprototype%.next": {"num": "23.1.5.2.1", "title": "#sec-%mapiteratorprototype%.next %MapIteratorPrototype%.next ( )", "html": "<emu-clause id=\"sec-%mapiteratorprototype%.next\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%mapiteratorprototype%.next\">#sec-%mapiteratorprototype%.next</span> %MapIteratorPrototype%.next ( )</h1>\n          <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>O</var> does not have all of the internal slots of a Map Iterator Instance (<emu-xref href=\"#sec-properties-of-map-iterator-instances\"><a href=\"#sec-properties-of-map-iterator-instances\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-map-iterator-instances\">#sec-properties-of-map-iterator-instances</a></emu-xref>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>m</var> be <var>O</var>.[[Map]].</li><li>Let <var>index</var> be <var>O</var>.[[MapNextIndex]].</li><li>Let <var>itemKind</var> be <var>O</var>.[[MapIterationKind]].</li><li>If <var>m</var> is <emu-val>undefined</emu-val>, return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>m</var> has a [[MapData]] internal slot.</li><li>Let <var>entries</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> that is <var>m</var>.[[MapData]].</li><li>Let <var>numEntries</var> be the number of elements of <var>entries</var>.</li><li>NOTE: <var>numEntries</var> must be redetermined each time this method is evaluated.</li><li>Repeat, while <var>index</var> is less than <var>numEntries</var>,<ol><li>Let <var>e</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Key]], [[Value]] } that is the value of <var>entries</var>[<var>index</var>].</li><li>Set <var>index</var> to <var>index</var> + 1.</li><li>Set <var>O</var>.[[MapNextIndex]] to <var>index</var>.</li><li>If <var>e</var>.[[Key]] is not <emu-const>empty</emu-const>, then<ol><li>If <var>itemKind</var> is <emu-const>key</emu-const>, let <var>result</var> be <var>e</var>.[[Key]].</li><li>Else if <var>itemKind</var> is <emu-const>value</emu-const>, let <var>result</var> be <var>e</var>.[[Value]].</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>itemKind</var> is <emu-const>key+value</emu-const>.</li><li>Let <var>result</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(&#171; <var>e</var>.[[Key]], <var>e</var>.[[Value]] &#187;).</li></ol></li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>result</var>, <emu-val>false</emu-val>).</li></ol></li></ol></li><li>Set <var>O</var>.[[Map]] to <emu-val>undefined</emu-val>.</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-properties-of-map-iterator-instances": {"num": "23.1.5.3", "title": "#sec-properties-of-map-iterator-instances Properties of Map Iterator Instances", "html": "<emu-clause id=\"sec-properties-of-map-iterator-instances\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-map-iterator-instances\">#sec-properties-of-map-iterator-instances</span> Properties of Map Iterator Instances</h1>\n        <p>Map Iterator instances are ordinary objects that inherit properties from the <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref> intrinsic object. Map Iterator instances are initially created with the internal slots described in  <emu-xref href=\"#table-50\"><a href=\"#table-50\" class=\"excluded-xref\" excluded-id=\"table-50\">#table-50</a></emu-xref>.</p>\n        <emu-table id=\"table-50\" caption=\"Internal Slots of Map Iterator Instances\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-50\">#table-50</span>: Internal Slots of Map Iterator Instances</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Internal Slot\n              \n              </th>\n              <th>\n                Description\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[Map]]\n              \n              </td>\n              <td>\n                The Map object that is being iterated.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[MapNextIndex]]\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> of the next Map data element to be examined by this iterator.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[MapIterationKind]]\n              \n              </td>\n              <td>\n                A String value that identifies what is to be returned for each element of the iteration. The possible values are: <emu-const>key</emu-const>, <emu-const>value</emu-const>, <emu-const>key+value</emu-const>.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-properties-of-string-iterator-instances": {"num": "21.1.5.3", "title": "#sec-properties-of-string-iterator-instances Properties of String Iterator Instances", "html": "<emu-clause id=\"sec-properties-of-string-iterator-instances\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-string-iterator-instances\">#sec-properties-of-string-iterator-instances</span> Properties of String Iterator Instances</h1>\n        <p>String Iterator instances are ordinary objects that inherit properties from the <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref> intrinsic object. String Iterator instances are initially created with the internal slots listed in  <emu-xref href=\"#table-46\"><a href=\"#table-46\" class=\"excluded-xref\" excluded-id=\"table-46\">#table-46</a></emu-xref>.</p>\n        <emu-table id=\"table-46\" caption=\"Internal Slots of String Iterator Instances\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-46\">#table-46</span>: Internal Slots of String Iterator Instances</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Internal Slot\n              \n              </th>\n              <th>\n                Description\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[IteratedString]]\n              \n              </td>\n              <td>\n                The String value whose code units are being iterated.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[StringIteratorNextIndex]]\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> of the next string index to be examined by this iteration.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-createmapiterator": {"num": "23.1.5.1", "title": "#sec-createmapiterator CreateMapIterator ( map, kind )", "html": "<emu-clause id=\"sec-createmapiterator\" aoid=\"CreateMapIterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createmapiterator\">#sec-createmapiterator</span> CreateMapIterator ( <var>map</var>, <var>kind</var> )</h1>\n        <p>Several methods of Map objects return Iterator objects. The abstract operation CreateMapIterator with arguments <var>map</var> and <var>kind</var> is used to create such iterator objects. It performs the following steps:</p>\n        <emu-alg><ol><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>map</var>, [[MapData]]).</li><li>Let <var>iterator</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>, &#171; [[Map]], [[MapNextIndex]], [[MapIterationKind]] &#187;).</li><li>Set <var>iterator</var>.[[Map]] to <var>map</var>.</li><li>Set <var>iterator</var>.[[MapNextIndex]] to 0.</li><li>Set <var>iterator</var>.[[MapIterationKind]] to <var>kind</var>.</li><li>Return <var>iterator</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-listiteratornext-functions": {"num": "7.4.9.1", "title": "#sec-listiteratornext-functions ListIteratorNext Functions", "html": "<emu-clause id=\"sec-listiteratornext-functions\" oldids=\"sec-listiterator-next\">\n        <span id=\"sec-listiterator-next\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-listiteratornext-functions\">#sec-listiteratornext-functions</span> ListIteratorNext Functions</h1>\n        <p>A ListIteratorNext function is an anonymous built-in function. When called with no arguments, it performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is Object.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> has an [[IteratedList]] internal slot.</li><li>Let <var>list</var> be <var>O</var>.[[IteratedList]].</li><li>Let <var>index</var> be <var>O</var>.[[ListIteratorNextIndex]].</li><li>Let <var>len</var> be the number of elements of <var>list</var>.</li><li>If <var>index</var> &#8805; <var>len</var>, then<ol><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li></ol></li><li>Set <var>O</var>.[[ListIteratorNextIndex]] to <var>index</var> + 1.</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>list</var>[<var>index</var>], <emu-val>false</emu-val>).\n        </li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of a ListIteratorNext function is 0.</p>\n      </emu-clause>\n    "}}, "figData": {"table-5": "Table 6", "table-46": "Table 54", "table-48": "Table 61", "table-50": "Table 63", "table-51": "Table 64"}}, "to": {"secList": ["sec-%stringiteratorprototype%.next", "sec-properties-of-array-iterator-instances", "sec-%setiteratorprototype%.next", "sec-createlistiteratorRecord", "sec-createstringiterator", "sec-properties-of-set-iterator-instances", "sec-%arrayiteratorprototype%.next", "sec-createarrayiterator", "sec-%mapiteratorprototype%.next", "sec-properties-of-map-iterator-instances", "sec-properties-of-string-iterator-instances", "sec-createmapiterator", "sec-listiteratornext-functions"], "secData": {"sec-%stringiteratorprototype%.next": {"num": "21.1.5.2.1", "title": "#sec-%stringiteratorprototype%.next %StringIteratorPrototype%.next ( )", "html": "<emu-clause id=\"sec-%stringiteratorprototype%.next\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%stringiteratorprototype%.next\">#sec-%stringiteratorprototype%.next</span> %StringIteratorPrototype%.next ( )</h1>\n          <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>O</var> does not have all of the internal slots of a String Iterator Instance (<emu-xref href=\"#sec-properties-of-string-iterator-instances\"><a href=\"#sec-properties-of-string-iterator-instances\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-string-iterator-instances\">#sec-properties-of-string-iterator-instances</a></emu-xref>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>s</var> be <var>O</var>.[[IteratedString]].</li><li>If <var>s</var> is <emu-val>undefined</emu-val>, return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li><li>Let <var>position</var> be <var>O</var>.[[StringNextIndex]].</li><li>Let <var>len</var> be the length of <var>s</var>.</li><li>If <var>position</var> &#8805; <var>len</var>, then<ol><li>Set <var>O</var>.[[IteratedString]] to <emu-val>undefined</emu-val>.</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>cp</var> be !&#160;<emu-xref aoid=\"CodePointAt\"><a href=\"#sec-codepointat\">CodePointAt</a></emu-xref>(<var>s</var>, <var>position</var>).</li><li>Let <var>resultString</var> be the String value containing <var>cp</var>.[[CodeUnitCount]] consecutive code units from <var>s</var> beginning with the code unit at index <var>position</var>.</li><li>Set <var>O</var>.[[StringNextIndex]] to <var>position</var> + <var>cp</var>.[[CodeUnitCount]].</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>resultString</var>, <emu-val>false</emu-val>).\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-properties-of-array-iterator-instances": {"num": "22.1.5.3", "title": "#sec-properties-of-array-iterator-instances Properties of Array Iterator Instances", "html": "<emu-clause id=\"sec-properties-of-array-iterator-instances\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-array-iterator-instances\">#sec-properties-of-array-iterator-instances</span> Properties of Array Iterator Instances</h1>\n        <p>Array Iterator instances are ordinary objects that inherit properties from the <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref> intrinsic object. Array Iterator instances are initially created with the internal slots listed in  <emu-xref href=\"#table-48\"><a href=\"#table-48\" class=\"excluded-xref\" excluded-id=\"table-48\">#table-48</a></emu-xref>.</p>\n        <emu-table id=\"table-48\" caption=\"Internal Slots of Array Iterator Instances\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-48\">#table-48</span>: Internal Slots of Array Iterator Instances</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Internal Slot\n              \n              </th>\n              <th>\n                Description\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[IteratedArrayLike]]\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref> that is being iterated.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ArrayLikeNextIndex]]\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> of the next element to be examined by this iterator.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ArrayLikeIterationKind]]\n              \n              </td>\n              <td>\n                A String value that identifies what is returned for each element of the iteration. The possible values are: <emu-const>key</emu-const>, <emu-const>value</emu-const>, <emu-const>key+value</emu-const>.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-%setiteratorprototype%.next": {"num": "23.2.5.2.1", "title": "#sec-%setiteratorprototype%.next %SetIteratorPrototype%.next ( )", "html": "<emu-clause id=\"sec-%setiteratorprototype%.next\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%setiteratorprototype%.next\">#sec-%setiteratorprototype%.next</span> %SetIteratorPrototype%.next ( )</h1>\n          <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>O</var> does not have all of the internal slots of a Set Iterator Instance (<emu-xref href=\"#sec-properties-of-set-iterator-instances\"><a href=\"#sec-properties-of-set-iterator-instances\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-set-iterator-instances\">#sec-properties-of-set-iterator-instances</a></emu-xref>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>s</var> be <var>O</var>.[[IteratedSet]].</li><li>Let <var>index</var> be <var>O</var>.[[SetNextIndex]].</li><li>Let <var>itemKind</var> be <var>O</var>.[[SetIterationKind]].</li><li>If <var>s</var> is <emu-val>undefined</emu-val>, return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>s</var> has a [[SetData]] internal slot.</li><li>Let <var>entries</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> that is <var>s</var>.[[SetData]].</li><li>Let <var>numEntries</var> be the number of elements of <var>entries</var>.</li><li>NOTE: <var>numEntries</var> must be redetermined each time this method is evaluated.</li><li>Repeat, while <var>index</var> is less than <var>numEntries</var>,<ol><li>Let <var>e</var> be <var>entries</var>[<var>index</var>].</li><li>Set <var>index</var> to <var>index</var> + 1.</li><li>Set <var>O</var>.[[SetNextIndex]] to <var>index</var>.</li><li>If <var>e</var> is not <emu-const>empty</emu-const>, then<ol><li>If <var>itemKind</var> is <emu-const>key+value</emu-const>, then<ol><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(&#171; <var>e</var>, <var>e</var> &#187;), <emu-val>false</emu-val>).</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>itemKind</var> is <emu-const>value</emu-const>.</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>e</var>, <emu-val>false</emu-val>).</li></ol></li></ol></li><li>Set <var>O</var>.[[IteratedSet]] to <emu-val>undefined</emu-val>.</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-createlistiteratorRecord": {"num": "7.4.9", "title": "#sec-createlistiteratorRecord CreateListIteratorRecord ( list )", "html": "<emu-clause id=\"sec-createlistiteratorRecord\" oldids=\"sec-createlistiterator\" aoid=\"CreateListIteratorRecord\">\n      <span id=\"sec-createlistiterator\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createlistiteratorRecord\">#sec-createlistiteratorRecord</span> CreateListIteratorRecord ( <var>list</var> )</h1>\n      <p>The abstract operation CreateListIteratorRecord with argument <var>list</var> creates an Iterator (<emu-xref href=\"#sec-iterator-interface\"><a href=\"#sec-iterator-interface\" class=\"excluded-xref\" excluded-id=\"sec-iterator-interface\">#sec-iterator-interface</a></emu-xref>) object record whose next method returns the successive elements of <var>list</var>. It performs the following steps:</p>\n      <emu-alg><ol><li>Let <var>iterator</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>, &#171; [[IteratedList]], [[ListNextIndex]] &#187;).</li><li>Set <var>iterator</var>.[[IteratedList]] to <var>list</var>.</li><li>Set <var>iterator</var>.[[ListNextIndex]] to 0.</li><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-listiteratornext-functions\" title=\"\"><a href=\"#sec-listiteratornext-functions\">ListIteratorNext Functions</a></emu-xref>.</li><li>Let <var>next</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, &#171; &#187;).</li><li>Return <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Iterator]]: <var>iterator</var>, [[NextMethod]]: <var>next</var>, [[Done]]: <emu-val>false</emu-val> }.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The list iterator object is never directly accessible to ECMAScript code.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-listiteratornext-functions\"><h1><span class=\"secnum\">7.4.9.1</span>#sec-listiteratornext-functions ListIteratorNext Functions</h1>...</div></emu-clause>\n  "}, "sec-createstringiterator": {"num": "21.1.5.1", "title": "#sec-createstringiterator CreateStringIterator ( string )", "html": "<emu-clause id=\"sec-createstringiterator\" aoid=\"CreateStringIterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createstringiterator\">#sec-createstringiterator</span> CreateStringIterator ( <var>string</var> )</h1>\n        <p>Several methods of String objects return Iterator objects. The abstract operation CreateStringIterator with argument <var>string</var> is used to create such iterator objects. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>string</var>) is String.</li><li>Let <var>iterator</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>, &#171; [[IteratedString]], [[StringNextIndex]] &#187;).</li><li>Set <var>iterator</var>.[[IteratedString]] to <var>string</var>.</li><li>Set <var>iterator</var>.[[StringNextIndex]] to 0.</li><li>Return <var>iterator</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-set-iterator-instances": {"num": "23.2.5.3", "title": "#sec-properties-of-set-iterator-instances Properties of Set Iterator Instances", "html": "<emu-clause id=\"sec-properties-of-set-iterator-instances\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-set-iterator-instances\">#sec-properties-of-set-iterator-instances</span> Properties of Set Iterator Instances</h1>\n        <p>Set Iterator instances are ordinary objects that inherit properties from the <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref> intrinsic object. Set Iterator instances are initially created with the internal slots specified in  <emu-xref href=\"#table-51\"><a href=\"#table-51\" class=\"excluded-xref\" excluded-id=\"table-51\">#table-51</a></emu-xref>.</p>\n        <emu-table id=\"table-51\" caption=\"Internal Slots of Set Iterator Instances\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-51\">#table-51</span>: Internal Slots of Set Iterator Instances</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Internal Slot\n              \n              </th>\n              <th>\n                Description\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[IteratedSet]]\n              \n              </td>\n              <td>\n                The Set object that is being iterated.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[SetNextIndex]]\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> of the next [[SetData]] element to be examined by this iterator.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[SetIterationKind]]\n              \n              </td>\n              <td>\n                A String value that identifies what is returned for each element of the iteration. The possible values are <emu-const>value</emu-const> and <emu-const>key+value</emu-const>.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-%arrayiteratorprototype%.next": {"num": "22.1.5.2.1", "title": "#sec-%arrayiteratorprototype%.next %ArrayIteratorPrototype%.next ( )", "html": "<emu-clause id=\"sec-%arrayiteratorprototype%.next\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%arrayiteratorprototype%.next\">#sec-%arrayiteratorprototype%.next</span> %ArrayIteratorPrototype%.next ( )</h1>\n          <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>O</var> does not have all of the internal slots of an Array Iterator Instance (<emu-xref href=\"#sec-properties-of-array-iterator-instances\"><a href=\"#sec-properties-of-array-iterator-instances\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-array-iterator-instances\">#sec-properties-of-array-iterator-instances</a></emu-xref>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>a</var> be <var>O</var>.[[IteratedArrayLike]].</li><li>If <var>a</var> is <emu-val>undefined</emu-val>, return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li><li>Let <var>index</var> be <var>O</var>.[[ArrayLikeNextIndex]].</li><li>Let <var>itemKind</var> be <var>O</var>.[[ArrayLikeIterationKind]].</li><li>If <var>a</var> has a [[TypedArrayName]] internal slot, then<ol><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>a</var>.[[ViewedArrayBuffer]]) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>len</var> be <var>a</var>.[[ArrayLength]].</li></ol></li><li>Else,<ol><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>a</var>).</li></ol></li><li>If <var>index</var> &#8805; <var>len</var>, then<ol><li>Set <var>O</var>.[[IteratedArrayLike]] to <emu-val>undefined</emu-val>.</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li></ol></li><li>Set <var>O</var>.[[ArrayLikeNextIndex]] to <var>index</var> + 1.</li><li>If <var>itemKind</var> is <emu-const>key</emu-const>, return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>index</var>, <emu-val>false</emu-val>).</li><li>Let <var>elementKey</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>).</li><li>Let <var>elementValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>a</var>, <var>elementKey</var>).</li><li>If <var>itemKind</var> is <emu-const>value</emu-const>, let <var>result</var> be <var>elementValue</var>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>itemKind</var> is <emu-const>key+value</emu-const>.</li><li>Let <var>result</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(&#171; <var>index</var>, <var>elementValue</var> &#187;).</li></ol></li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>result</var>, <emu-val>false</emu-val>).\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-createarrayiterator": {"num": "22.1.5.1", "title": "#sec-createarrayiterator CreateArrayIterator ( array, kind )", "html": "<emu-clause id=\"sec-createarrayiterator\" aoid=\"CreateArrayIterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createarrayiterator\">#sec-createarrayiterator</span> CreateArrayIterator ( <var>array</var>, <var>kind</var> )</h1>\n        <p>Several methods of Array objects return Iterator objects. The abstract operation CreateArrayIterator with arguments <var>array</var> and <var>kind</var> is used to create such iterator objects. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>array</var>) is Object.</li><li>Let <var>iterator</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>, &#171; [[IteratedArrayLike]], [[ArrayLikeNextIndex]], [[ArrayLikeIterationKind]] &#187;).</li><li>Set <var>iterator</var>.[[IteratedArrayLike]] to <var>array</var>.</li><li>Set <var>iterator</var>.[[ArrayLikeNextIndex]] to 0.</li><li>Set <var>iterator</var>.[[ArrayLikeIterationKind]] to <var>kind</var>.</li><li>Return <var>iterator</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-%mapiteratorprototype%.next": {"num": "23.1.5.2.1", "title": "#sec-%mapiteratorprototype%.next %MapIteratorPrototype%.next ( )", "html": "<emu-clause id=\"sec-%mapiteratorprototype%.next\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%mapiteratorprototype%.next\">#sec-%mapiteratorprototype%.next</span> %MapIteratorPrototype%.next ( )</h1>\n          <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>O</var> does not have all of the internal slots of a Map Iterator Instance (<emu-xref href=\"#sec-properties-of-map-iterator-instances\"><a href=\"#sec-properties-of-map-iterator-instances\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-map-iterator-instances\">#sec-properties-of-map-iterator-instances</a></emu-xref>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>m</var> be <var>O</var>.[[IteratedMap]].</li><li>Let <var>index</var> be <var>O</var>.[[MapNextIndex]].</li><li>Let <var>itemKind</var> be <var>O</var>.[[MapIterationKind]].</li><li>If <var>m</var> is <emu-val>undefined</emu-val>, return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>m</var> has a [[MapData]] internal slot.</li><li>Let <var>entries</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> that is <var>m</var>.[[MapData]].</li><li>Let <var>numEntries</var> be the number of elements of <var>entries</var>.</li><li>NOTE: <var>numEntries</var> must be redetermined each time this method is evaluated.</li><li>Repeat, while <var>index</var> is less than <var>numEntries</var>,<ol><li>Let <var>e</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Key]], [[Value]] } that is the value of <var>entries</var>[<var>index</var>].</li><li>Set <var>index</var> to <var>index</var> + 1.</li><li>Set <var>O</var>.[[MapNextIndex]] to <var>index</var>.</li><li>If <var>e</var>.[[Key]] is not <emu-const>empty</emu-const>, then<ol><li>If <var>itemKind</var> is <emu-const>key</emu-const>, let <var>result</var> be <var>e</var>.[[Key]].</li><li>Else if <var>itemKind</var> is <emu-const>value</emu-const>, let <var>result</var> be <var>e</var>.[[Value]].</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>itemKind</var> is <emu-const>key+value</emu-const>.</li><li>Let <var>result</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(&#171; <var>e</var>.[[Key]], <var>e</var>.[[Value]] &#187;).</li></ol></li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>result</var>, <emu-val>false</emu-val>).</li></ol></li></ol></li><li>Set <var>O</var>.[[IteratedMap]] to <emu-val>undefined</emu-val>.</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-properties-of-map-iterator-instances": {"num": "23.1.5.3", "title": "#sec-properties-of-map-iterator-instances Properties of Map Iterator Instances", "html": "<emu-clause id=\"sec-properties-of-map-iterator-instances\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-map-iterator-instances\">#sec-properties-of-map-iterator-instances</span> Properties of Map Iterator Instances</h1>\n        <p>Map Iterator instances are ordinary objects that inherit properties from the <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref> intrinsic object. Map Iterator instances are initially created with the internal slots described in  <emu-xref href=\"#table-50\"><a href=\"#table-50\" class=\"excluded-xref\" excluded-id=\"table-50\">#table-50</a></emu-xref>.</p>\n        <emu-table id=\"table-50\" caption=\"Internal Slots of Map Iterator Instances\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-50\">#table-50</span>: Internal Slots of Map Iterator Instances</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Internal Slot\n              \n              </th>\n              <th>\n                Description\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[IteratedMap]]\n              \n              </td>\n              <td>\n                The Map object that is being iterated.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[MapNextIndex]]\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> of the next [[MapData]] element to be examined by this iterator.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[MapIterationKind]]\n              \n              </td>\n              <td>\n                A String value that identifies what is returned for each element of the iteration. The possible values are: <emu-const>key</emu-const>, <emu-const>value</emu-const>, <emu-const>key+value</emu-const>.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-properties-of-string-iterator-instances": {"num": "21.1.5.3", "title": "#sec-properties-of-string-iterator-instances Properties of String Iterator Instances", "html": "<emu-clause id=\"sec-properties-of-string-iterator-instances\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-string-iterator-instances\">#sec-properties-of-string-iterator-instances</span> Properties of String Iterator Instances</h1>\n        <p>String Iterator instances are ordinary objects that inherit properties from the <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref> intrinsic object. String Iterator instances are initially created with the internal slots listed in  <emu-xref href=\"#table-46\"><a href=\"#table-46\" class=\"excluded-xref\" excluded-id=\"table-46\">#table-46</a></emu-xref>.</p>\n        <emu-table id=\"table-46\" caption=\"Internal Slots of String Iterator Instances\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-46\">#table-46</span>: Internal Slots of String Iterator Instances</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Internal Slot\n              \n              </th>\n              <th>\n                Description\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[IteratedString]]\n              \n              </td>\n              <td>\n                The String value whose code units are being iterated.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[StringNextIndex]]\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> of the next string element (code unit) to be examined by this iterator.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-createmapiterator": {"num": "23.1.5.1", "title": "#sec-createmapiterator CreateMapIterator ( map, kind )", "html": "<emu-clause id=\"sec-createmapiterator\" aoid=\"CreateMapIterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createmapiterator\">#sec-createmapiterator</span> CreateMapIterator ( <var>map</var>, <var>kind</var> )</h1>\n        <p>Several methods of Map objects return Iterator objects. The abstract operation CreateMapIterator with arguments <var>map</var> and <var>kind</var> is used to create such iterator objects. It performs the following steps:</p>\n        <emu-alg><ol><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>map</var>, [[MapData]]).</li><li>Let <var>iterator</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>, &#171; [[IteratedMap]], [[MapNextIndex]], [[MapIterationKind]] &#187;).</li><li>Set <var>iterator</var>.[[IteratedMap]] to <var>map</var>.</li><li>Set <var>iterator</var>.[[MapNextIndex]] to 0.</li><li>Set <var>iterator</var>.[[MapIterationKind]] to <var>kind</var>.</li><li>Return <var>iterator</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-listiteratornext-functions": {"num": "7.4.9.1", "title": "#sec-listiteratornext-functions ListIteratorNext Functions", "html": "<emu-clause id=\"sec-listiteratornext-functions\" oldids=\"sec-listiterator-next\">\n        <span id=\"sec-listiterator-next\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-listiteratornext-functions\">#sec-listiteratornext-functions</span> ListIteratorNext Functions</h1>\n        <p>A ListIteratorNext function is an anonymous built-in function. When called with no arguments, it performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is Object.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> has an [[IteratedList]] internal slot.</li><li>Let <var>list</var> be <var>O</var>.[[IteratedList]].</li><li>Let <var>index</var> be <var>O</var>.[[ListNextIndex]].</li><li>Let <var>len</var> be the number of elements of <var>list</var>.</li><li>If <var>index</var> &#8805; <var>len</var>, then<ol><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li></ol></li><li>Set <var>O</var>.[[ListNextIndex]] to <var>index</var> + 1.</li><li>Return <emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>list</var>[<var>index</var>], <emu-val>false</emu-val>).\n        </li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of a ListIteratorNext function is 0.</p>\n      </emu-clause>\n    "}}, "figData": {"table-5": "Table 6", "table-46": "Table 54", "table-48": "Table 61", "table-50": "Table 63", "table-51": "Table 64"}}}