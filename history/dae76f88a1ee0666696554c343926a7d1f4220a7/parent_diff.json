{"from": {"secList": ["sec-object-environment-records-setmutablebinding-n-v-s", "sec-object-environment-records-hasbinding-n", "sec-object-environment-records-getbindingvalue-n-s", "sec-object-environment-records-deletebinding-n", "sec-object-environment-records-createmutablebinding-n-d"], "secData": {"sec-object-environment-records-setmutablebinding-n-v-s": {"num": "9.1.1.2.5", "title": "#sec-object-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )", "html": "<emu-clause id=\"sec-object-environment-records-setmutablebinding-n-v-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-setmutablebinding-n-v-s\">#sec-object-environment-records-setmutablebinding-n-v-s</span> SetMutableBinding ( <var>N</var>, <var>V</var>, <var>S</var> )</h1>\n          <p>The SetMutableBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>S</var> (a Boolean). It attempts to set the value of the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s associated binding object's property whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. A property named <var>N</var> normally already exists but if it does not or is not currently writable, error handling is determined by <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be <var>envRec</var>.[[BindingObject]].</li><li>Let <var>stillExists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>stillExists</var> is <emu-val>false</emu-val> and <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>bindings</var>, <var>N</var>, <var>V</var>, <var>S</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-hasbinding-n": {"num": "9.1.1.2.1", "title": "#sec-object-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-hasbinding-n\">#sec-object-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The HasBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if its associated binding object has a property whose name is the value of the argument <var>N</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be <var>envRec</var>.[[BindingObject]].</li><li>Let <var>foundBinding</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>foundBinding</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>envRec</var>.[[IsWithEnvironment]] is <emu-val>false</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>unscopables</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindings</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@unscopables</a></emu-xref>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>unscopables</var>) is Object, then<ol><li>Let <var>blocked</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>unscopables</var>, <var>N</var>)).</li><li>If <var>blocked</var> is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-getbindingvalue-n-s": {"num": "9.1.1.2.6", "title": "#sec-object-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-object-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-getbindingvalue-n-s\">#sec-object-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The GetBindingValue concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It returns the value of its associated binding object's property whose name is the String value of the argument identifier <var>N</var>. The property should already exist but if it does not the result depends upon <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be <var>envRec</var>.[[BindingObject]].</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>value</var> is <emu-val>false</emu-val>, then<ol><li>If <var>S</var> is <emu-val>false</emu-val>, return the value <emu-val>undefined</emu-val>; otherwise throw a <emu-val>ReferenceError</emu-val> exception.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-deletebinding-n": {"num": "9.1.1.2.7", "title": "#sec-object-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-deletebinding-n\">#sec-object-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The DeleteBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It can only delete bindings that correspond to properties of the environment object whose [[Configurable]] attribute have the value <emu-val>true</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be <var>envRec</var>.[[BindingObject]].</li><li>Return ? <var>bindings</var>.[[Delete]](<var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-createmutablebinding-n-d": {"num": "9.1.1.2.2", "title": "#sec-object-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )", "html": "<emu-clause id=\"sec-object-environment-records-createmutablebinding-n-d\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-createmutablebinding-n-d\">#sec-object-environment-records-createmutablebinding-n-d</span> CreateMutableBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The CreateMutableBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>D</var> (a Boolean). It creates in an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s associated binding object a property whose name is the String value and initializes it to the value <emu-val>undefined</emu-val>. If <var>D</var> has the value <emu-val>true</emu-val>, the new property's [[Configurable]] attribute is set to <emu-val>true</emu-val>; otherwise it is set to <emu-val>false</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be <var>envRec</var>.[[BindingObject]].</li><li>Return ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>bindings</var>, <var>N</var>, PropertyDescriptor { [[Value]]: <emu-val>undefined</emu-val>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>D</var> }).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Normally <var>envRec</var> will not have a binding for <var>N</var> but if it does, the semantics of <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref> may result in an existing binding being replaced or shadowed or cause an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> to be returned.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}}, "figData": {}}, "to": {"secList": ["sec-object-environment-records-setmutablebinding-n-v-s", "sec-object-environment-records-hasbinding-n", "sec-object-environment-records-getbindingvalue-n-s", "sec-object-environment-records-deletebinding-n", "sec-object-environment-records-createmutablebinding-n-d"], "secData": {"sec-object-environment-records-setmutablebinding-n-v-s": {"num": "9.1.1.2.5", "title": "#sec-object-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )", "html": "<emu-clause id=\"sec-object-environment-records-setmutablebinding-n-v-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-setmutablebinding-n-v-s\">#sec-object-environment-records-setmutablebinding-n-v-s</span> SetMutableBinding ( <var>N</var>, <var>V</var>, <var>S</var> )</h1>\n          <p>The SetMutableBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>S</var> (a Boolean). It attempts to set the value of the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s associated binding object's property whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. A property named <var>N</var> normally already exists but if it does not or is not currently writable, error handling is determined by <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindingObject</var> be <var>envRec</var>.[[BindingObject]].</li><li>Let <var>stillExists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindingObject</var>, <var>N</var>).</li><li>If <var>stillExists</var> is <emu-val>false</emu-val> and <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>bindingObject</var>, <var>N</var>, <var>V</var>, <var>S</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-hasbinding-n": {"num": "9.1.1.2.1", "title": "#sec-object-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-hasbinding-n\">#sec-object-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The HasBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if its associated binding object has a property whose name is the value of the argument <var>N</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindingObject</var> be <var>envRec</var>.[[BindingObject]].</li><li>Let <var>foundBinding</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindingObject</var>, <var>N</var>).</li><li>If <var>foundBinding</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>envRec</var>.[[IsWithEnvironment]] is <emu-val>false</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>unscopables</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindingObject</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@unscopables</a></emu-xref>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>unscopables</var>) is Object, then<ol><li>Let <var>blocked</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>unscopables</var>, <var>N</var>)).</li><li>If <var>blocked</var> is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-getbindingvalue-n-s": {"num": "9.1.1.2.6", "title": "#sec-object-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-object-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-getbindingvalue-n-s\">#sec-object-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The GetBindingValue concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It returns the value of its associated binding object's property whose name is the String value of the argument identifier <var>N</var>. The property should already exist but if it does not the result depends upon <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindingObject</var> be <var>envRec</var>.[[BindingObject]].</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindingObject</var>, <var>N</var>).</li><li>If <var>value</var> is <emu-val>false</emu-val>, then<ol><li>If <var>S</var> is <emu-val>false</emu-val>, return the value <emu-val>undefined</emu-val>; otherwise throw a <emu-val>ReferenceError</emu-val> exception.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindingObject</var>, <var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-deletebinding-n": {"num": "9.1.1.2.7", "title": "#sec-object-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-deletebinding-n\">#sec-object-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The DeleteBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It can only delete bindings that correspond to properties of the environment object whose [[Configurable]] attribute have the value <emu-val>true</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindingObject</var> be <var>envRec</var>.[[BindingObject]].</li><li>Return ? <var>bindingObject</var>.[[Delete]](<var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-createmutablebinding-n-d": {"num": "9.1.1.2.2", "title": "#sec-object-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )", "html": "<emu-clause id=\"sec-object-environment-records-createmutablebinding-n-d\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-createmutablebinding-n-d\">#sec-object-environment-records-createmutablebinding-n-d</span> CreateMutableBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The CreateMutableBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>D</var> (a Boolean). It creates in an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s associated binding object a property whose name is the String value and initializes it to the value <emu-val>undefined</emu-val>. If <var>D</var> has the value <emu-val>true</emu-val>, the new property's [[Configurable]] attribute is set to <emu-val>true</emu-val>; otherwise it is set to <emu-val>false</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindingObject</var> be <var>envRec</var>.[[BindingObject]].</li><li>Return ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>bindingObject</var>, <var>N</var>, PropertyDescriptor { [[Value]]: <emu-val>undefined</emu-val>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>D</var> }).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Normally <var>envRec</var> will not have a binding for <var>N</var> but if it does, the semantics of <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref> may result in an existing binding being replaced or shadowed or cause an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> to be returned.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}}, "figData": {}}}