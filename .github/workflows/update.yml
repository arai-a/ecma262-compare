name: Update revisions and PRs

#  push:
#    branches:
#      - master
on:
  schedule:
    # Every 30 minutes
    - cron:  '*/30 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.7"
    - name: Get gh-pages hash
      run: |
        curl \
        --url https://api.github.com/repos/${{ github.repository }}/branches/gh-pages \
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        --header 'content-type: application/json' | \
        python -c 'import sys; import json; print("##[set-output name=sha;]{}".format(json.loads(sys.stdin.read())["commit"]["sha"]))'
      id: hash
    - name: Download Bootstrap
      run: |
        curl -O https://raw.githubusercontent.com/${{github.repository}}/${{steps.hash.outputs.sha}}/Makefile
        curl -O https://raw.githubusercontent.com/${{github.repository}}/${{steps.hash.outputs.sha}}/build.py
        curl -O https://raw.githubusercontent.com/${{github.repository}}/${{steps.hash.outputs.sha}}/config.json
        curl -O https://raw.githubusercontent.com/${{github.repository}}/${{steps.hash.outputs.sha}}/history/revs.json
        curl -O https://raw.githubusercontent.com/${{github.repository}}/${{steps.hash.outputs.sha}}/history/prs.json
        curl -O https://raw.githubusercontent.com/${{github.repository}}/${{steps.hash.outputs.sha}}/requirements.txt
        mkdir -p history
        mv revs.json history
        mv prs.json history
    - name: Setup virtualenv
      run: make py-venv-bootstrap
    - name: Run Bootstrap
      run: make bootstrap
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      id: bootstrap
    - name: Remove Bootstrap
      run: |
        rm Makefile
        rm build.py
        rm config.json
        rm -rf history
        rm requirements.txt
    - name: Checkout
      if: steps.bootstrap.outputs.update == 'Yes'
      uses: actions/checkout@v1
      with:
        ref: gh-pages
    - name: Setup virtualenv
      if: steps.bootstrap.outputs.update == 'Yes'
      run: make py-venv
    - name: Clone ecma262
      if: steps.bootstrap.outputs.update == 'Yes'
      run: make clone
    - name: Update revisions
      if: steps.bootstrap.outputs.update_revs == 'Yes'
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      run: make update5
    - name: Update PRs
      if: steps.bootstrap.outputs.update_prs == 'Yes'
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      run: make pr5
      id: prs
    - name: Commit files
      # Fails if no files to commit
      # This can happen if a PR got new change, and then merged between
      # bootstrap and update.
      continue-on-error: true
      if: steps.bootstrap.outputs.update == 'Yes'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add history
        git commit -m "update history"
    - name: Push changes
      continue-on-error: true
      if: steps.bootstrap.outputs.update == 'Yes'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: gh-pages
        force: false
    - name: Checkout pr-comments
      if: steps.prs.outputs.updated_pr_list != ''
      run: |
        git checkout pr-comments
    - name: Post PR comments data
      if: steps.prs.outputs.updated_pr_list != ''
      run: |
        make store
        make post
      env:
        UPDATED_PR_LIST: ${{ steps.prs.outputs.updated_pr_list }}
        POST_TOKEN: ${{secrets.POST_TOKEN}}
    - name: Commit PR comments JSON
      # Fails if all PRs are commented.
      continue-on-error: true
      if: steps.prs.outputs.updated_pr_list != ''
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pr-comments.json
        git commit -m "update PR comments"
    - name: Push PR comments JSON changes
      continue-on-error: true
      if: steps.prs.outputs.updated_pr_list != ''
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: pr-comments
        force: false
